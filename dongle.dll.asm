;
; +-------------------------------------------------------------------------+
; |      This file was generated by The Interactive Disassembler (IDA)      |
; |           Copyright (c) 2025 Hex-Rays, <support@hex-rays.com>           |
; |                            Freeware version                             |
; +-------------------------------------------------------------------------+
;
; Input SHA256 : 7D93610BABF3E549B6B7401B89B9CCA7EA7AADB4F7D912AE969EC445D213D558
; Input MD5    : 2E8F8CE12B939A47DDCC7827084F530E
; Input CRC32  : 7739D144
; Compiler     : Visual C++

; File Name   : C:\Users\manfr\Desktop\decompile-jar\sas-nativelib\dongle.dll
; Format      : Portable executable for 80386 (PE)
; Imagebase   : 10000000
; Timestamp   : 4AD336E7 (Mon Oct 12 14:02:15 2009)
; Section 1. (virtual address 00001000)
; Virtual size                  : 0000E8A4 (  59556.)
; Section size in file          : 0000EA00 (  59904.)
; Offset to raw data for section: 00000400
; Flags 60000020: Text Executable Readable
; Alignment     : default
; OS type         :  MS Windows
; Application type:  DLL 32bit

.686p
.mmx
.model flat


; Segment type: Pure code
; Segment permissions: Read/Execute
_text segment para public 'CODE' use32
assume cs:_text
;org 10001000h
assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing



sub_10001000 proc near

arg_0= dword ptr  4

dec     eax
mov     edx, eax
and     edx, 80000007h
push    esi
jns     short loc_10001011
dec     edx
or      edx, 0FFFFFFF8h
inc     edx

loc_10001011:
push    7
pop     ecx
sub     ecx, edx
cdq
xor     esi, esi
inc     esi
and     edx, 7
add     eax, edx
shl     esi, cl
mov     ecx, [esp+4+arg_0]
sar     eax, 3
movsx   eax, byte ptr [eax+ecx]
test    eax, esi
setnz   al
pop     esi
retn
sub_10001000 endp




sub_10001033 proc near

arg_0= dword ptr  4
arg_4= dword ptr  8

dec     [esp+arg_0]
mov     eax, [esp+arg_0]
cdq
push    7
pop     ecx
and     edx, ecx
add     eax, edx
mov     edx, [esp+arg_0]
sar     eax, 3
and     edx, 80000007h
jns     short loc_10001057
dec     edx
or      edx, 0FFFFFFF8h
inc     edx

loc_10001057:
sub     ecx, edx
mov     dl, 1
add     eax, esi
shl     dl, cl
cmp     [esp+arg_4], 0
jz      short loc_10001069
or      [eax], dl
retn

loc_10001069:
not     dl
and     [eax], dl
retn
sub_10001033 endp




sub_1000106E proc near
push    esi
push    8
sub     ecx, eax
pop     esi

loc_10001074:
mov     dl, [ecx+eax]
mov     [eax], dl
inc     eax
dec     esi
jnz     short loc_10001074
pop     esi
retn
sub_1000106E endp




sub_1000107F proc near

arg_0= dword ptr  4
arg_4= dword ptr  8

mov     eax, off_10014458 ; "0123456789ABCDEF"
mov     ecx, [esp+arg_4]
push    esi
mov     esi, [esp+4+arg_0]
push    edi
push    8
pop     edi

loc_10001091:
movzx   edx, byte ptr [esi]
shr     edx, 4
mov     dl, [edx+eax]
mov     [ecx], dl
movsx   edx, byte ptr [esi]
and     edx, 0Fh
mov     dl, [edx+eax]
inc     ecx
mov     [ecx], dl
inc     ecx
inc     esi
dec     edi
jnz     short loc_10001091
pop     edi
mov     byte ptr [ecx], 0
pop     esi
retn
sub_1000107F endp




sub_100010B3 proc near

arg_0= dword ptr  4
arg_4= dword ptr  8

mov     edx, [esp+arg_0]
push    ebx
push    esi
mov     esi, [esp+8+arg_4]
push    8
pop     ebx

loc_100010C0:
mov     al, [edx]
cmp     al, 39h ; '9'
movsx   eax, al
jle     short loc_100010CC
sub     eax, 7

loc_100010CC:
mov     cl, [edx+1]
and     eax, 0Fh
cmp     cl, 39h ; '9'
movsx   ecx, cl
jle     short loc_100010DD
sub     ecx, 7

loc_100010DD:
and     ecx, 0Fh
shl     al, 4
add     al, cl
mov     [esi], al
inc     esi
inc     edx
inc     edx
dec     ebx
jnz     short loc_100010C0
mov     [esi], bl
pop     esi
pop     ebx
retn
sub_100010B3 endp




sub_100010F2 proc near
movzx   dx, byte ptr [eax]
movzx   ax, byte ptr [eax+1]
shl     dx, 8
or      dx, ax
add     dx, dx
movzx   eax, dx
mov     edx, eax
sar     edx, 8
mov     [ecx], dl
mov     [ecx+1], al
retn
sub_100010F2 endp



; Attributes: bp-based frame

sub_10001113 proc near

var_C= byte ptr -0Ch
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch

push    ebp
mov     ebp, esp
sub     esp, 0Ch
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    esi
push    edi
lea     eax, [ebp+var_C]
mov     esi, ecx
call    sub_1000106E
xor     edi, edi
inc     edi
cmp     [ebp+arg_4], edi
jl      short loc_1000115A

loc_10001137:
mov     eax, [ebp+arg_0]
movzx   eax, byte ptr [edi+eax]
lea     ecx, [ebp+var_C]
push    ecx
call    sub_10001000
movzx   eax, al
push    eax
push    edi
call    sub_10001033
add     esp, 0Ch
inc     edi
cmp     edi, [ebp+arg_4]
jle     short loc_10001137

loc_1000115A:
mov     ecx, [ebp+var_4]
pop     edi
xor     ecx, ebp        ; StackCookie
pop     esi
call    @__security_check_cookie@4 ; __security_check_cookie(x)
leave
retn
sub_10001113 endp



; Attributes: bp-based frame

sub_10001168 proc near

var_2= byte ptr -2
var_1= byte ptr -1

push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     esi, eax
xor     edi, edi
inc     edi
push    esi
mov     eax, edi
call    sub_10001000
push    esi
mov     [ebp+var_1], al
push    1Dh
pop     eax
call    sub_10001000
pop     ecx
pop     ecx
mov     [ebp+var_2], al

loc_1000118D:
lea     ebx, [edi+1]
push    esi
mov     eax, ebx
call    sub_10001000
movzx   eax, al
push    eax
push    edi
call    sub_10001033
mov     edi, ebx
add     esp, 0Ch
cmp     edi, 37h ; '7'
jle     short loc_1000118D
movzx   eax, [ebp+var_1]
push    eax
push    1Ch
call    sub_10001033
movzx   eax, [ebp+var_2]
push    eax
push    38h ; '8'
call    sub_10001033
add     esp, 10h
pop     edi
pop     esi
pop     ebx
leave
retn
sub_10001168 endp



; Attributes: bp-based frame

sub_100011CC proc near

var_18= dword ptr -18h
var_14= dword ptr -14h
var_10= dword ptr -10h
var_C= byte ptr -0Ch
var_8= dword ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8

push    ebp
mov     ebp, esp
sub     esp, 18h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
mov     eax, [ebp+arg_0]
push    ebx
push    esi
mov     esi, edx
mov     [ebp+var_10], eax
push    edi
lea     eax, [ebp+var_C]
mov     [ebp+var_18], esi
call    sub_1000106E
push    30h ; '0'
push    offset unk_10014168
lea     ecx, [ebp+var_C]
call    sub_10001113
push    30h ; '0'
push    offset unk_10014120
mov     ecx, esi
call    sub_10001113
xor     ebx, ebx
add     esp, 10h
inc     ebx
mov     edi, offset unk_100217E0

loc_1000121A:
push    [ebp+var_18]
mov     eax, ebx
call    sub_10001000
movzx   esi, al
lea     eax, [ebp+var_C]
push    eax
mov     eax, ebx
call    sub_10001000
movzx   eax, al
add     esi, eax
pop     ecx
cmp     esi, 1
pop     ecx
mov     esi, edi
jnz     short loc_10001244
push    1
jmp     short loc_10001246

loc_10001244:
push    0

loc_10001246:
push    ebx
call    sub_10001033
inc     ebx
cmp     ebx, 30h ; '0'
pop     ecx
pop     ecx
jle     short loc_1000121A
push    2
pop     esi
mov     [ebp+var_18], 41h ; 'A'
mov     ebx, esi
mov     [ebp+var_14], esi
jmp     short loc_10001268

loc_10001265:
mov     esi, [ebp+var_14]

loc_10001268:
lea     eax, [esi-1]
push    edi
call    sub_10001000
movzx   eax, al
mov     [ebp+var_8], eax
lea     eax, [esi+4]
push    edi
call    sub_10001000
mov     ecx, [ebp+var_8]
movzx   eax, al
lea     esi, [eax+ecx*2]
mov     eax, [ebp+var_14]
push    edi
call    sub_10001000
movzx   eax, al
lea     esi, [eax+esi*2]
mov     eax, [ebp+var_14]
inc     eax
push    edi
call    sub_10001000
movzx   eax, al
lea     esi, [eax+esi*2]
mov     eax, [ebp+var_14]
add     eax, 2
push    edi
call    sub_10001000
movzx   eax, al
lea     esi, [eax+esi*2]
mov     eax, [ebp+var_14]
add     eax, 3
push    edi
call    sub_10001000
mov     ecx, [ebp+var_18]
movzx   eax, al
lea     eax, [eax+esi*2+1]
lea     eax, unk_100141F8[ecx+eax]
mov     [ebp+var_8], eax
movzx   eax, byte ptr [eax]
shr     eax, 3
add     esp, 18h
and     eax, 80000001h
jns     short loc_100012EF
dec     eax
or      eax, 0FFFFFFFEh
inc     eax

loc_100012EF:
mov     esi, [ebp+var_10]
lea     eax, [ebx-1]
jz      short loc_100012FB
push    1
jmp     short loc_100012FD

loc_100012FB:
push    0

loc_100012FD:
push    eax
call    sub_10001033
mov     eax, [ebp+var_8]
movzx   eax, byte ptr [eax]
shr     eax, 2
and     eax, 80000001h
pop     ecx
pop     ecx
jns     short loc_1000131A
dec     eax
or      eax, 0FFFFFFFEh
inc     eax

loc_1000131A:
mov     esi, [ebp+var_10]
jz      short loc_10001323
push    1
jmp     short loc_10001325

loc_10001323:
push    0

loc_10001325:
push    ebx
call    sub_10001033
mov     eax, [ebp+var_8]
movzx   eax, byte ptr [eax]
shr     eax, 1
and     eax, 80000001h
pop     ecx
pop     ecx
jns     short loc_10001341
dec     eax
or      eax, 0FFFFFFFEh
inc     eax

loc_10001341:
mov     esi, [ebp+var_10]
lea     eax, [ebx+1]
jz      short loc_1000134D
push    1
jmp     short loc_1000134F

loc_1000134D:
push    0

loc_1000134F:
push    eax
call    sub_10001033
mov     eax, [ebp+var_8]
movzx   eax, byte ptr [eax]
and     eax, 80000001h
pop     ecx
pop     ecx
jns     short loc_10001369
dec     eax
or      eax, 0FFFFFFFEh
inc     eax

loc_10001369:
mov     esi, [ebp+var_10]
lea     eax, [ebx+2]
jz      short loc_10001375
push    1
jmp     short loc_10001377

loc_10001375:
push    0

loc_10001377:
push    eax
call    sub_10001033
add     [ebp+var_14], 6
add     [ebp+var_18], 41h ; 'A'
add     ebx, 4
cmp     ebx, 1Eh
pop     ecx
pop     ecx
jle     loc_10001265
mov     ecx, [ebp+var_10]
push    20h ; ' '
push    offset unk_100141B0
call    sub_10001113
pop     ecx
pop     ecx
mov     ecx, [ebp+var_4]
pop     edi
pop     esi
xor     ecx, ebp        ; StackCookie
pop     ebx
call    @__security_check_cookie@4 ; __security_check_cookie(x)
leave
retn
sub_100011CC endp



; Attributes: bp-based frame fpd=68h

sub_100013B3 proc near

var_B0= dword ptr -0B0h
var_AC= dword ptr -0ACh
var_A8= dword ptr -0A8h
var_A4= byte ptr -0A4h
var_9C= byte ptr -9Ch
var_24= byte ptr -24h
var_1C= byte ptr -1Ch
var_14= byte ptr -14h
var_C= byte ptr -0Ch
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= byte ptr  10h
arg_C= dword ptr  14h

push    ebp
lea     ebp, [esp-68h]
sub     esp, 0B0h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+68h+var_4], eax
mov     eax, [ebp+68h+arg_C]
mov     ecx, [ebp+68h+arg_0]
push    ebx
push    esi
mov     [ebp+68h+var_B0], eax
push    edi
lea     eax, [ebp+68h+var_14]
call    sub_1000106E
mov     ecx, [ebp+68h+arg_4]
lea     eax, [ebp+68h+var_C]
call    sub_1000106E
push    38h ; '8'
push    offset unk_100140D8
lea     ecx, [ebp+68h+var_C]
call    sub_10001113
pop     ecx
pop     ecx
lea     ecx, [ebp+68h+var_C]
lea     eax, [ebp+68h+var_A4]
call    sub_1000106E
xor     edi, edi
inc     edi
lea     esi, [ebp+68h+var_9C]

loc_10001409:
lea     ecx, [esi-8]
mov     eax, esi
call    sub_1000106E
movzx   eax, byte_10014444[edi]
cmp     eax, 1
jl      short loc_1000142B
mov     ebx, eax

loc_10001421:
mov     eax, esi
call    sub_10001168
dec     ebx
jnz     short loc_10001421

loc_1000142B:
inc     edi
add     esi, 8
cmp     edi, 10h
jle     short loc_10001409
lea     ecx, [ebp+68h+var_14]
lea     eax, [ebp+68h+var_C]
call    sub_1000106E
push    40h ; '@'
push    offset unk_10014000
lea     ecx, [ebp+68h+var_C]
call    sub_10001113
xor     eax, eax
mov     edi, offset unk_100217E0
stosd
stosd
pop     ecx
lea     eax, [ebp+68h+var_24]
pop     ecx
lea     ebx, [ebp+68h+var_9C]
mov     [ebp+68h+var_A8], eax
mov     [ebp+68h+var_AC], 10h

loc_10001469:
lea     ecx, [ebp+68h+var_C]
lea     eax, [ebp+68h+var_14]
call    sub_1000106E
xor     edi, edi
inc     edi

loc_10001477:
lea     ecx, [ebp+68h+var_14]
lea     eax, [edi+20h]
push    ecx
call    sub_10001000
movzx   eax, al
push    eax
push    edi
lea     esi, [ebp+68h+var_C]
call    sub_10001033
add     esp, 0Ch
inc     edi
cmp     edi, 20h ; ' '
jle     short loc_10001477
cmp     [ebp+68h+arg_8], 1
lea     eax, [ebp+68h+var_1C]
mov     ecx, esi
push    eax
mov     edx, ebx
jz      short loc_100014AA
mov     edx, [ebp+68h+var_A8]

loc_100014AA:
call    sub_100011CC
xor     edi, edi
pop     ecx
inc     edi

loc_100014B3:
lea     eax, [ebp+68h+var_1C]
push    eax
mov     eax, edi
call    sub_10001000
movzx   esi, al
lea     eax, [ebp+68h+var_14]
push    eax
mov     eax, edi
call    sub_10001000
movzx   eax, al
add     esi, eax
pop     ecx
cmp     esi, 1
pop     ecx
lea     eax, [edi+20h]
lea     esi, [ebp+68h+var_C]
jnz     short loc_100014E2
push    1
jmp     short loc_100014E4

loc_100014E2:
push    0

loc_100014E4:
push    eax
call    sub_10001033
inc     edi
cmp     edi, 20h ; ' '
pop     ecx
pop     ecx
jle     short loc_100014B3
sub     [ebp+68h+var_A8], 8
add     ebx, 8
dec     [ebp+68h+var_AC]
jnz     loc_10001469
push    40h ; '@'
push    offset unk_10014090
lea     ecx, [ebp+68h+var_C]
call    sub_10001113
push    40h ; '@'
push    offset unk_10014048
lea     ecx, [ebp+68h+var_C]
call    sub_10001113
mov     esi, [ebp+68h+var_B0]
add     esp, 10h
lea     ecx, [ebp+68h+var_C]
mov     eax, esi
call    sub_1000106E
mov     ecx, [ebp+68h+var_4]
pop     edi
mov     byte ptr [esi+8], 0
pop     esi
xor     ecx, ebp        ; StackCookie
xor     eax, eax
pop     ebx
call    @__security_check_cookie@4 ; __security_check_cookie(x)
add     ebp, 68h ; 'h'
leave
retn
sub_100013B3 endp



; Attributes: bp-based frame

sub_10001548 proc near

var_40= word ptr -40h
var_3C= byte ptr -3Ch
Str= byte ptr -30h
var_20= byte ptr -20h
var_1C= byte ptr -1Ch
var_1B= byte ptr -1Bh
var_10= byte ptr -10h
var_F= byte ptr -0Fh
var_E= byte ptr -0Eh
var_D= byte ptr -0Dh
var_C= byte ptr -0Ch
var_B= byte ptr -0Bh
var_A= byte ptr -0Ah
var_9= byte ptr -9
var_8= byte ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h
arg_C= dword ptr  14h

push    ebp
mov     ebp, esp
sub     esp, 40h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
cmp     [ebp+arg_8], 0
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
mov     esi, [ebp+arg_0]
push    edi
mov     [ebp+var_B], 65h ; 'e'
mov     [ebp+var_10], 64h ; 'd'
mov     [ebp+var_8], 0
mov     [ebp+var_D], 73h ; 's'
mov     [ebp+var_C], 68h ; 'h'
jz      short loc_10001585
mov     [ebp+var_F], 62h ; 'b'
mov     [ebp+var_E], 5Fh ; '_'
jmp     short loc_1000158D

loc_10001585:
mov     [ebp+var_F], 61h ; 'a'
mov     [ebp+var_E], 74h ; 't'

loc_1000158D:
mov     eax, [ebp+arg_C]
lea     ecx, [ebp+var_40]
call    sub_100010F2
mov     ax, [ebp+var_40]
mov     [ebp+var_A], al
mov     [ebp+var_9], ah
lea     eax, [esi+1]
push    eax             ; Source
lea     eax, [ebp+Str]
push    11h             ; SizeInBytes
push    eax             ; Destination
call    _strcpy_s
lea     eax, [ebp+Str]
push    eax             ; Str
call    _strlen
add     esp, 10h
cmp     eax, 10h
jge     short loc_100015D7
push    10h
pop     edx
sub     edx, eax
push    edx             ; Size
lea     ecx, [ebp+eax+Str]
push    30h ; '0'       ; Val
push    ecx             ; void *
call    _memset
add     esp, 0Ch

loc_100015D7:
lea     eax, [ebp+var_3C]
push    eax
lea     eax, [ebp+Str]
push    eax
mov     [ebp+var_20], 0
call    sub_100010B3
mov     al, [esi]
mov     [ebp+var_1C], al
lea     esi, [ebp+var_3C]
lea     edi, [ebp+var_1B]
movsd
push    ebx
push    1
lea     eax, [ebp+var_10]
movsw
push    eax
lea     eax, [ebp+var_1C]
push    eax
movsb
call    sub_100013B3
mov     ecx, [ebp+var_4]
add     esp, 18h
pop     edi
pop     esi
xor     ecx, ebp        ; StackCookie
pop     ebx
call    @__security_check_cookie@4 ; __security_check_cookie(x)
leave
retn
sub_10001548 endp




sub_10001619 proc near

arg_0= dword ptr  4
arg_4= dword ptr  8

mov     eax, [esp+arg_0]
test    eax, eax
jz      short loc_10001640
mov     ecx, [esp+arg_4]
test    ecx, ecx
jbe     short locret_1000165E
inc     eax
dec     ecx
shr     ecx, 1
inc     ecx
push    ebx

loc_1000162F:
mov     dl, [eax-1]
mov     bl, [eax]
mov     [eax-1], bl
mov     [eax], dl
inc     eax
inc     eax
dec     ecx
jnz     short loc_1000162F
pop     ebx
retn

loc_10001640:
call    sub_10003753
test    eax, eax
jz      short locret_1000165E
mov     edx, [eax]
push    offset aInvalidInputPo ; "Invalid input pointer"
push    1Eh
push    offset aDongleCpp ; ".\\Dongle.cpp"
push    2
mov     ecx, eax
call    dword ptr [edx+18h]

locret_1000165E:
retn
sub_10001619 endp

; Exported entry   3. IsSystemDriverInstalled



public IsSystemDriverInstalled
IsSystemDriverInstalled proc near
call    sub_10003753
test    eax, eax
jz      short loc_10001680
mov     edx, [eax]
push    offset aSystemDriverIs ; "System driver is installed"
push    82h
push    offset aDongleCpp ; ".\\Dongle.cpp"
push    1
mov     ecx, eax
call    dword ptr [edx+18h]

loc_10001680:
xor     eax, eax
inc     eax
retn
IsSystemDriverInstalled endp

; [0000001F BYTES: COLLAPSED FUNCTION _wmemcpy_s]
; [0000001F BYTES: COLLAPSED FUNCTION _wmemmove_s]
; [0000001C BYTES: COLLAPSED FUNCTION unknown_libname_6]


; Attributes: bp-based frame

; int __cdecl sub_100016DE(wchar_t *S1, rsize_t N1, wchar_t *S2, rsize_t N)
sub_100016DE proc near

S1= dword ptr  8
N1= dword ptr  0Ch
S2= dword ptr  10h
N= dword ptr  14h

push    ebp
mov     ebp, esp
push    [ebp+N]         ; N
push    [ebp+S2]        ; S2
push    [ebp+N1]        ; N1
push    [ebp+S1]        ; S1
call    _wmemmove_s
mov     eax, [ebp+S1]
add     esp, 10h
pop     ebp
retn
sub_100016DE endp

; [0000001C BYTES: COLLAPSED FUNCTION std::char_traits<char>::_Copy_s(char *,uint,char const *,uint)]
; [0000001C BYTES: COLLAPSED FUNCTION std::char_traits<char>::_Move_s(char *,uint,char const *,uint)]



sub_10001732 proc near
mov     dword ptr [ecx], offset off_10010240
jmp     sub_100044BC
sub_10001732 endp


loc_1000173D:
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset off_10010240
call    sub_100044BC
test    byte ptr [esp+8], 1
jz      short loc_10001759
push    esi
call    ??3@YAXPAX@Z    ; operator delete(void *)
pop     ecx

loc_10001759:
mov     eax, esi
pop     esi
retn    4



; int __stdcall sub_1000175F(LPCCH lpMultiByteStr)
sub_1000175F proc near

lpMultiByteStr= dword ptr  4

push    ebx
mov     ebx, [esp+4+lpMultiByteStr]
push    edi
mov     edi, ecx
and     dword ptr [edi], 0
test    ebx, ebx
jz      short loc_100017AE
push    esi
push    ebx             ; Str
call    _strlen
mov     esi, eax
xor     ecx, ecx
push    2
pop     edx
lea     eax, [esi+1]
mul     edx
seto    cl
neg     ecx
or      ecx, eax
push    ecx             ; unsigned int
call    ??_U@YAPAXI@Z   ; operator new[](uint)
pop     ecx
pop     ecx
mov     [edi], eax
test    eax, eax
jz      short loc_100017AD
push    esi             ; cchWideChar
push    eax             ; lpWideCharStr
push    0FFFFFFFFh      ; cbMultiByte
push    ebx             ; lpMultiByteStr
push    0               ; dwFlags
push    0               ; CodePage
call    ds:MultiByteToWideChar
mov     eax, [edi]
xor     ecx, ecx
mov     [eax+esi*2], cx

loc_100017AD:
pop     esi

loc_100017AE:
mov     eax, edi
pop     edi
pop     ebx
retn    4
sub_1000175F endp

; START OF FUNCTION CHUNK FOR sub_10002486
;   ADDITIONAL PARENT FUNCTION sub_10002FA7
;   ADDITIONAL PARENT FUNCTION sub_100030CA

loc_100017B5:
; __unwind { // loc_1000F68F
mov     eax, [ecx]
test    eax, eax
jz      short locret_100017C2
push    eax             ; void *
call    ??_V@YAXPAX@Z   ; operator delete[](void *)
pop     ecx

locret_100017C2:
retn
; } // starts at 100017B5
; END OF FUNCTION CHUNK FOR sub_10002486



sub_100017C3 proc near

arg_0= dword ptr  4

cmp     [esp+arg_0], 0
push    esi
jz      short loc_100017F8
mov     esi, [ecx+18h]
lea     eax, [ecx+4]
cmp     esi, 10h
jb      short loc_100017DA
mov     edx, [eax]
jmp     short loc_100017DC

loc_100017DA:
mov     edx, eax

loc_100017DC:
cmp     [esp+4+arg_0], edx
jb      short loc_100017F8
cmp     esi, 10h
jb      short loc_100017E9
mov     eax, [eax]

loc_100017E9:
mov     ecx, [ecx+14h]
add     ecx, eax
cmp     ecx, [esp+4+arg_0]
jbe     short loc_100017F8
mov     al, 1
jmp     short loc_100017FA

loc_100017F8:
xor     al, al

loc_100017FA:
pop     esi
retn    4
sub_100017C3 endp




sub_100017FE proc near

arg_0= dword ptr  4

cmp     [esp+arg_0], 0
push    esi
jz      short loc_10001834
mov     esi, [ecx+18h]
lea     eax, [ecx+4]
cmp     esi, 8
jb      short loc_10001815
mov     edx, [eax]
jmp     short loc_10001817

loc_10001815:
mov     edx, eax

loc_10001817:
cmp     [esp+4+arg_0], edx
jb      short loc_10001834
cmp     esi, 8
jb      short loc_10001824
mov     eax, [eax]

loc_10001824:
mov     ecx, [ecx+14h]
lea     eax, [eax+ecx*2]
cmp     eax, [esp+4+arg_0]
jbe     short loc_10001834
mov     al, 1
jmp     short loc_10001836

loc_10001834:
xor     al, al

loc_10001836:
pop     esi
retn    4
sub_100017FE endp




sub_1000183A proc near

arg_0= dword ptr  4
arg_4= byte ptr  8

push    esi
xor     esi, esi
call    ds:GetProcessHeap
cmp     eax, esi
jz      short loc_10001863
mov     ecx, [esp+4+arg_0]
add     ecx, ecx
cmp     [esp+4+arg_4], 1
push    ecx             ; dwBytes
jnz     short loc_10001859
push    8
jmp     short loc_1000185A

loc_10001859:           ; dwFlags
push    esi

loc_1000185A:           ; hHeap
push    eax
call    ds:HeapAlloc
mov     esi, eax

loc_10001863:
mov     eax, esi
pop     esi
retn
sub_1000183A endp

; [0000004A BYTES: COLLAPSED FUNCTION std::_Allocate<char>(uint,char *)]
; [0000004D BYTES: COLLAPSED FUNCTION unknown_libname_1]


; Attributes: bp-based frame

; int __cdecl sub_100018FE(char *)
sub_100018FE proc near

pExceptionObject= dword ptr -0Ch
arg_0= dword ptr  8

push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
sub     esp, 0Ch
test    ecx, ecx
ja      short loc_1000191B
xor     ecx, ecx

loc_1000190D:
mov     eax, ecx
shl     eax, 2
push    eax             ; Size
call    ??2@YAPAXI@Z    ; operator new(uint)
pop     ecx
leave
retn

loc_1000191B:
or      eax, 0FFFFFFFFh
xor     edx, edx
div     ecx
cmp     eax, 4
jnb     short loc_1000190D
and     [ebp+arg_0], 0
lea     eax, [ebp+arg_0]
push    eax             ; char **
lea     ecx, [ebp+pExceptionObject] ; this
call    ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception(char const * const &)
push    offset pThrowInfo ; pThrowInfo
lea     eax, [ebp+pExceptionObject]
push    eax             ; pExceptionObject
mov     [ebp+pExceptionObject], offset off_10010240
call    __CxxThrowException@8 ; _CxxThrowException(x,x)
sub_100018FE endp

db 0CCh



; int __stdcall sub_1000194D(struct std::exception *)
sub_1000194D proc near

arg_0= dword ptr  4

push    esi
push    [esp+4+arg_0]   ; struct std::exception *
mov     esi, ecx
call    ??0exception@std@@QAE@ABV01@@Z ; std::exception::exception(std::exception const &)
mov     dword ptr [esi], offset off_10010240
mov     eax, esi
pop     esi
retn    4
sub_1000194D endp




sub_10001965 proc near
push    esi
mov     esi, ecx
mov     eax, [esi]
test    eax, eax
jnz     short loc_10001979
call    __invalid_parameter_noinfo
mov     eax, [esi]
test    eax, eax
jz      short loc_1000197D

loc_10001979:
mov     eax, [eax]
jmp     short loc_1000197F

loc_1000197D:
xor     eax, eax

loc_1000197F:
mov     ecx, [esi+4]
cmp     ecx, [eax+14h]
jnz     short loc_1000198C
call    __invalid_parameter_noinfo

loc_1000198C:
mov     eax, [esi+4]
add     eax, 8
pop     esi
retn
sub_10001965 endp




sub_10001994 proc near
push    esi
mov     esi, ecx
mov     eax, [esi]
test    eax, eax
jnz     short loc_100019A8
call    __invalid_parameter_noinfo
mov     eax, [esi]
test    eax, eax
jz      short loc_100019AC

loc_100019A8:
mov     eax, [eax]
jmp     short loc_100019AE

loc_100019AC:
xor     eax, eax

loc_100019AE:
mov     ecx, [esi+4]
cmp     ecx, [eax+14h]
jnz     short loc_100019BB
call    __invalid_parameter_noinfo

loc_100019BB:
mov     eax, [esi+4]
mov     eax, [eax]
mov     [esi+4], eax
mov     eax, esi
pop     esi
retn
sub_10001994 endp




sub_100019C7 proc near

arg_0= dword ptr  4

push    esi
mov     esi, ecx
mov     eax, [esi]
push    edi
mov     edi, [esp+8+arg_0]
test    eax, eax
jz      short loc_100019D9
cmp     eax, [edi]
jz      short loc_100019DE

loc_100019D9:
call    __invalid_parameter_noinfo

loc_100019DE:
mov     eax, [esi+4]
sub     eax, [edi+4]
pop     edi
neg     eax
sbb     eax, eax
inc     eax
pop     esi
retn    4
sub_100019C7 endp




; int __cdecl sub_100019EE(wchar_t *String)
sub_100019EE proc near

String= dword ptr  4

push    ebx
mov     ebx, [esp+4+String]
push    edi
xor     edi, edi
test    ebx, ebx
jz      short loc_10001A20
push    esi
push    ebx             ; String
call    _wcslen
mov     esi, eax
inc     esi
push    edi
push    esi
call    sub_1000183A
mov     edi, eax
add     esp, 0Ch
test    edi, edi
jz      short loc_10001A1F
push    ebx             ; Source
push    esi             ; SizeInWords
push    edi             ; Destination
call    _wcscpy_s
add     esp, 0Ch

loc_10001A1F:
pop     esi

loc_10001A20:
mov     eax, edi
pop     edi
pop     ebx
retn
sub_100019EE endp

; [0000001C BYTES: COLLAPSED FUNCTION std::string::_Eos(uint)]



sub_10001A41 proc near

arg_0= dword ptr  4

cmp     dword ptr [ecx+18h], 8
mov     eax, [esp+arg_0]
mov     [ecx+14h], eax
jb      short loc_10001A53
mov     ecx, [ecx+4]
jmp     short loc_10001A56

loc_10001A53:
add     ecx, 4

loc_10001A56:
xor     edx, edx
mov     [ecx+eax*2], dx
retn    4
sub_10001A41 endp

; [0000004B BYTES: COLLAPSED FUNCTION std::string::_Tidy(bool,uint)]
; [0000004B BYTES: COLLAPSED FUNCTION std::wstring::_Tidy(bool,uint)]


; Attributes: bp-based frame

sub_10001AF5 proc near

arg_0= dword ptr  8
arg_4= dword ptr  0Ch

push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, ecx
cmp     [esi+14h], edi
jnb     short loc_10001B09
call    sub_1000F4E5

loc_10001B09:
mov     eax, [esi+14h]
sub     eax, edi
cmp     eax, [ebp+arg_4]
jnb     short loc_10001B16
mov     [ebp+arg_4], eax

loc_10001B16:
cmp     [ebp+arg_4], 0
jbe     short loc_10001B5C
mov     ecx, [esi+18h]
push    ebx
lea     edx, [esi+4]
cmp     ecx, 10h
jb      short loc_10001B2C
mov     ebx, [edx]
jmp     short loc_10001B2E

loc_10001B2C:
mov     ebx, edx

loc_10001B2E:
cmp     ecx, 10h
jb      short loc_10001B35
mov     edx, [edx]

loc_10001B35:
sub     eax, [ebp+arg_4]
add     ebx, edi
add     ebx, [ebp+arg_4]
push    eax             ; SourceSize
push    ebx             ; Source
sub     ecx, edi
push    ecx             ; DestinationSize
add     edx, edi
push    edx             ; Destination
call    ?_Move_s@?$char_traits@D@std@@SAPADPADIPBDI@Z ; std::char_traits<char>::_Move_s(char *,uint,char const *,uint)
mov     eax, [esi+14h]
sub     eax, [ebp+arg_4]
add     esp, 10h
push    eax
mov     ecx, esi
call    ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::string::_Eos(uint)
pop     ebx

loc_10001B5C:
pop     edi
mov     eax, esi
pop     esi
pop     ebp
retn    8
sub_10001AF5 endp



; Attributes: bp-based frame

sub_10001B64 proc near

var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch

push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, ecx
cmp     [esi+14h], edi
jnb     short loc_10001B79
call    sub_1000F4E5

loc_10001B79:
mov     eax, [esi+14h]
sub     eax, edi
cmp     eax, [ebp+arg_4]
jnb     short loc_10001B86
mov     [ebp+arg_4], eax

loc_10001B86:
cmp     [ebp+arg_4], 0
jbe     short loc_10001BDC
mov     ecx, [esi+18h]
push    ebx
lea     edx, [esi+4]
cmp     ecx, 8
jb      short loc_10001B9F
mov     ebx, [edx]
mov     [ebp+arg_0], ebx
jmp     short loc_10001BA2

loc_10001B9F:
mov     [ebp+arg_0], edx

loc_10001BA2:
cmp     ecx, 8
jb      short loc_10001BA9
mov     edx, [edx]

loc_10001BA9:
mov     ebx, [ebp+arg_4]
sub     eax, ebx
push    eax             ; N
mov     [ebp+var_4], edx
mov     edx, [ebp+arg_0]
lea     eax, [edi+ebx]
lea     eax, [edx+eax*2]
push    eax             ; S2
mov     eax, [ebp+var_4]
sub     ecx, edi
push    ecx             ; N1
lea     eax, [eax+edi*2]
push    eax             ; S1
call    sub_100016DE
mov     eax, [esi+14h]
add     esp, 10h
sub     eax, ebx
push    eax
mov     ecx, esi
call    sub_10001A41
pop     ebx

loc_10001BDC:
pop     edi
mov     eax, esi
pop     esi
leave
retn    8
sub_10001B64 endp




sub_10001BE4 proc near

arg_0= dword ptr  4
arg_4= dword ptr  8
arg_8= dword ptr  0Ch

push    0
push    1               ; char *
call    sub_10003A42
pop     ecx
pop     ecx
test    eax, eax
jz      short loc_10001BF9
mov     ecx, [esp+arg_0]
mov     [eax], ecx

loc_10001BF9:
lea     ecx, [eax+4]
test    ecx, ecx
jz      short loc_10001C06
mov     edx, [esp+arg_4]
mov     [ecx], edx

loc_10001C06:
lea     ecx, [eax+8]
test    ecx, ecx
jz      short locret_10001C15
mov     edx, [esp+arg_8]
mov     edx, [edx]
mov     [ecx], edx

locret_10001C15:
retn    0Ch
sub_10001BE4 endp

; [000000E1 BYTES: COLLAPSED FUNCTION std::string::_Copy(uint,uint)]
align 2
; [000000E6 BYTES: COLLAPSED FUNCTION std::wstring::_Copy(uint,uint)]
db 0CCh



sub_10001DE1 proc near
push    esi
push    0
push    1               ; char *
mov     esi, ecx
call    sub_100018FE
pop     ecx
pop     ecx
test    eax, eax
jz      short loc_10001DF7
mov     [eax], esi
jmp     short loc_10001DF9

loc_10001DF7:
xor     eax, eax

loc_10001DF9:
mov     [esi], eax
mov     eax, esi
pop     esi
retn    4
sub_10001DE1 endp

; START OF FUNCTION CHUNK FOR sub_100022E2
;   ADDITIONAL PARENT FUNCTION sub_100030CA

loc_10001E01:           ; SourceSize
; __unwind { // loc_1000F6F0
push    0
push    1               ; char
call    ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::string::_Tidy(bool,uint)
retn
; } // starts at 10001E01
; END OF FUNCTION CHUNK FOR sub_100022E2
; [00000015 BYTES: COLLAPSED FUNCTION std::wstring::wstring(void)]
; START OF FUNCTION CHUNK FOR sub_100037FC
;   ADDITIONAL PARENT FUNCTION sub_10002486
;   ADDITIONAL PARENT FUNCTION sub_10002FA7
;   ADDITIONAL PARENT FUNCTION sub_100030CA
;   ADDITIONAL PARENT FUNCTION sub_100039BF
;   ADDITIONAL PARENT FUNCTION sub_10003D3C
;   ADDITIONAL PARENT FUNCTION sub_10003EE6

loc_10001E20:           ; N
; __unwind { // loc_1000F82D
push    0
push    1               ; char
call    ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEX_NI@Z ; std::wstring::_Tidy(bool,uint)
retn
; } // starts at 10001E20
; END OF FUNCTION CHUNK FOR sub_100037FC



sub_10001E2A proc near

arg_0= dword ptr  4
arg_4= byte ptr  8

push    esi
push    edi
mov     edi, [esp+8+arg_0]
mov     esi, ecx
cmp     edi, 0FFFFFFFEh
jbe     short loc_10001E3C
call    sub_1000F4AD

loc_10001E3C:
cmp     [esi+18h], edi
jnb     short loc_10001E4E
push    dword ptr [esi+14h] ; SourceSize
mov     ecx, esi
push    edi             ; int
call    ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::string::_Copy(uint,uint)
jmp     short loc_10001E7B

loc_10001E4E:
cmp     [esp+8+arg_4], 0
jz      short loc_10001E6F
cmp     edi, 10h
jnb     short loc_10001E6F
mov     eax, [esi+14h]
cmp     edi, eax
jnb     short loc_10001E63
mov     eax, edi

loc_10001E63:           ; SourceSize
push    eax
push    1               ; char
mov     ecx, esi
call    ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::string::_Tidy(bool,uint)
jmp     short loc_10001E7B

loc_10001E6F:
test    edi, edi
jnz     short loc_10001E7B
push    edi
mov     ecx, esi
call    ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::string::_Eos(uint)

loc_10001E7B:
xor     eax, eax
cmp     eax, edi
sbb     eax, eax
pop     edi
neg     eax
pop     esi
retn    8
sub_10001E2A endp




sub_10001E88 proc near

arg_0= dword ptr  4
arg_4= byte ptr  8

push    esi
push    edi
mov     edi, [esp+8+arg_0]
mov     esi, ecx
cmp     edi, 7FFFFFFEh
jbe     short loc_10001E9D
call    sub_1000F4AD

loc_10001E9D:
cmp     [esi+18h], edi
jnb     short loc_10001EAF
push    dword ptr [esi+14h] ; N
mov     ecx, esi
push    edi             ; int
call    ?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXII@Z ; std::wstring::_Copy(uint,uint)
jmp     short loc_10001EDC

loc_10001EAF:
cmp     [esp+8+arg_4], 0
jz      short loc_10001ED0
cmp     edi, 8
jnb     short loc_10001ED0
mov     eax, [esi+14h]
cmp     edi, eax
jnb     short loc_10001EC4
mov     eax, edi

loc_10001EC4:           ; N
push    eax
push    1               ; char
mov     ecx, esi
call    ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEX_NI@Z ; std::wstring::_Tidy(bool,uint)
jmp     short loc_10001EDC

loc_10001ED0:
test    edi, edi
jnz     short loc_10001EDC
push    edi
mov     ecx, esi
call    sub_10001A41

loc_10001EDC:
xor     eax, eax
cmp     eax, edi
sbb     eax, eax
pop     edi
neg     eax
pop     esi
retn    8
sub_10001E88 endp



; Attributes: bp-based frame

sub_10001EE9 proc near

var_4= dword ptr -4

push    ebp
mov     ebp, esp
push    ecx
push    esi
push    ecx
mov     [ebp+var_4], esp
mov     esi, ecx
mov     [ebp+var_4], esp
call    sub_10001DE1
mov     eax, esi
pop     esi
leave
retn    4
sub_10001EE9 endp




sub_10001F03 proc near
push    esi
mov     esi, ecx
push    0               ; SourceSize
push    1               ; char
lea     ecx, [esi+0Ch]
mov     dword ptr [esi], offset off_1001024C
call    ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::string::_Tidy(bool,uint)
mov     ecx, esi
pop     esi
jmp     sub_100044BC
sub_10001F03 endp

; [0000000E BYTES: COLLAPSED FUNCTION unknown_libname_2]

loc_10001F2E:
push    esi
mov     esi, ecx
call    sub_10001F03
test    byte ptr [esp+8], 1
jz      short loc_10001F44
push    esi
call    ??3@YAXPAX@Z    ; operator delete(void *)
pop     ecx

loc_10001F44:
mov     eax, esi
pop     esi
retn    4


; Attributes: bp-based frame

sub_10001F4A proc near

arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h

push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     ebx, ecx
cmp     [edi+14h], eax
jnb     short loc_10001F62
call    sub_1000F4E5

loc_10001F62:
mov     esi, [edi+14h]
mov     eax, [ebp+arg_4]
sub     esi, eax
cmp     [ebp+arg_8], esi
jnb     short loc_10001F72
mov     esi, [ebp+arg_8]

loc_10001F72:
mov     ecx, ebx
cmp     ebx, edi
jnz     short loc_10001F90
push    0FFFFFFFFh
add     esi, eax
push    esi
call    sub_10001AF5
push    [ebp+arg_4]
mov     ecx, ebx
push    0
call    sub_10001AF5
jmp     short loc_10001FD3

loc_10001F90:
push    0
push    esi
call    sub_10001E2A
test    al, al
jz      short loc_10001FD3
cmp     dword ptr [edi+18h], 10h
jb      short loc_10001FA7
mov     edi, [edi+4]
jmp     short loc_10001FAA

loc_10001FA7:
add     edi, 4

loc_10001FAA:
mov     ecx, [ebx+18h]
cmp     ecx, 10h
jb      short loc_10001FB7
mov     eax, [ebx+4]
jmp     short loc_10001FBA

loc_10001FB7:
lea     eax, [ebx+4]

loc_10001FBA:
mov     edx, [ebp+arg_4]
push    esi             ; SourceSize
add     edi, edx
push    edi             ; Source
push    ecx             ; DestinationSize
push    eax             ; Destination
call    ?_Copy_s@?$char_traits@D@std@@SAPADPADIPBDI@Z ; std::char_traits<char>::_Copy_s(char *,uint,char const *,uint)
add     esp, 10h
push    esi
mov     ecx, ebx
call    ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::string::_Eos(uint)

loc_10001FD3:
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    0Ch
sub_10001F4A endp



; Attributes: bp-based frame

sub_10001FDC proc near

arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h

push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_4]
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     ebx, ecx
cmp     [edi+14h], eax
jnb     short loc_10001FF4
call    sub_1000F4E5

loc_10001FF4:
mov     esi, [edi+14h]
mov     eax, [ebp+arg_4]
sub     esi, eax
cmp     [ebp+arg_8], esi
jnb     short loc_10002004
mov     esi, [ebp+arg_8]

loc_10002004:
mov     ecx, ebx
cmp     ebx, edi
jnz     short loc_10002022
push    0FFFFFFFFh
add     esi, eax
push    esi
call    sub_10001B64
push    [ebp+arg_4]
mov     ecx, ebx
push    0
call    sub_10001B64
jmp     short loc_10002066

loc_10002022:
push    0
push    esi
call    sub_10001E88
test    al, al
jz      short loc_10002066
cmp     dword ptr [edi+18h], 8
jb      short loc_10002039
mov     edi, [edi+4]
jmp     short loc_1000203C

loc_10002039:
add     edi, 4

loc_1000203C:
mov     ecx, [ebx+18h]
cmp     ecx, 8
jb      short loc_10002049
mov     eax, [ebx+4]
jmp     short loc_1000204C

loc_10002049:
lea     eax, [ebx+4]

loc_1000204C:
mov     edx, [ebp+arg_4]
push    esi             ; N
lea     edx, [edi+edx*2]
push    edx             ; S2
push    ecx             ; N1
push    eax             ; S1
call    unknown_libname_6 ; Microsoft VisualC 2-14/net runtime
add     esp, 10h
push    esi
mov     ecx, ebx
call    sub_10001A41

loc_10002066:
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
pop     ebp
retn    0Ch
sub_10001FDC endp

; [00000072 BYTES: COLLAPSED FUNCTION std::string::assign(char const *,uint)]
; [00000074 BYTES: COLLAPSED FUNCTION std::wstring::assign(wchar_t const *,uint)]


; Attributes: bp-based frame

sub_10002155 proc near

var_4= dword ptr -4

push    ebp
mov     ebp, esp
push    ecx
push    esi
push    ecx
mov     [ebp+var_4], esp
mov     esi, ecx
mov     [ebp+var_4], esp
call    sub_10001EE9
mov     eax, esi
pop     esi
leave
retn    4
sub_10002155 endp

; [00000026 BYTES: COLLAPSED FUNCTION std::string::string(std::string const &)]
; [00000026 BYTES: COLLAPSED FUNCTION std::wstring::wstring(std::wstring const &)]
; [0000001D BYTES: COLLAPSED FUNCTION std::string::assign(char const *)]
; [0000001D BYTES: COLLAPSED FUNCTION std::wstring::assign(wchar_t const *)]


; Attributes: bp-based frame

sub_100021F5 proc near

var_4= dword ptr -4

push    ebp
mov     ebp, esp
push    ecx
push    esi
push    ecx
mov     [ebp+var_4], esp
mov     esi, ecx
mov     [ebp+var_4], esp
call    sub_10002155
mov     eax, esi
pop     esi
leave
retn    4
sub_100021F5 endp



; Attributes: bp-based frame

sub_1000220F proc near

var_10= dword ptr -10h
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch

; FUNCTION CHUNK AT 1000F576 SIZE 00000023 BYTES

; __unwind { // loc_1000F57E
push    4
mov     eax, offset loc_1000F57E
call    __EH_prolog3
mov     esi, ecx
mov     [ebp+var_10], esi
call    sub_100043DE
push    [ebp+arg_0]
;   try {
and     [ebp+var_4], 0
lea     ecx, [esi+0Ch]
mov     dword ptr [esi], offset off_1001024C
call    ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::string::string(std::string const &)
mov     eax, esi
call    __EH_epilog3
retn    4
;   } // starts at 10002228
; } // starts at 1000220F
sub_1000220F endp




sub_10002244 proc near

arg_0= dword ptr  4

push    esi
push    [esp+4+arg_0]
mov     esi, ecx
call    sub_1000220F
mov     dword ptr [esi], offset off_10010258
mov     eax, esi
pop     esi
retn    4
sub_10002244 endp




sub_1000225C proc near
mov     dword ptr [ecx], offset off_10010258
jmp     sub_10001F03
sub_1000225C endp


loc_10002267:
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset off_10010258
call    sub_10001F03
test    byte ptr [esp+8], 1
jz      short loc_10002283
push    esi
call    ??3@YAXPAX@Z    ; operator delete(void *)
pop     ecx

loc_10002283:
mov     eax, esi
pop     esi
retn    4
; [00000022 BYTES: COLLAPSED FUNCTION std::string::string(char const *)]


; Attributes: bp-based frame

sub_100022AB proc near

var_14= dword ptr -14h
var_10= dword ptr -10h
var_4= dword ptr -4
arg_4= dword ptr  0Ch

; FUNCTION CHUNK AT 10002E05 SIZE 00000009 BYTES
; FUNCTION CHUNK AT 1000F599 SIZE 00000023 BYTES

; __unwind { // loc_1000F5A1
push    8
mov     eax, offset loc_1000F5A1
call    __EH_prolog3
mov     esi, ecx
mov     [ebp+var_10], esi
push    ecx
mov     [ebp+var_14], esp
mov     [ebp+var_14], esp
call    sub_100021F5
;   try {
and     [ebp+var_4], 0
mov     ecx, esi
call    sub_10003A8F
and     dword ptr [esi+18h], 0
mov     [esi+14h], eax
mov     eax, esi
call    __EH_epilog3
retn
;   } // starts at 100022C8
; } // starts at 100022AB
sub_100022AB endp



; Attributes: bp-based frame

sub_100022E2 proc near

pExceptionObject= dword ptr -50h
var_28= byte ptr -28h
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch

; FUNCTION CHUNK AT 10001E01 SIZE 0000000A BYTES
; FUNCTION CHUNK AT 1000F5BC SIZE 00000023 BYTES

; __unwind { // loc_1000F5C4
push    44h
mov     eax, offset loc_1000F5C4
call    __EH_prolog3
mov     eax, [ecx+18h]
mov     edx, [ebp+arg_0]
mov     esi, 3FFFFFFFh
sub     esi, eax
cmp     esi, edx
jnb     short loc_10002331
push    offset aListTTooLong ; "list<T> too long"
lea     ecx, [ebp+var_28]
call    ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::string::string(char const *)
;   try {
and     [ebp+var_4], 0
lea     eax, [ebp+var_28]
push    eax
lea     ecx, [ebp+pExceptionObject]
call    sub_1000220F
push    offset stru_10012A6C ; pThrowInfo
lea     eax, [ebp+pExceptionObject]
push    eax             ; pExceptionObject
mov     [ebp+pExceptionObject], offset off_10010258
call    __CxxThrowException@8 ; _CxxThrowException(x,x)

loc_10002331:
add     eax, edx
mov     [ecx+18h], eax
call    __EH_epilog3
retn    4
;   } // starts at 1000230C
; } // starts at 100022E2
sub_100022E2 endp



; Attributes: bp-based frame

; int __stdcall sub_1000233E(struct std::exception *)
sub_1000233E proc near

var_10= dword ptr -10h
var_4= dword ptr -4
arg_0= dword ptr  8

; FUNCTION CHUNK AT 1000F576 SIZE 00000023 BYTES

; __unwind { // loc_1000F57E
push    4
mov     eax, offset loc_1000F57E
call    __EH_prolog3
mov     esi, ecx
mov     [ebp+var_10], esi
mov     edi, [ebp+arg_0]
push    edi             ; struct std::exception *
call    ??0exception@std@@QAE@ABV01@@Z ; std::exception::exception(std::exception const &)
;   try {
and     [ebp+var_4], 0
add     edi, 0Ch
push    edi
lea     ecx, [esi+0Ch]
mov     dword ptr [esi], offset off_1001024C
call    ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::string::string(std::string const &)
mov     eax, esi
call    __EH_epilog3
retn    4
;   } // starts at 10002358
; } // starts at 1000233E
sub_1000233E endp




; int __stdcall sub_10002378(struct std::exception *)
sub_10002378 proc near

arg_0= dword ptr  4

push    esi
push    [esp+4+arg_0]   ; struct std::exception *
mov     esi, ecx
call    sub_1000233E
mov     dword ptr [esi], offset off_10010258
mov     eax, esi
pop     esi
retn    4
sub_10002378 endp




sub_10002390 proc near

arg_4= dword ptr  8
arg_8= dword ptr  0Ch

mov     eax, [esp+arg_4]
push    ebx
push    esi
push    edi
push    [esp+0Ch+arg_8]
lea     edi, [eax+4]
push    dword ptr [edi]
mov     ebx, ecx
push    eax
call    sub_10001BE4
push    1
mov     ecx, ebx
mov     esi, eax
call    sub_100022E2
mov     [edi], esi
mov     eax, [esi+4]
pop     edi
mov     [eax], esi
pop     esi
pop     ebx
retn    0Ch
sub_10002390 endp



; Attributes: bp-based frame

sub_100023C0 proc near

var_8= dword ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8

push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    esi
mov     esi, ecx
push    esi
push    dword ptr [esi+14h]
lea     ecx, [ebp+var_8]
call    sub_10003AAA
push    [ebp+arg_0]
mov     ecx, esi
push    [ebp+var_4]
push    [ebp+var_8]
call    sub_10002390
pop     esi
leave
retn    4
sub_100023C0 endp



; Attributes: bp-based frame

sub_100023E9 proc near

var_3C= dword ptr -3Ch
var_38= dword ptr -38h
var_34= dword ptr -34h
FileName= word ptr -30h
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch

; FUNCTION CHUNK AT 10002F56 SIZE 00000012 BYTES
; FUNCTION CHUNK AT 1000F5DF SIZE 0000003E BYTES

; __unwind { // loc_1000F5F8
push    30h
mov     eax, offset loc_1000F5F8
call    __EH_prolog3_GS
mov     edi, [ebp+arg_0]
xor     esi, esi
mov     ecx, edi
;   try {
mov     [ebp+var_4], esi
mov     [ebp+var_3C], edi
mov     [ebp+var_38], esi
call    sub_100022AB
xor     eax, eax
inc     eax
;   } // starts at 100023FC
;   try {
mov     [ebp+var_4], esi
mov     [ebp+var_38], eax
mov     [ebp+var_34], eax

loc_10002416:
push    [ebp+var_34]
lea     eax, [ebp+FileName]
push    offset Format   ; "\\\\.\\COM%d"
push    10h             ; BufferCount
push    eax             ; Buffer
call    _swprintf_s
add     esp, 10h
push    esi             ; hTemplateFile
push    esi             ; dwFlagsAndAttributes
push    3               ; dwCreationDisposition
push    esi             ; lpSecurityAttributes
push    esi             ; dwShareMode
push    0C0000000h      ; dwDesiredAccess
lea     eax, [ebp+FileName]
push    eax             ; lpFileName
call    ds:CreateFileW
mov     ebx, eax
cmp     ebx, 0FFFFFFFFh
jz      short loc_1000245C
lea     eax, [ebp+var_34]
push    eax
mov     ecx, edi
call    sub_100023C0
push    ebx             ; hObject
call    ds:__imp_CloseHandle
jmp     short loc_10002472

loc_1000245C:
call    ds:__imp_GetLastError
cmp     eax, 5
jnz     short loc_10002472
lea     eax, [ebp+var_34]
push    eax
mov     ecx, edi
call    sub_100023C0

loc_10002472:
inc     [ebp+var_34]
cmp     [ebp+var_34], 100h
jbe     short loc_10002416
mov     eax, edi
call    __EH_epilog3_GS
retn
;   } // starts at 1000240D
; } // starts at 100023E9
sub_100023E9 endp



; Attributes: bp-based frame fpd=204h

sub_10002486 proc near

var_248= dword ptr -248h
var_234= dword ptr -234h
var_22C= byte ptr -22Ch
var_224= dword ptr -224h
var_220= dword ptr -220h
var_21C= dword ptr -21Ch
var_218= byte ptr -218h
var_210= dword ptr -210h
var_208= dword ptr -208h
Buffer= word ptr -204h
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch

; FUNCTION CHUNK AT 100017B5 SIZE 0000000E BYTES
; FUNCTION CHUNK AT 10001E20 SIZE 0000000A BYTES
; FUNCTION CHUNK AT 10002F56 SIZE 00000012 BYTES
; FUNCTION CHUNK AT 1000F61D SIZE 00000051 BYTES

; __unwind { // loc_1000F646
push    ebp
sub     esp, 200h
lea     ebp, [esp-4]
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+204h+var_4], eax
push    38h
mov     eax, offset loc_1000F646
call    __EH_prolog3
mov     esi, [ebp+204h+arg_0]
and     [ebp+204h+var_224], 0
mov     ecx, esi
mov     [ebp+204h+var_220], esi
call    ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::wstring::wstring(void)
;   try {
and     [ebp+204h+var_208], 0
xor     ebx, ebx
lea     eax, [ebp+204h+var_248]
inc     ebx
push    eax
mov     [ebp+204h+var_224], ebx
call    sub_100023E9
pop     ecx
mov     eax, [ebp+204h+var_234]
mov     eax, [eax]
lea     ecx, [ebp+204h+var_248]
push    ecx
push    eax
lea     ecx, [ebp+204h+var_218]
;   } // starts at 100024BE
;   try {
mov     [ebp+204h+var_208], ebx
call    sub_10003AAA
lea     eax, [ebp+204h+var_248]
push    eax
push    [ebp+204h+var_234]
lea     ecx, [ebp+204h+var_22C]
call    sub_10003AAA
lea     eax, [ebp+204h+var_22C]
push    eax
lea     ecx, [ebp+204h+var_218]
call    sub_100019C7
test    al, al
jnz     loc_100026C0
mov     edi, offset aDongleCpp ; ".\\Dongle.cpp"

loc_1000250F:
lea     ecx, [ebp+204h+var_218]
call    sub_10001965
push    dword ptr [eax]
call    sub_1001FD0A
pop     ecx
test    eax, eax
jnz     loc_10002611
push    1000h
call    sub_1001EE7B
pop     ecx
test    eax, eax
jnz     loc_100025EC
call    sub_1001FB32
xor     ecx, ecx
push    2
pop     edx
mov     ebx, eax
mul     edx
seto    cl
neg     ecx
or      ecx, eax
push    ecx             ; unsigned int
call    ??_U@YAPAXI@Z   ; operator new[](uint)
mov     esi, eax
pop     ecx
test    esi, esi
jz      short loc_100025DA
lea     eax, [ebx+ebx]
push    eax             ; Size
push    0               ; Val
push    esi             ; void *
call    _memset
push    esi
push    5
push    ebx
call    sub_1001FFF7
add     esp, 18h
test    eax, eax
jnz     short loc_100025B7
push    0Bh             ; Size
push    esi             ; String
call    __strupr_s
push    0Ah
push    esi
call    sub_10001619
add     esp, 10h
push    esi             ; lpMultiByteStr
lea     ecx, [ebp+204h+var_21C]
call    sub_1000175F
push    dword ptr [eax] ; String
mov     ecx, [ebp+204h+var_220]
;   } // starts at 100024DF
;   try {
mov     byte ptr [ebp+204h+var_208], 2
call    ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z ; std::wstring::assign(wchar_t const *)
cmp     [ebp+204h+var_21C], 0
;   } // starts at 10002599
;   try {
mov     byte ptr [ebp+204h+var_208], 1
jz      short loc_100025D1
push    [ebp+204h+var_21C] ; void *
call    ??_V@YAXPAX@Z   ; operator delete[](void *)
pop     ecx
jmp     short loc_100025D1

loc_100025B7:
call    sub_10003753
test    eax, eax
jz      short loc_100025D1
mov     edx, [eax]
push    offset aCouldNotReadKe ; "Could not read key"
push    53h ; 'S'
push    edi
push    2
mov     ecx, eax
call    dword ptr [edx+18h]

loc_100025D1:           ; void *
push    esi
call    ??_V@YAXPAX@Z   ; operator delete[](void *)
pop     ecx
jmp     short loc_10002606

loc_100025DA:
call    sub_10003753
test    eax, eax
jz      short loc_10002606
push    offset aCouldNotAlloca ; "Could not allocate memory"
push    5Ch ; '\'
jmp     short loc_100025FC

loc_100025EC:
call    sub_10003753
test    eax, eax
jz      short loc_10002606
push    offset aInvalidRomSize ; "Invalid ROM size"
push    61h ; 'a'

loc_100025FC:
mov     edx, [eax]
push    edi
push    2
mov     ecx, eax
call    dword ptr [edx+18h]

loc_10002606:
call    sub_1001F669
mov     esi, [ebp+204h+var_220]
xor     ebx, ebx
inc     ebx

loc_10002611:
xor     eax, eax
cmp     [esi+14h], eax
push    200h            ; Size
push    eax             ; Val
lea     eax, [ebp+204h+Buffer]
push    eax             ; void *
jnz     short loc_10002680
call    _memset
add     esp, 0Ch
lea     ecx, [ebp+204h+var_218]
call    sub_10001965
push    dword ptr [eax]
lea     eax, [ebp+204h+Buffer]
push    offset aUnableToFindAD ; "Unable to find a Dongle on Port: COM%d"
push    100h            ; BufferCount
push    eax             ; Buffer
call    _swprintf_s
add     esp, 10h
call    sub_10003753
test    eax, eax
jz      short loc_10002662
mov     edx, [eax]
lea     ecx, [ebp+204h+Buffer]
push    ecx
push    75h ; 'u'
push    edi
push    ebx
mov     ecx, eax
call    dword ptr [edx+18h]

loc_10002662:
lea     ecx, [ebp+204h+var_218]
call    sub_10001994
lea     eax, [ebp+204h+var_22C]
push    eax
lea     ecx, [ebp+204h+var_218]
call    sub_100019C7
test    al, al
jz      loc_1000250F
jmp     short loc_100026C0

loc_10002680:
call    _memset
add     esp, 0Ch
lea     ecx, [ebp+204h+var_218]
call    sub_10001965
push    dword ptr [eax]
lea     eax, [ebp+204h+Buffer]
push    offset aDongleFoundOnP ; "Dongle found on Port: COM%d"
push    100h            ; BufferCount
push    eax             ; Buffer
call    _swprintf_s
add     esp, 10h
call    sub_10003753
test    eax, eax
jz      short loc_100026C0
mov     edx, [eax]
lea     ecx, [ebp+204h+Buffer]
push    ecx
push    6Ch ; 'l'
push    edi
push    ebx
mov     ecx, eax
call    dword ptr [edx+18h]

loc_100026C0:
lea     ecx, [ebp+204h+var_248]
call    sub_10002D48
push    [ebp+204h+var_248] ; void *
call    ??3@YAXPAX@Z    ; operator delete(void *)
pop     ecx
mov     eax, esi
mov     ecx, [ebp+204h+var_210]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+204h+var_4]
xor     ecx, ebp        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
add     ebp, 204h
leave
retn
;   } // starts at 100025A6
; } // starts at 10002486
sub_10002486 endp

; Exported entry   1. GetHardwareKeyInfo


; Attributes: bp-based frame

public GetHardwareKeyInfo
GetHardwareKeyInfo proc near

var_64= dword ptr -64h
var_60= dword ptr -60h
var_4C= dword ptr -4Ch
var_48= dword ptr -48h
var_44= dword ptr -44h
var_30= dword ptr -30h
var_2C= byte ptr -2Ch
var_20= byte ptr -20h
String= dword ptr -1Ch
var_C= dword ptr -0Ch
var_8= dword ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8

push    ebp
mov     ebp, esp
sub     esp, 64h
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+var_4], eax
push    esi
mov     esi, [ebp+arg_0]
push    edi
xor     edi, edi
test    esi, esi
jz      loc_100027F3
lea     eax, [ebp+var_20]
push    eax
call    sub_10002486
pop     ecx
cmp     [ebp+var_C], edi
jz      loc_100027C4
lea     ecx, [ebp+var_2C]
call    sub_10002A1F
mov     eax, [ebp+String]
push    8
pop     edi
cmp     [ebp+var_8], edi
jnb     short loc_1000273E
lea     eax, [ebp+String]

loc_1000273E:           ; lpWideCharStr
push    eax
lea     eax, [ebp+var_64]
push    eax             ; int
lea     ecx, [ebp+var_2C]
call    sub_10002FA7
mov     eax, [ebp+String]
cmp     [ebp+var_8], edi
jnb     short loc_10002756
lea     eax, [ebp+String]

loc_10002756:           ; lpWideCharStr
push    eax
lea     eax, [ebp+var_48]
push    eax             ; int
lea     ecx, [ebp+var_2C]
call    sub_100030CA
mov     eax, [ebp+String]
cmp     [ebp+var_8], edi
jnb     short loc_1000276E
lea     eax, [ebp+String]

loc_1000276E:           ; String
push    eax
call    sub_100019EE
mov     [esi], eax
mov     eax, [ebp+var_60]
pop     ecx
cmp     [ebp+var_4C], edi
jnb     short loc_10002782
lea     eax, [ebp+var_60]

loc_10002782:           ; String
push    eax
call    sub_100019EE
mov     [esi+4], eax
mov     eax, [ebp+var_44]
pop     ecx
cmp     [ebp+var_30], edi
jnb     short loc_10002797
lea     eax, [ebp+var_44]

loc_10002797:           ; String
push    eax
call    sub_100019EE
pop     ecx
xor     edi, edi
push    0               ; N
inc     edi
push    edi             ; char
lea     ecx, [ebp+var_48]
mov     [esi+8], eax
call    ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEX_NI@Z ; std::wstring::_Tidy(bool,uint)
push    0               ; N
push    edi             ; char
lea     ecx, [ebp+var_64]
call    ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEX_NI@Z ; std::wstring::_Tidy(bool,uint)
lea     ecx, [ebp+var_2C]
call    sub_10002A48
jmp     short loc_100027E5

loc_100027C4:
call    sub_10003753
test    eax, eax
jz      short loc_100027E5
mov     edx, [eax]
push    offset aCouldNotReadHw ; "Could not read hwk"
push    9Eh
push    offset aDongleCpp ; ".\\Dongle.cpp"
push    2
mov     ecx, eax
call    dword ptr [edx+18h]

loc_100027E5:           ; N
push    0
push    1               ; char
lea     ecx, [ebp+var_20]
call    ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEX_NI@Z ; std::wstring::_Tidy(bool,uint)
jmp     short loc_10002814

loc_100027F3:
call    sub_10003753
test    eax, eax
jz      short loc_10002814
mov     edx, [eax]
push    offset aInvalidInputPa ; "Invalid input parameter"
push    0A3h
push    offset aDongleCpp ; ".\\Dongle.cpp"
push    2
mov     ecx, eax
call    dword ptr [edx+18h]

loc_10002814:
mov     ecx, [ebp+var_4]
mov     eax, edi
pop     edi
xor     ecx, ebp        ; StackCookie
pop     esi
call    @__security_check_cookie@4 ; __security_check_cookie(x)
leave
retn
GetHardwareKeyInfo endp

; Exported entry   4. MigrateHardwareKey


; Attributes: bp-based frame

public MigrateHardwareKey
MigrateHardwareKey proc near

var_2C= dword ptr -2Ch
var_18= dword ptr -18h
var_10= byte ptr -10h
var_8= byte ptr -8

push    ebp
mov     ebp, esp
sub     esp, 2Ch
push    ebx
lea     eax, [ebp+var_2C]
push    eax
xor     ebx, ebx
call    sub_100023E9
pop     ecx
lea     eax, [ebp+var_2C]
push    eax
mov     eax, [ebp+var_18]
push    dword ptr [eax]
lea     ecx, [ebp+var_8]
call    sub_10003AAA
lea     eax, [ebp+var_2C]
push    eax
push    [ebp+var_18]
lea     ecx, [ebp+var_10]
call    sub_10003AAA
lea     eax, [ebp+var_10]
push    eax
lea     ecx, [ebp+var_8]
call    sub_100019C7
test    al, al
jnz     loc_10002911
push    esi
push    edi

loc_1000286D:
lea     ecx, [ebp+var_8]
call    sub_10001965
push    dword ptr [eax]
call    sub_1001FD0A
pop     ecx
test    eax, eax
jnz     short loc_100028EE
push    1000h
call    sub_1001EE7B
pop     ecx
test    eax, eax
jnz     short loc_100028EE
call    sub_1001FB32
xor     ecx, ecx
push    2
pop     edx
mov     edi, eax
mul     edx
seto    cl
neg     ecx
or      ecx, eax
push    ecx             ; unsigned int
call    ??_U@YAPAXI@Z   ; operator new[](uint)
mov     esi, eax
pop     ecx
test    esi, esi
jz      short loc_100028EE
lea     eax, [edi+edi]
push    eax             ; Size
push    0               ; Val
push    esi             ; void *
call    _memset
push    esi
push    6
push    edi
call    sub_1001FFF7
add     esp, 18h
test    eax, eax
jnz     short loc_100028E7
push    esi
mov     eax, 4142h
push    6
push    edi
mov     [esi+0Ah], ax
call    sub_10020427
add     esp, 0Ch
test    eax, eax
jz      short loc_1000290C

loc_100028E7:           ; void *
push    esi
call    ??_V@YAXPAX@Z   ; operator delete[](void *)
pop     ecx

loc_100028EE:
lea     ecx, [ebp+var_8]
call    sub_10001994
lea     eax, [ebp+var_10]
push    eax
lea     ecx, [ebp+var_8]
call    sub_100019C7
test    al, al
jz      loc_1000286D
jmp     short loc_1000290F

loc_1000290C:
xor     ebx, ebx
inc     ebx

loc_1000290F:
pop     edi
pop     esi

loc_10002911:
lea     ecx, [ebp+var_2C]
call    sub_10002D48
push    [ebp+var_2C]    ; void *
call    ??3@YAXPAX@Z    ; operator delete(void *)
pop     ecx
mov     eax, ebx
pop     ebx
leave
retn
MigrateHardwareKey endp

; Exported entry   2. IsMigratedHardwareKey


; Attributes: bp-based frame

public IsMigratedHardwareKey
IsMigratedHardwareKey proc near

var_2C= dword ptr -2Ch
var_18= dword ptr -18h
var_10= byte ptr -10h
var_8= byte ptr -8

push    ebp
mov     ebp, esp
sub     esp, 2Ch
push    ebx
lea     eax, [ebp+var_2C]
push    eax
xor     ebx, ebx
call    sub_100023E9
pop     ecx
lea     eax, [ebp+var_2C]
push    eax
mov     eax, [ebp+var_18]
push    dword ptr [eax]
lea     ecx, [ebp+var_8]
call    sub_10003AAA
lea     eax, [ebp+var_2C]
push    eax
push    [ebp+var_18]
lea     ecx, [ebp+var_10]
call    sub_10003AAA
lea     eax, [ebp+var_10]
push    eax
lea     ecx, [ebp+var_8]
call    sub_100019C7
test    al, al
jnz     loc_10002A09
push    esi
push    edi

loc_10002970:
lea     ecx, [ebp+var_8]
call    sub_10001965
push    dword ptr [eax]
call    sub_1001FD0A
pop     ecx
test    eax, eax
jnz     short loc_100029EB
push    1000h
call    sub_1001EE7B
pop     ecx
test    eax, eax
jnz     short loc_100029EB
call    sub_1001FB32
xor     ecx, ecx
push    2
pop     edx
mov     esi, eax
mul     edx
seto    cl
neg     ecx
or      ecx, eax
push    ecx             ; unsigned int
call    ??_U@YAPAXI@Z   ; operator new[](uint)
mov     edi, eax
pop     ecx
test    edi, edi
jz      short loc_100029EB
lea     eax, [esi+esi]
push    eax             ; Size
push    0               ; Val
push    edi             ; void *
call    _memset
push    edi
push    6
push    esi
call    sub_1001FFF7
add     esp, 18h
test    eax, eax
jnz     short loc_100029DF
mov     eax, 4142h
cmp     [edi+0Ah], ax
jnz     short loc_100029DF
xor     ebx, ebx
inc     ebx

loc_100029DF:           ; void *
push    edi
call    ??_V@YAXPAX@Z   ; operator delete[](void *)
pop     ecx
cmp     ebx, 1
jz      short loc_10002A07

loc_100029EB:
lea     ecx, [ebp+var_8]
call    sub_10001994
lea     eax, [ebp+var_10]
push    eax
lea     ecx, [ebp+var_8]
call    sub_100019C7
test    al, al
jz      loc_10002970

loc_10002A07:
pop     edi
pop     esi

loc_10002A09:
lea     ecx, [ebp+var_2C]
call    sub_10002D48
push    [ebp+var_2C]    ; void *
call    ??3@YAXPAX@Z    ; operator delete(void *)
pop     ecx
mov     eax, ebx
pop     ebx
leave
retn
IsMigratedHardwareKey endp




sub_10002A1F proc near
mov     eax, ecx
mov     dword ptr [eax], offset off_100103EC
mov     byte ptr [eax+7], 68h ; 'h'
mov     byte ptr [eax+4], 61h ; 'a'
mov     byte ptr [eax+8], 61h ; 'a'
mov     byte ptr [eax+0Ah], 32h ; '2'
mov     byte ptr [eax+6], 70h ; 'p'
mov     byte ptr [eax+5], 6Ch ; 'l'
mov     byte ptr [eax+0Bh], 33h ; '3'
mov     byte ptr [eax+9], 31h ; '1'
retn
sub_10002A1F endp




sub_10002A48 proc near
mov     dword ptr [ecx], offset off_100103EC
retn
sub_10002A48 endp




sub_10002A4F proc near

arg_0= dword ptr  4
arg_4= dword ptr  8
arg_8= dword ptr  0Ch

push    ebx
mov     ebx, [esp+4+arg_4]
push    esi
push    edi
mov     edi, [esp+0Ch+arg_8]
mov     esi, ecx
cmp     edi, ebx
jbe     short loc_10002A65
call    __invalid_parameter_noinfo

loc_10002A65:
mov     eax, [esp+0Ch+arg_0]
mov     [esi+4], edi
mov     [esi], eax
pop     edi
mov     [esi+8], ebx
mov     eax, esi
pop     esi
pop     ebx
retn    0Ch
sub_10002A4F endp




sub_10002A79 proc near

arg_0= dword ptr  4
arg_4= dword ptr  8
arg_8= dword ptr  0Ch

cmp     [esp+arg_8], 0
jbe     short loc_10002A9A
mov     ecx, [esp+arg_4]
mov     eax, [esp+arg_0]

loc_10002A88:
mov     dx, [eax]
cmp     dx, [ecx]
jnz     short loc_10002A9D
inc     eax
inc     eax
inc     ecx
inc     ecx
dec     [esp+arg_8]
jnz     short loc_10002A88

loc_10002A9A:
xor     eax, eax
retn

loc_10002A9D:
movzx   eax, word ptr [eax]
cmp     ax, [ecx]
sbb     eax, eax
and     eax, 0FFFFFFFEh
inc     eax
retn
sub_10002A79 endp




sub_10002AAA proc near
push    esi
mov     esi, ecx
mov     eax, [esi+4]
cmp     eax, [esi+8]
jb      short loc_10002ABA
call    __invalid_parameter_noinfo

loc_10002ABA:
mov     eax, [esi+4]
add     eax, [esi]
pop     esi
retn
sub_10002AAA endp




sub_10002AC1 proc near

arg_0= dword ptr  4

push    esi
mov     esi, ecx
mov     eax, [esi+4]
push    edi
mov     edi, [esp+8+arg_0]
add     eax, edi
cmp     eax, [esi+8]
jbe     short loc_10002AD8
call    __invalid_parameter_noinfo

loc_10002AD8:
add     [esi+4], edi
pop     edi
mov     eax, esi
pop     esi
retn    4
sub_10002AC1 endp

; [00000017 BYTES: COLLAPSED FUNCTION std::char_traits<char>::assign(char *,uint,char)]


; Attributes: bp-based frame

; int __stdcall sub_10002AF9(LPCWCH lpWideCharStr)
sub_10002AF9 proc near

var_4= dword ptr -4
lpWideCharStr= dword ptr  8

push    ebp
mov     ebp, esp
push    ecx
push    ebx
xor     ebx, ebx
mov     [ebp+var_4], ecx
mov     [ecx], ebx
cmp     [ebp+lpWideCharStr], ebx
jz      short loc_10002B4B
push    esi
mov     esi, ds:WideCharToMultiByte
push    edi
push    ebx             ; lpUsedDefaultChar
push    ebx             ; lpDefaultChar
push    ebx             ; cbMultiByte
push    ebx             ; lpMultiByteStr
push    0FFFFFFFFh      ; cchWideChar
push    [ebp+lpWideCharStr] ; lpWideCharStr
push    ebx             ; dwFlags
push    ebx             ; CodePage
call    esi ; WideCharToMultiByte
mov     edi, eax
lea     eax, [edi+1]
push    eax             ; unsigned int
call    ??_U@YAPAXI@Z   ; operator new[](uint)
pop     ecx
mov     ecx, [ebp+var_4]
mov     [ecx], eax
cmp     eax, ebx
jz      short loc_10002B49
push    ebx             ; lpUsedDefaultChar
push    ebx             ; lpDefaultChar
push    edi             ; cbMultiByte
push    eax             ; lpMultiByteStr
push    0FFFFFFFFh      ; cchWideChar
push    [ebp+lpWideCharStr] ; lpWideCharStr
push    ebx             ; dwFlags
push    ebx             ; CodePage
call    esi ; WideCharToMultiByte
mov     eax, [ebp+var_4]
mov     eax, [eax]
mov     [edi+eax], bl

loc_10002B49:
pop     edi
pop     esi

loc_10002B4B:
mov     eax, [ebp+var_4]
pop     ebx
leave
retn    4
sub_10002AF9 endp




; int __thiscall sub_10002B53(void *, char)
sub_10002B53 proc near

arg_0= byte ptr  4

push    esi
mov     esi, ecx
call    sub_10002A48
test    [esp+4+arg_0], 1
jz      short loc_10002B69
push    esi             ; void *
call    ??3@YAXPAX@Z    ; operator delete(void *)
pop     ecx

loc_10002B69:
mov     eax, esi
pop     esi
retn    4
sub_10002B53 endp

; [00000048 BYTES: COLLAPSED FUNCTION std::string::_Chassign(uint,uint,char)]



sub_10002BB7 proc near

arg_0= dword ptr  4

push    esi
mov     esi, ecx
mov     eax, [esi]
push    edi
mov     edi, [esp+8+arg_0]
cmp     eax, 0FFFFFFFCh
jz      short loc_10002C06
test    eax, eax
jnz     short loc_10002BCF
call    __invalid_parameter_noinfo

loc_10002BCF:
mov     eax, [esi]
cmp     dword ptr [eax+18h], 10h
jb      short loc_10002BDC
mov     ecx, [eax+4]
jmp     short loc_10002BDF

loc_10002BDC:
lea     ecx, [eax+4]

loc_10002BDF:
mov     edx, [esi+4]
push    ebx
mov     ebx, [eax+14h]
add     ebx, ecx
add     edx, edi
cmp     edx, ebx
pop     ebx
ja      short loc_10002C01
cmp     dword ptr [eax+18h], 10h
jb      short loc_10002BFA
mov     eax, [eax+4]
jmp     short loc_10002BFD

loc_10002BFA:
add     eax, 4

loc_10002BFD:
cmp     edx, eax
jnb     short loc_10002C06

loc_10002C01:
call    __invalid_parameter_noinfo

loc_10002C06:
add     [esi+4], edi
pop     edi
mov     eax, esi
pop     esi
retn    4
sub_10002BB7 endp



; Attributes: bp-based frame

sub_10002C10 proc near

var_C= byte ptr -0Ch
arg_0= dword ptr  8
arg_4= dword ptr  0Ch

push    ebp
mov     ebp, esp
sub     esp, 0Ch
push    esi
push    edi
push    [ebp+arg_4]
mov     esi, ecx
lea     edi, [ebp+var_C]
movsd
movsd
lea     ecx, [ebp+var_C]
movsd
call    sub_10002AC1
mov     esi, eax
mov     eax, [ebp+arg_0]
mov     edi, eax
movsd
movsd
movsd
pop     edi
pop     esi
leave
retn    8
sub_10002C10 endp



; Attributes: bp-based frame

sub_10002C3B proc near

var_8= dword ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch

push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     eax, [ecx]
push    [ebp+arg_4]
mov     [ebp+var_8], eax
mov     eax, [ecx+4]
lea     ecx, [ebp+var_8]
mov     [ebp+var_4], eax
call    sub_10002BB7
mov     edx, [eax]
mov     ecx, [ebp+arg_0]
mov     eax, [eax+4]
mov     [ecx+4], eax
mov     [ecx], edx
mov     eax, ecx
leave
retn    8
sub_10002C3B endp



; Attributes: bp-based frame

sub_10002C69 proc near

var_8= dword ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch

push    ebp
mov     ebp, esp
push    ecx
push    ecx
mov     eax, [ecx]
push    [ebp+arg_4]
mov     [ebp+var_8], eax
mov     eax, [ecx+4]
lea     ecx, [ebp+var_8]
mov     [ebp+var_4], eax
call    sub_10002BB7
mov     ecx, [ebp+var_8]
mov     eax, [ebp+arg_0]
mov     [eax], ecx
mov     ecx, [ebp+var_4]
mov     [eax+4], ecx
leave
retn    8
sub_10002C69 endp




sub_10002C96 proc near

arg_0= dword ptr  4
arg_4= dword ptr  8

push    ebx
mov     ebx, [esp+4+arg_0]
push    esi
mov     esi, [esp+8+arg_4]
push    edi
mov     edi, ecx
and     dword ptr [edi], 0
test    esi, esi
jz      short loc_10002CD3
test    ebx, ebx
jz      short loc_10002CD3
mov     edx, [esi+18h]
lea     eax, [esi+4]
cmp     edx, 10h
jb      short loc_10002CBD
mov     ecx, [eax]
jmp     short loc_10002CBF

loc_10002CBD:
mov     ecx, eax

loc_10002CBF:
cmp     ecx, ebx
ja      short loc_10002CD3
cmp     edx, 10h
jb      short loc_10002CCA
mov     eax, [eax]

loc_10002CCA:
mov     ecx, [esi+14h]
add     ecx, eax
cmp     ebx, ecx
jbe     short loc_10002CD8

loc_10002CD3:
call    __invalid_parameter_noinfo

loc_10002CD8:
mov     [edi], esi
mov     [edi+4], ebx
mov     eax, edi
pop     edi
pop     esi
pop     ebx
retn    8
sub_10002C96 endp




sub_10002CE5 proc near
push    esi
mov     esi, ecx
mov     eax, [esi+14h]
mov     ecx, [eax]
mov     [eax], eax
mov     eax, [esi+14h]
mov     [eax+4], eax
and     dword ptr [esi+18h], 0
cmp     ecx, [esi+14h]
jz      short loc_10002D10
push    edi

loc_10002CFF:
mov     edi, [ecx]
push    ecx             ; void *
call    ??3@YAXPAX@Z    ; operator delete(void *)
pop     ecx
mov     ecx, edi
cmp     edi, [esi+14h]
jnz     short loc_10002CFF
pop     edi

loc_10002D10:
pop     esi
retn
sub_10002CE5 endp



; Attributes: bp-based frame

; int __cdecl sub_10002D12(int, void *Source, int, char)
sub_10002D12 proc near

arg_0= dword ptr  8
Source= dword ptr  0Ch
arg_8= dword ptr  10h
arg_C= byte ptr  14h

push    ebp
mov     ebp, esp
push    esi
mov     esi, [ebp+arg_8]
sub     esi, [ebp+Source]
lea     ecx, [ebp+arg_C]
push    esi
push    [ebp+arg_0]
call    sub_10002C10
test    esi, esi
jle     short loc_10002D42
push    esi             ; SourceSize
push    [ebp+Source]    ; Source
lea     ecx, [ebp+arg_C]
push    esi             ; DestinationSize
call    sub_10002AAA
push    eax             ; Destination
call    _memmove_s
add     esp, 10h

loc_10002D42:
mov     eax, [ebp+arg_0]
pop     esi
pop     ebp
retn
sub_10002D12 endp




sub_10002D48 proc near
push    esi
mov     esi, ecx
call    sub_10002CE5
push    dword ptr [esi+14h] ; void *
call    ??3@YAXPAX@Z    ; operator delete(void *)
and     dword ptr [esi+14h], 0
pop     ecx
pop     esi
retn
sub_10002D48 endp



; Attributes: bp-based frame

; int __cdecl sub_10002D5F(int, int, void *Source, int, int, char)
sub_10002D5F proc near

var_4= dword ptr -4
arg_0= dword ptr  8
Source= dword ptr  10h
arg_10= dword ptr  18h
arg_14= byte ptr  1Ch

push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
xor     eax, eax
lea     edi, [ebp+var_4]
stosb
push    [ebp+var_4]
lea     esi, [ebp+arg_14]
push    [ebp+arg_0]
push    [ebp+arg_0]
sub     esp, 0Ch
mov     edi, esp
push    [ebp+arg_10]    ; int
movsd
push    [ebp+Source]    ; Source
movsd
push    [ebp+arg_0]     ; int
movsd
call    sub_10002D12
mov     eax, [ebp+arg_0]
add     esp, 24h
pop     edi
pop     esi
leave
retn
sub_10002D5F endp




; int __stdcall sub_10002D97(size_t Size, char)
sub_10002D97 proc near

Size= dword ptr  4
arg_4= byte ptr  8

push    ebx
mov     ebx, [esp+4+Size]
push    edi
or      eax, 0FFFFFFFFh
mov     edi, ecx
sub     eax, [edi+14h]
cmp     eax, ebx
ja      short loc_10002DAE
call    sub_1000F4AD

loc_10002DAE:
test    ebx, ebx
jbe     short loc_10002DDE
push    esi
mov     esi, [edi+14h]
push    0
add     esi, ebx
push    esi
mov     ecx, edi
call    sub_10001E2A
test    al, al
jz      short loc_10002DDD
push    dword ptr [esp+0Ch+arg_4] ; char
mov     ecx, edi
push    ebx             ; Size
push    dword ptr [edi+14h] ; int
call    ?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXIID@Z ; std::string::_Chassign(uint,uint,char)
push    esi
mov     ecx, edi
call    ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::string::_Eos(uint)

loc_10002DDD:
pop     esi

loc_10002DDE:
mov     eax, edi
pop     edi
pop     ebx
retn    8
sub_10002D97 endp

; [00000020 BYTES: COLLAPSED FUNCTION std::string::begin(void)]
; START OF FUNCTION CHUNK FOR sub_100022AB
;   ADDITIONAL PARENT FUNCTION sub_10003D83

loc_10002E05:           ; void *
; __unwind { // loc_1000F7EF
push    dword ptr [ecx]
call    ??3@YAXPAX@Z    ; operator delete(void *)
pop     ecx
retn
; } // starts at 10002E05
; END OF FUNCTION CHUNK FOR sub_100022AB


; Attributes: bp-based frame

; int __stdcall sub_10002E0E(int, int, rsize_t N)
sub_10002E0E proc near

arg_0= dword ptr  8
arg_4= dword ptr  0Ch
N= dword ptr  10h

push    ebp
mov     ebp, esp
push    ebx
mov     ebx, [ebp+arg_4]
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, ecx
cmp     [edi+14h], ebx
jnb     short loc_10002E26
call    sub_1000F4E5

loc_10002E26:
mov     eax, [edi+14h]
sub     eax, ebx
mov     ebx, [ebp+N]
cmp     eax, ebx
jnb     short loc_10002E37
mov     ebx, eax
mov     [ebp+N], ebx

loc_10002E37:
or      eax, 0FFFFFFFFh
sub     eax, [esi+14h]
cmp     eax, ebx
jbe     short loc_10002E4B
mov     eax, [esi+14h]
lea     ecx, [eax+ebx]
cmp     ecx, eax
jnb     short loc_10002E50

loc_10002E4B:
call    sub_1000F4AD

loc_10002E50:
test    ebx, ebx
jbe     short loc_10002EAE
mov     eax, [esi+14h]
add     eax, ebx
push    0
push    eax
mov     ecx, esi
mov     [ebp+arg_0], eax
call    sub_10001E88
test    al, al
jz      short loc_10002EAE
cmp     dword ptr [edi+18h], 8
jb      short loc_10002E75
mov     edi, [edi+4]
jmp     short loc_10002E78

loc_10002E75:
add     edi, 4

loc_10002E78:
mov     eax, [esi+18h]
cmp     eax, 8
jb      short loc_10002E85
mov     edx, [esi+4]
jmp     short loc_10002E88

loc_10002E85:
lea     edx, [esi+4]

loc_10002E88:           ; N
push    [ebp+N]
mov     ecx, [esi+14h]
mov     ebx, [ebp+arg_4]
lea     edi, [edi+ebx*2]
sub     eax, ecx
push    edi             ; S2
push    eax             ; N1
lea     eax, [edx+ecx*2]
push    eax             ; S1
call    unknown_libname_6 ; Microsoft VisualC 2-14/net runtime
add     esp, 10h
push    [ebp+arg_0]
mov     ecx, esi
call    sub_10001A41

loc_10002EAE:
pop     edi
mov     eax, esi
pop     esi
pop     ebx
pop     ebp
retn    0Ch
sub_10002E0E endp



; Attributes: bp-based frame

; int __thiscall sub_10002EB7(int, wchar_t *S2, rsize_t N)
sub_10002EB7 proc near

S2= dword ptr  8
N= dword ptr  0Ch

push    ebp
mov     ebp, esp
push    esi
push    edi
mov     edi, [ebp+S2]
push    edi
mov     esi, ecx
call    sub_100017FE
test    al, al
jz      short loc_10002EEB
cmp     dword ptr [esi+18h], 8
jb      short loc_10002ED6
mov     eax, [esi+4]
jmp     short loc_10002ED9

loc_10002ED6:
lea     eax, [esi+4]

loc_10002ED9:           ; N
push    [ebp+N]
sub     edi, eax
sar     edi, 1
push    edi             ; int
push    esi             ; int
mov     ecx, esi
call    sub_10002E0E
jmp     short loc_10002F50

loc_10002EEB:
or      eax, 0FFFFFFFFh
sub     eax, [esi+14h]
push    ebx
mov     ebx, [ebp+N]
cmp     eax, ebx
jbe     short loc_10002F03
mov     eax, [esi+14h]
lea     ecx, [eax+ebx]
cmp     ecx, eax
jnb     short loc_10002F08

loc_10002F03:
call    sub_1000F4AD

loc_10002F08:
test    ebx, ebx
jbe     short loc_10002F4D
mov     edi, [esi+14h]
push    0
add     edi, ebx
push    edi
mov     ecx, esi
call    sub_10001E88
test    al, al
jz      short loc_10002F4D
mov     eax, [esi+18h]
cmp     eax, 8
jb      short loc_10002F2C
mov     edx, [esi+4]
jmp     short loc_10002F2F

loc_10002F2C:
lea     edx, [esi+4]

loc_10002F2F:
mov     ecx, [esi+14h]
push    ebx             ; N
push    [ebp+S2]        ; S2
sub     eax, ecx
push    eax             ; N1
lea     eax, [edx+ecx*2]
push    eax             ; S1
call    unknown_libname_6 ; Microsoft VisualC 2-14/net runtime
add     esp, 10h
push    edi
mov     ecx, esi
call    sub_10001A41

loc_10002F4D:
mov     eax, esi
pop     ebx

loc_10002F50:
pop     edi
pop     esi
pop     ebp
retn    8
sub_10002EB7 endp

; START OF FUNCTION CHUNK FOR sub_100023E9
;   ADDITIONAL PARENT FUNCTION sub_10002486
;   ADDITIONAL PARENT FUNCTION sub_100030CA
;   ADDITIONAL PARENT FUNCTION sub_10003BE7

loc_10002F56:
; __unwind { // loc_1000F7A9
push    esi
mov     esi, ecx
call    sub_10002D48
push    dword ptr [esi] ; void *
call    ??3@YAXPAX@Z    ; operator delete(void *)
pop     ecx
pop     esi
retn
; } // starts at 10002F56
; END OF FUNCTION CHUNK FOR sub_100023E9
; [0000001D BYTES: COLLAPSED FUNCTION std::wstring::assign(wchar_t const *)]
; [00000022 BYTES: COLLAPSED FUNCTION std::wstring::wstring(wchar_t const *)]


; Attributes: bp-based frame fpd=114h

; int __stdcall sub_10002FA7(int, LPCWCH lpWideCharStr)
sub_10002FA7 proc near

var_12C= dword ptr -12Ch
var_128= dword ptr -128h
var_124= dword ptr -124h
var_120= dword ptr -120h
var_118= dword ptr -118h
var_114= byte ptr -114h
MultiByteStr= byte ptr -94h
var_14= byte ptr -14h
var_13= byte ptr -13h
var_12= byte ptr -12h
var_11= byte ptr -11h
var_4= dword ptr -4
arg_0= dword ptr  8
lpWideCharStr= dword ptr  0Ch

; FUNCTION CHUNK AT 100017B5 SIZE 0000000E BYTES
; FUNCTION CHUNK AT 10001E20 SIZE 0000000A BYTES
; FUNCTION CHUNK AT 1000F66E SIZE 00000049 BYTES

; __unwind { // loc_1000F68F
push    ebp
sub     esp, 110h
lea     ebp, [esp-4]
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+114h+var_4], eax
push    0Ch
mov     eax, offset loc_1000F68F
call    __EH_prolog3
mov     ecx, [ebp+114h+arg_0]
mov     ebx, [ebp+114h+lpWideCharStr]
and     [ebp+114h+var_12C], 0
mov     [ebp+114h+var_128], ecx
call    ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::wstring::wstring(void)
;   try {
and     [ebp+114h+var_118], 0
xor     esi, esi
inc     esi
mov     [ebp+114h+var_12C], esi
test    ebx, ebx
jz      loc_10003084
mov     [ebp+114h+var_14], 33h ; '3'
mov     [ebp+114h+var_13], 35h ; '5'
mov     [ebp+114h+var_12], 0
xor     eax, eax
lea     edi, [ebp+114h+var_11]
stosd
stosd
stosd
push    ebx             ; lpWideCharStr
lea     ecx, [ebp+114h+var_124]
stosb
call    sub_10002AF9
mov     eax, [eax]
lea     ecx, [ebp+114h+var_14]
push    ecx
push    esi
lea     ecx, [ebp+114h+var_114]
push    ecx
push    eax
call    sub_10001548
add     esp, 10h
cmp     [ebp+114h+var_124], 0
jz      short loc_10003045
push    [ebp+114h+var_124] ; void *
call    ??_V@YAXPAX@Z   ; operator delete[](void *)
pop     ecx

loc_10003045:
lea     eax, [ebp+114h+MultiByteStr]
push    eax
lea     eax, [ebp+114h+var_114]
push    eax
call    sub_1000107F
pop     ecx
pop     ecx
lea     eax, [ebp+114h+MultiByteStr]
push    eax             ; lpMultiByteStr
lea     ecx, [ebp+114h+var_124]
call    sub_1000175F
push    dword ptr [eax] ; String
mov     ecx, [ebp+114h+var_128]
;   } // starts at 10002FE3
;   try {
mov     [ebp+114h+var_118], esi
call    ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z ; std::wstring::assign(wchar_t const *)
cmp     [ebp+114h+var_124], 0
jz      short loc_100030A2
push    [ebp+114h+var_124] ; void *
call    ??_V@YAXPAX@Z   ; operator delete[](void *)
pop     ecx
jmp     short loc_100030A2

loc_10003084:
call    sub_10003753
test    eax, eax
jz      short loc_100030A2
mov     edx, [eax]
push    offset aInvalidInputPo ; "Invalid input pointer"
push    2Ah ; '*'
push    offset aCommonIncludeE ; "..\\..\\common\\include\\encoder\\hwken"...
push    2
mov     ecx, eax
call    dword ptr [edx+18h]

loc_100030A2:
mov     eax, [ebp+114h+var_128]
mov     ecx, [ebp+114h+var_120]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+114h+var_4]
xor     ecx, ebp        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
add     ebp, 114h
leave
retn    8
;   } // starts at 1000306B
; } // starts at 10002FA7
sub_10002FA7 endp



; Attributes: bp-based frame fpd=1A0h

; int __stdcall sub_100030CA(int, LPCWCH lpWideCharStr)
sub_100030CA proc near

var_218= dword ptr -218h
var_20C= byte ptr -20Ch
var_200= dword ptr -200h
var_1E4= byte ptr -1E4h
var_1DC= byte ptr -1DCh
var_1D4= byte ptr -1D4h
var_1CC= dword ptr -1CCh
var_1C8= dword ptr -1C8h
var_1C4= dword ptr -1C4h
Source= dword ptr -1C0h
var_1BC= dword ptr -1BCh
var_1B8= dword ptr -1B8h
var_1B4= dword ptr -1B4h
var_1B0= dword ptr -1B0h
var_1AC= dword ptr -1ACh
var_1A4= dword ptr -1A4h
var_1A0= byte ptr -1A0h
var_18C= dword ptr -18Ch
var_184= byte ptr -184h
MultiByteStr= byte ptr -104h
var_84= byte ptr -84h
var_4= dword ptr -4
arg_0= dword ptr  8
lpWideCharStr= dword ptr  0Ch

; FUNCTION CHUNK AT 100017B5 SIZE 0000000E BYTES
; FUNCTION CHUNK AT 10001E01 SIZE 0000000A BYTES
; FUNCTION CHUNK AT 10001E20 SIZE 0000000A BYTES
; FUNCTION CHUNK AT 10002F56 SIZE 00000012 BYTES
; FUNCTION CHUNK AT 1000F6B7 SIZE 00000061 BYTES

; __unwind { // loc_1000F6F0
push    ebp
sub     esp, 19Ch
lea     ebp, [esp-4]
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+1A0h+var_4], eax
push    6Ch
mov     eax, offset loc_1000F6F0
call    __EH_prolog3
mov     edi, [ebp+1A0h+lpWideCharStr]
and     [ebp+1A0h+var_1CC], 0
mov     ebx, ecx
mov     ecx, [ebp+1A0h+arg_0]
mov     [ebp+1A0h+var_1BC], ecx
call    ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::wstring::wstring(void)
;   try {
and     [ebp+1A0h+var_1A4], 0
xor     esi, esi
inc     esi
mov     [ebp+1A0h+var_1CC], esi
test    edi, edi
jz      loc_1000327E
push    edi             ; lpWideCharStr
lea     ecx, [ebp+1A0h+var_1B8]
call    sub_10002AF9
push    dword ptr [eax] ; Str
lea     ecx, [ebp+1A0h+var_1A0]
;   } // starts at 10003108
;   try {
mov     [ebp+1A0h+var_1A4], esi
call    ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::string::string(char const *)
cmp     [ebp+1A0h+var_1B8], 0
;   } // starts at 10003128
;   try {
mov     byte ptr [ebp+1A0h+var_1A4], 3
jz      short loc_10003143
push    [ebp+1A0h+var_1B8] ; void *
call    ??_V@YAXPAX@Z   ; operator delete[](void *)
pop     ecx

loc_10003143:
lea     ecx, [ebp+1A0h+var_200]
call    sub_10003BE7
lea     ecx, [ebp+1A0h+var_1A0]
push    ecx
mov     ecx, eax
;   } // starts at 10003134
;   try {
mov     byte ptr [ebp+1A0h+var_1A4], 4
call    sub_10003AD0
lea     ecx, [ebp+1A0h+var_200]
;   } // starts at 10003151
;   try {
mov     byte ptr [ebp+1A0h+var_1A4], 3
call    sub_10002D48
push    [ebp+1A0h+var_200] ; void *
call    ??3@YAXPAX@Z    ; operator delete(void *)
cmp     [ebp+1A0h+var_18C], 10h
pop     ecx
jnb     short loc_10003186
push    20h ; ' '       ; char
push    10h
pop     eax
sub     eax, [ebp+1A0h+var_18C]
lea     ecx, [ebp+1A0h+var_1A0]
push    eax             ; Size
call    sub_10002D97

loc_10003186:
add     ebx, 4
and     [ebp+1A0h+var_1B0], 0
mov     [ebp+1A0h+var_1C8], ebx
mov     ebx, 80h

loc_10003195:           ; Size
push    ebx
lea     eax, [ebp+1A0h+var_84]
push    0               ; Val
push    eax             ; void *
call    _memset
add     esp, 0Ch
push    [ebp+1A0h+var_1B0]
lea     eax, [ebp+1A0h+var_1E4]
push    eax
lea     eax, [ebp+1A0h+var_1D4]
push    eax
lea     ecx, [ebp+1A0h+var_1A0]
call    ?begin@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE?AV?$_String_iterator@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::string::begin(void)
mov     ecx, eax
call    sub_10002C69
mov     ecx, [eax]
mov     eax, [eax+4]
push    0
mov     [ebp+1A0h+Source], eax
push    ebx
lea     eax, [ebp+1A0h+var_84]
mov     [ebp+1A0h+var_1C4], ecx
push    eax             ; char
lea     ecx, [ebp+1A0h+var_20C]
call    sub_10002A4F
mov     esi, eax
push    8
lea     eax, [ebp+1A0h+var_1DC]
push    eax
lea     ecx, [ebp+1A0h+var_1C4]
call    sub_10002C3B
sub     esp, 0Ch
mov     edi, esp
push    dword ptr [eax+4] ; int
movsd
push    dword ptr [eax] ; int
movsd
push    [ebp+1A0h+Source] ; Source
lea     eax, [ebp+1A0h+var_218]
push    [ebp+1A0h+var_1C4] ; int
movsd
push    eax             ; int
call    sub_10002D5F
lea     eax, [ebp+1A0h+var_184]
push    eax
push    0
push    [ebp+1A0h+var_1C8]
lea     eax, [ebp+1A0h+var_84]
push    eax
call    sub_100013B3
lea     eax, [ebp+1A0h+MultiByteStr]
push    eax
lea     eax, [ebp+1A0h+var_184]
push    eax
call    sub_1000107F
add     esp, 38h
lea     eax, [ebp+1A0h+MultiByteStr]
push    eax             ; lpMultiByteStr
lea     ecx, [ebp+1A0h+var_1B4]
call    sub_1000175F
push    dword ptr [eax] ; String
mov     ecx, [ebp+1A0h+var_1BC] ; int
;   } // starts at 1000315D
;   try {
mov     byte ptr [ebp+1A0h+var_1A4], 5
call    ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z_0 ; std::wstring::assign(wchar_t const *)
cmp     [ebp+1A0h+var_1B4], 0
;   } // starts at 10003246
;   try {
mov     byte ptr [ebp+1A0h+var_1A4], 3
jz      short loc_10003262
push    [ebp+1A0h+var_1B4] ; void *
call    ??_V@YAXPAX@Z   ; operator delete[](void *)
pop     ecx

loc_10003262:
add     [ebp+1A0h+var_1B0], 8
cmp     [ebp+1A0h+var_1B0], 10h
jl      loc_10003195
push    0               ; SourceSize
push    1               ; char
lea     ecx, [ebp+1A0h+var_1A0]
call    ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::string::_Tidy(bool,uint)
jmp     short loc_1000329C

loc_1000327E:
call    sub_10003753
test    eax, eax
jz      short loc_1000329C
mov     edx, [eax]
push    offset aInvalidInputPo ; "Invalid input pointer"
push    54h ; 'T'
push    offset aCommonIncludeE ; "..\\..\\common\\include\\encoder\\hwken"...
push    2
mov     ecx, eax
call    dword ptr [edx+18h]

loc_1000329C:
mov     eax, [ebp+1A0h+var_1BC]
mov     ecx, [ebp+1A0h+var_1AC]
mov     large fs:0, ecx
pop     ecx
pop     edi
pop     esi
pop     ebx
mov     ecx, [ebp+1A0h+var_4]
xor     ecx, ebp        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
add     ebp, 1A0h
leave
retn    8
;   } // starts at 10003253
; } // starts at 100030CA
sub_100030CA endp




; int __cdecl sub_100032C4(wchar_t *Buffer, size_t BufferCount, wchar_t *Format, char ArgList)
sub_100032C4 proc near

Buffer= dword ptr  4
BufferCount= dword ptr  8
Format= dword ptr  0Ch
ArgList= byte ptr  10h

lea     eax, [esp+ArgList]
push    eax             ; ArgList
push    0               ; Locale
push    [esp+8+Format]  ; Format
push    [esp+0Ch+BufferCount] ; BufferCount
push    [esp+10h+Buffer] ; Buffer
call    __vswprintf_c_l
add     esp, 14h
retn
sub_100032C4 endp




sub_100032E0 proc near
mov     dword ptr [ecx], offset off_10010460
retn
sub_100032E0 endp

; [0000001D BYTES: COLLAPSED FUNCTION unknown_libname_3]



sub_10003304 proc near
push    esi
mov     esi, ecx
lea     eax, [esi+4]
push    eax             ; lpCriticalSection
mov     dword ptr [esi], offset off_10010474
call    ds:DeleteCriticalSection
mov     dword ptr [esi], offset off_10010460
pop     esi
retn
sub_10003304 endp




sub_1000331F proc near
add     ecx, 4
push    ecx             ; lpCriticalSection
call    ds:__imp_EnterCriticalSection
retn
sub_1000331F endp




sub_1000332A proc near
add     ecx, 4
push    ecx             ; lpCriticalSection
call    ds:TryEnterCriticalSection
retn
sub_1000332A endp




sub_10003335 proc near
add     ecx, 4
push    ecx             ; lpCriticalSection
call    ds:__imp_LeaveCriticalSection
retn
sub_10003335 endp


loc_10003340:
push    esi
mov     esi, ecx
call    sub_10003304
test    byte ptr [esp+8], 1
jz      short loc_10003356
push    esi
call    ??3@YAXPAX@Z    ; operator delete(void *)
pop     ecx

loc_10003356:
mov     eax, esi
pop     esi
retn    4
; [0000001D BYTES: COLLAPSED FUNCTION unknown_libname_4]



sub_10003379 proc near
push    esi
mov     esi, offset CriticalSection
push    esi             ; lpCriticalSection
call    ds:__imp_EnterCriticalSection
mov     ecx, dword_100217E8
test    ecx, ecx
jz      short loc_1000339D
mov     eax, [ecx]
push    1
call    dword ptr [eax]
and     dword_100217E8, 0

loc_1000339D:           ; lpCriticalSection
push    esi
call    ds:__imp_LeaveCriticalSection
pop     esi
retn
sub_10003379 endp




sub_100033A6 proc near

arg_0= dword ptr  4

mov     eax, [esp+arg_0]
or      [ecx+0Ch], eax
retn    4
sub_100033A6 endp




sub_100033B0 proc near
push    esi
mov     esi, ecx
mov     eax, [esi+8]
test    eax, eax
jz      short loc_100033C5
push    eax             ; Block
call    _free
and     dword ptr [esi+8], 0
pop     ecx

loc_100033C5:
pop     esi
retn
sub_100033B0 endp



; Attributes: bp-based frame

; int __stdcall sub_100033C7(LPCWSTR lpFileName, int)
sub_100033C7 proc near

var_4= dword ptr -4
lpFileName= dword ptr  8
arg_4= dword ptr  0Ch

push    ebp
mov     ebp, esp
push    ecx
push    esi
push    edi
push    offset CriticalSection ; lpCriticalSection
mov     esi, ecx
call    ds:__imp_EnterCriticalSection
xor     edi, edi
mov     [ebp+var_4], edi
cmp     [ebp+lpFileName], edi
jz      short loc_10003440
mov     eax, [esi]
push    ebx
mov     ecx, esi
call    dword ptr [eax+8]
xor     ebx, ebx
cmp     [ebp+arg_4], edi
push    edi             ; hTemplateFile
setnz   bl
push    edi             ; dwFlagsAndAttributes
lea     ebx, [ebx+ebx+2]
push    ebx             ; dwCreationDisposition
push    edi             ; lpSecurityAttributes
push    1               ; dwShareMode
push    40000000h       ; dwDesiredAccess
push    [ebp+lpFileName] ; lpFileName
call    ds:CreateFileW
mov     [esi+4], eax
cmp     eax, 0FFFFFFFFh
jz      short loc_1000343F
push    2               ; dwMoveMethod
push    edi             ; lpDistanceToMoveHigh
push    edi             ; lDistanceToMove
push    eax             ; hFile
call    ds:SetFilePointer
cmp     ebx, 2
jnz     short loc_10003438
mov     eax, [esi]
lea     ecx, [ebp+lpFileName]
push    ecx
push    ebx
mov     ecx, esi
mov     byte ptr [ebp+lpFileName], 0FFh
mov     byte ptr [ebp+lpFileName+1], 0FEh
call    dword ptr [eax+14h]

loc_10003438:
mov     [ebp+var_4], 1

loc_1000343F:
pop     ebx

loc_10003440:           ; lpCriticalSection
push    offset CriticalSection
call    ds:__imp_LeaveCriticalSection
mov     eax, [ebp+var_4]
pop     edi
pop     esi
leave
retn    8
sub_100033C7 endp




sub_10003454 proc near
push    ebx
push    esi
push    edi
mov     edi, offset CriticalSection
push    edi             ; lpCriticalSection
mov     esi, ecx
call    ds:__imp_EnterCriticalSection
mov     eax, [esi+4]
xor     ebx, ebx
test    eax, eax
jz      short loc_1000347B
push    eax             ; hObject
call    ds:__imp_CloseHandle
and     dword ptr [esi+4], 0
mov     ebx, eax

loc_1000347B:           ; lpCriticalSection
push    edi
call    ds:__imp_LeaveCriticalSection
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
retn
sub_10003454 endp



; Attributes: bp-based frame

; int __stdcall sub_10003488(wchar_t *String)
sub_10003488 proc near

var_8= dword ptr -8
var_4= dword ptr -4
String= dword ptr  8

push    ebp
mov     ebp, esp
push    ecx
push    ecx
push    offset CriticalSection ; lpCriticalSection
mov     [ebp+var_8], ecx
call    ds:__imp_EnterCriticalSection
and     [ebp+var_4], 0
cmp     [ebp+String], 0
jz      loc_10003529
push    ebx
push    esi
push    edi
push    [ebp+String]    ; String
call    _wcslen
mov     esi, offset asc_100104B4 ; "\r\n"
push    esi             ; String
mov     edi, eax
call    _wcslen
lea     ebx, [edi+eax+1]
xor     ecx, ecx
push    2
pop     edx
mov     eax, ebx
mul     edx
seto    cl
neg     ecx
or      ecx, eax
push    ecx             ; unsigned int
call    ??_U@YAPAXI@Z   ; operator new[](uint)
mov     edi, eax
add     esp, 0Ch
test    edi, edi
jz      short loc_10003526
push    esi
push    [ebp+String]
push    offset aSS      ; "%s%s"
push    ebx             ; BufferCount
push    edi             ; Buffer
call    _swprintf_s
add     esp, 14h
test    eax, eax
jle     short loc_1000351F
push    edi             ; String
call    _wcslen
and     [ebp+String], 0
pop     ecx
push    0               ; lpOverlapped
lea     ecx, [ebp+String]
push    ecx             ; lpNumberOfBytesWritten
add     eax, eax
push    eax             ; nNumberOfBytesToWrite
mov     eax, [ebp+var_8]
push    edi             ; lpBuffer
push    dword ptr [eax+4] ; hFile
call    ds:__imp_WriteFile
mov     [ebp+var_4], eax

loc_1000351F:           ; void *
push    edi
call    ??_V@YAXPAX@Z   ; operator delete[](void *)
pop     ecx

loc_10003526:
pop     edi
pop     esi
pop     ebx

loc_10003529:           ; lpCriticalSection
push    offset CriticalSection
call    ds:__imp_LeaveCriticalSection
mov     eax, [ebp+var_4]
leave
retn    4
sub_10003488 endp



; Attributes: bp-based frame

; int __stdcall sub_1000353B(DWORD nNumberOfBytesToWrite, LPCVOID lpBuffer)
sub_1000353B proc near

NumberOfBytesWritten= dword ptr -4
nNumberOfBytesToWrite= dword ptr  8
lpBuffer= dword ptr  0Ch

push    ebp
mov     ebp, esp
push    ecx
push    ebx
push    esi
push    edi
mov     esi, offset CriticalSection
push    esi             ; lpCriticalSection
mov     edi, ecx
call    ds:__imp_EnterCriticalSection
xor     ebx, ebx
cmp     [ebp+lpBuffer], ebx
jz      short loc_10003570
push    ebx             ; lpOverlapped
lea     eax, [ebp+NumberOfBytesWritten]
push    eax             ; lpNumberOfBytesWritten
push    [ebp+nNumberOfBytesToWrite] ; nNumberOfBytesToWrite
mov     [ebp+NumberOfBytesWritten], ebx
push    [ebp+lpBuffer]  ; lpBuffer
push    dword ptr [edi+4] ; hFile
call    ds:__imp_WriteFile
mov     ebx, eax

loc_10003570:           ; lpCriticalSection
push    esi
call    ds:__imp_LeaveCriticalSection
pop     edi
pop     esi
mov     eax, ebx
pop     ebx
leave
retn    8
sub_1000353B endp



; Attributes: bp-based frame fpd=1000h

sub_10003580 proc near

var_1080= dword ptr -1080h
SystemTime= _SYSTEMTIME ptr -107Ch
var_106C= dword ptr -106Ch
var_1068= dword ptr -1068h
Buffer= word ptr -1064h
var_64= word ptr -64h
Destination= word ptr -24h
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h
arg_C= dword ptr  14h

push    ebp
lea     ebp, [esp-1000h]
mov     eax, 1080h
call    __alloca_probe
mov     eax, ___security_cookie
xor     eax, ebp
mov     [ebp+1000h+var_4], eax
mov     eax, [ebp+1000h+arg_4]
push    ebx
push    esi
push    edi
mov     [ebp+1000h+var_1080], eax
mov     eax, [ebp+1000h+arg_C]
mov     ebx, offset CriticalSection
push    ebx             ; lpCriticalSection
mov     esi, ecx
mov     [ebp+1000h+var_1068], eax
call    ds:__imp_EnterCriticalSection
mov     edi, [ebp+1000h+arg_0]
xor     eax, eax
mov     [ebp+1000h+var_106C], eax
test    [esi+0Ch], edi
jz      loc_100036E6
cmp     [ebp+1000h+var_1068], eax
jz      loc_100036E6
cmp     [esi+4], eax
jz      loc_100036E6
push    10h             ; Size
push    eax             ; Val
lea     eax, [ebp+1000h+SystemTime]
push    eax             ; void *
call    _memset
push    40h ; '@'       ; Size
lea     eax, [ebp+1000h+var_64]
push    0               ; Val
push    eax             ; void *
call    _memset
add     esp, 18h
lea     eax, [ebp+1000h+SystemTime]
push    eax             ; lpSystemTime
call    ds:GetLocalTime
movzx   eax, [ebp+1000h+SystemTime.wYear]
sub     eax, 7D0h
push    eax
movzx   eax, [ebp+1000h+SystemTime.wDay]
push    eax
movzx   eax, [ebp+1000h+SystemTime.wMonth]
push    eax
movzx   eax, [ebp+1000h+SystemTime.wSecond]
push    eax
movzx   eax, [ebp+1000h+SystemTime.wMinute]
push    eax
movzx   eax, [ebp+1000h+SystemTime.wHour]
push    eax             ; ArgList
push    offset a02d02d02d02d02 ; "%02d:%02d:%02d %02d/%02d/%02d"
lea     eax, [ebp+1000h+var_64]
push    1Fh             ; BufferCount
push    eax             ; Buffer
call    sub_100032C4
push    20h ; ' '       ; Size
lea     eax, [ebp+1000h+Destination]
push    0               ; Val
push    eax             ; void *
call    _memset
add     esp, 30h
dec     edi
jz      short loc_1000367F
dec     edi
jz      short loc_10003678
dec     edi
dec     edi
lea     eax, [ebp+1000h+Destination]
jz      short loc_10003671
push    offset aMessage_0 ; "MESSAGE:"
jmp     short loc_1000368A

loc_10003671:
push    offset aDebug   ; "DEBUG:"
jmp     short loc_1000368A

loc_10003678:
push    offset aError   ; "ERROR:"
jmp     short loc_10003684

loc_1000367F:
push    offset aInfo    ; "INFO:"

loc_10003684:
lea     eax, [ebp+1000h+Destination]

loc_1000368A:           ; SizeInWords
push    10h
push    eax             ; Destination
call    _wcscpy_s
add     esp, 0Ch
push    1000h           ; Size
lea     eax, [ebp+1000h+Buffer]
push    0               ; Val
push    eax             ; void *
call    _memset
push    [ebp+1000h+var_1068]
lea     eax, [ebp+1000h+Destination]
push    eax
push    [ebp+1000h+arg_8]
lea     eax, [ebp+1000h+var_64]
push    [ebp+1000h+var_1080]
push    eax
push    dword ptr [esi+8]
lea     eax, [ebp+1000h+Buffer]
push    offset aFromSAtSFileSL ; "FROM: \"%s\" AT: %s\r\nFILE: %s LINE: %"...
push    800h            ; BufferCount
push    eax             ; Buffer
call    _swprintf_s
mov     eax, [esi]
add     esp, 30h
lea     ecx, [ebp+1000h+Buffer]
push    ecx
mov     ecx, esi
call    dword ptr [eax+1Ch]
mov     [ebp+1000h+var_106C], eax

loc_100036E6:           ; lpCriticalSection
push    ebx
call    ds:__imp_LeaveCriticalSection
mov     ecx, [ebp+1000h+var_4]
mov     eax, [ebp+1000h+var_106C]
pop     edi
pop     esi
xor     ecx, ebp        ; StackCookie
pop     ebx
call    @__security_check_cookie@4 ; __security_check_cookie(x)
add     ebp, 1000h
leave
retn    10h
sub_10003580 endp




sub_1000370A proc near
push    esi
mov     esi, ecx
and     dword ptr [esi+4], 0
push    offset String   ; "_APPLICATION_NAME_"
mov     dword ptr [esi], offset off_1001059C
call    __wcsdup
and     dword ptr [esi+0Ch], 0
pop     ecx
push    1
mov     ecx, esi
mov     [esi+8], eax
call    sub_100033A6
mov     eax, esi
pop     esi
retn
sub_1000370A endp




sub_10003736 proc near
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset off_1001059C
call    sub_100033B0
mov     ecx, esi
call    sub_10003454
mov     dword ptr [esi], offset off_10010488
pop     esi
retn
sub_10003736 endp




sub_10003753 proc near
push    esi
mov     esi, offset CriticalSection
push    esi             ; lpCriticalSection
call    ds:__imp_EnterCriticalSection
cmp     dword_100217E8, 0
jnz     short loc_10003785
push    10h             ; Size
call    ??2@YAPAXI@Z    ; operator new(uint)
pop     ecx
test    eax, eax
jz      short loc_1000377E
mov     ecx, eax
call    sub_1000370A
jmp     short loc_10003780

loc_1000377E:
xor     eax, eax

loc_10003780:
mov     dword_100217E8, eax

loc_10003785:           ; lpCriticalSection
push    esi
call    ds:__imp_LeaveCriticalSection
mov     eax, dword_100217E8
pop     esi
retn
sub_10003753 endp




; int __stdcall sub_10003793(wchar_t *String)
sub_10003793 proc near

String= dword ptr  4

push    ebx
push    ebp
push    esi
push    edi
mov     edi, offset CriticalSection
push    edi             ; lpCriticalSection
mov     esi, ecx
call    ds:__imp_EnterCriticalSection
mov     ecx, esi
xor     ebp, ebp
call    sub_100033B0
mov     ebx, [esp+10h+String]
test    ebx, ebx
jz      short loc_100037D0
push    ebx             ; String
call    _wcslen
pop     ecx
test    eax, eax
jz      short loc_100037D0
push    ebx             ; String
call    __wcsdup
pop     ecx
mov     [esi+8], eax
test    eax, eax
jz      short loc_100037D0
inc     ebp

loc_100037D0:           ; lpCriticalSection
push    edi
call    ds:__imp_LeaveCriticalSection
pop     edi
pop     esi
mov     eax, ebp
pop     ebp
pop     ebx
retn    4
sub_10003793 endp


loc_100037E0:
push    esi
mov     esi, ecx
call    sub_10003736
test    byte ptr [esp+8], 1
jz      short loc_100037F6
push    esi
call    ??3@YAXPAX@Z    ; operator delete(void *)
pop     ecx

loc_100037F6:
mov     eax, esi
pop     esi
retn    4


; Attributes: bp-based frame

; int __stdcall sub_100037FC(int, int, int Value)
sub_100037FC proc near

var_5C= dword ptr -5Ch
var_58= dword ptr -58h
Buffer= word ptr -54h
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
Value= dword ptr  10h

; FUNCTION CHUNK AT 10001E20 SIZE 0000000A BYTES
; FUNCTION CHUNK AT 1000F718 SIZE 00000038 BYTES

; __unwind { // loc_1000F72B
push    50h
mov     eax, offset loc_1000F72B
call    __EH_prolog3_catch_GS
mov     eax, [ebp+arg_4]
mov     ebx, [ebp+arg_0]
mov     edi, ecx
mov     [ebp+var_58], edi
mov     [ebp+var_5C], eax
call    sub_100043DE
;   try {
and     [ebp+var_4], 0
lea     esi, [edi+0Ch]
mov     ecx, esi
mov     dword ptr [edi], offset off_100106A4
call    ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::wstring::wstring(void)
push    offset aMessage ; "Message: "
mov     ecx, esi        ; int
;   } // starts at 1000381B
;   try {
mov     byte ptr [ebp+var_4], 2
call    ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z_0 ; std::wstring::assign(wchar_t const *)
mov     ebx, [ebx]
mov     ecx, esi        ; int
test    ebx, ebx
jz      short loc_1000384A
push    ebx
jmp     short loc_1000384F

loc_1000384A:
push    offset aEmptyMessage ; "empty message"

loc_1000384F:
call    ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z_0 ; std::wstring::assign(wchar_t const *)
mov     ebx, offset asc_10010448 ; " "
push    ebx             ; String
mov     ecx, esi        ; int
call    ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z_0 ; std::wstring::assign(wchar_t const *)
push    offset aFile    ; "File: "
mov     ecx, esi        ; int
call    ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z_0 ; std::wstring::assign(wchar_t const *)
mov     eax, [ebp+var_5C]
mov     eax, [eax]
mov     ecx, esi        ; int
test    eax, eax
jz      short loc_1000387B
push    eax
jmp     short loc_10003880

loc_1000387B:
push    offset aUnknownFile ; "unknown file"

loc_10003880:
call    ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z_0 ; std::wstring::assign(wchar_t const *)
push    ebx             ; String
mov     ecx, esi        ; int
call    ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z_0 ; std::wstring::assign(wchar_t const *)
push    offset aLine    ; "Line: "
mov     ecx, esi        ; int
call    ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z_0 ; std::wstring::assign(wchar_t const *)
xor     eax, eax
push    0Ah             ; Radix
mov     [ebp+Buffer], ax
push    20h ; ' '       ; BufferCount
lea     eax, [ebp+Buffer]
push    eax             ; Buffer
push    [ebp+Value]     ; Value
call    __itow_s
add     esp, 10h
mov     ecx, esi        ; int
test    eax, eax
jnz     short loc_100038BE
lea     eax, [ebp+Buffer]
push    eax
jmp     short loc_100038C3

loc_100038BE:
push    offset aUnknownLine ; "unknown line"

loc_100038C3:
call    ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z_0 ; std::wstring::assign(wchar_t const *)
jmp     short loc_100038E3

loc_100038CA:
;   catch(...) // owned by 10003836
mov     ecx, [ebp+var_58]
push    offset aExceptionInCon ; "Exception in constructor"
add     ecx, 0Ch
call    ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z ; std::wstring::assign(wchar_t const *)
mov     eax, offset loc_100038E0
retn

loc_100038E0:
mov     edi, [ebp+var_58]

loc_100038E3:
mov     eax, edi
call    __EH_epilog3_catch_GS
retn    0Ch
;   } // starts at 10003836
; } // starts at 100037FC
sub_100037FC endp




sub_100038ED proc near
mov     eax, offset aPleaseUseWhatW ; "Please use \"what_w\" member function i"...
retn
sub_100038ED endp




sub_100038F3 proc near
cmp     dword ptr [ecx+24h], 8
jb      short loc_100038FD
mov     eax, [ecx+10h]
retn

loc_100038FD:
lea     eax, [ecx+10h]
retn
sub_100038F3 endp




sub_10003901 proc near
push    esi
mov     esi, ecx
push    0               ; N
push    1               ; char
lea     ecx, [esi+0Ch]
mov     dword ptr [esi], offset off_100106A4
call    ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEX_NI@Z ; std::wstring::_Tidy(bool,uint)
mov     ecx, esi
pop     esi
jmp     sub_100044BC
sub_10003901 endp


loc_1000391E:
push    esi
mov     esi, ecx
call    sub_10003901
test    byte ptr [esp+8], 1
jz      short loc_10003934
push    esi
call    ??3@YAXPAX@Z    ; operator delete(void *)
pop     ecx

loc_10003934:
mov     eax, esi
pop     esi
retn    4


; Attributes: bp-based frame

sub_1000393A proc near

pExceptionObject= byte ptr -40h
var_18= dword ptr -18h
var_14= dword ptr -14h
var_10= dword ptr -10h
var_4= dword ptr -4
arg_4= dword ptr  0Ch

; FUNCTION CHUNK AT 1000F750 SIZE 00000023 BYTES

; __unwind { // loc_1000F758
push    34h
mov     eax, offset loc_1000F758
call    __EH_prolog3
mov     esi, ecx
mov     [ebp+var_18], esi
;   try {
and     [ebp+var_4], 0
push    0FA0h           ; dwSpinCount
lea     eax, [esi+4]
push    eax             ; lpCriticalSection
mov     dword ptr [esi], offset off_10010474
call    ds:InitializeCriticalSectionAndSpinCount
test    eax, eax
jnz     short loc_10003996
push    44h ; 'D'       ; Value
lea     eax, [ebp+var_10]
push    eax             ; int
lea     eax, [ebp+var_14]
push    eax             ; int
lea     ecx, [ebp+pExceptionObject]
mov     [ebp+var_10], offset aCommonIncludeC ; "..\\..\\..\\..\\common\\include\\critse"...
mov     [ebp+var_14], offset aCouldNotCreate ; "could not create critical section"
call    sub_100037FC
push    offset stru_10012C48 ; pThrowInfo
lea     eax, [ebp+pExceptionObject]
push    eax             ; pExceptionObject
call    __CxxThrowException@8 ; _CxxThrowException(x,x)

loc_10003996:
mov     eax, esi
call    __EH_epilog3
retn
;   } // starts at 1000394B
; } // starts at 1000393A
sub_1000393A endp




sub_1000399E proc near

arg_0= dword ptr  4

mov     eax, [esp+arg_0]
push    esi
mov     esi, ecx
cmp     esi, eax
jz      short loc_100039B9
push    0FFFFFFFFh
push    0
add     eax, 0Ch
push    eax
lea     ecx, [esi+0Ch]
call    sub_10001FDC

loc_100039B9:
mov     eax, esi
pop     esi
retn    4
sub_1000399E endp



; Attributes: bp-based frame

sub_100039BF proc near

var_14= dword ptr -14h
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch

; FUNCTION CHUNK AT 10001E20 SIZE 0000000A BYTES
; FUNCTION CHUNK AT 1000F773 SIZE 0000002E BYTES

; __unwind { // loc_1000F786
push    8
mov     eax, offset loc_1000F786
call    __EH_prolog3_catch
mov     esi, ecx
mov     [ebp+var_14], esi
call    sub_100043DE
;   try {
and     [ebp+var_4], 0
lea     ecx, [esi+0Ch]
mov     dword ptr [esi], offset off_100106A4
call    ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ ; std::wstring::wstring(void)
push    [ebp+arg_0]
mov     ecx, esi
;   } // starts at 100039D5
;   try {
mov     byte ptr [ebp+var_4], 2
call    sub_1000399E
jmp     short loc_10003A10

loc_100039F7:
;   catch(...) // owned by 100039EC
mov     ecx, [ebp+var_14]
push    offset aExceptionInCon ; "Exception in constructor"
add     ecx, 0Ch
call    ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z ; std::wstring::assign(wchar_t const *)
mov     eax, offset loc_10003A0D
retn

loc_10003A0D:
mov     esi, [ebp+var_14]

loc_10003A10:
mov     eax, esi
call    __EH_epilog3
retn    4
;   } // starts at 100039EC
; } // starts at 100039BF
sub_100039BF endp

; [00000028 BYTES: COLLAPSED FUNCTION std::string::operator[](uint)]


; Attributes: bp-based frame

; int __cdecl sub_10003A42(char *)
sub_10003A42 proc near

pExceptionObject= dword ptr -0Ch
arg_0= dword ptr  8

push    ebp
mov     ebp, esp
mov     ecx, [ebp+arg_0]
sub     esp, 0Ch
test    ecx, ecx
ja      short loc_10003A5D
xor     ecx, ecx

loc_10003A51:
imul    ecx, 0Ch
push    ecx             ; Size
call    ??2@YAPAXI@Z    ; operator new(uint)
pop     ecx
leave
retn

loc_10003A5D:
or      eax, 0FFFFFFFFh
xor     edx, edx
div     ecx
cmp     eax, 0Ch
jnb     short loc_10003A51
and     [ebp+arg_0], 0
lea     eax, [ebp+arg_0]
push    eax             ; char **
lea     ecx, [ebp+pExceptionObject] ; this
call    ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception(char const * const &)
push    offset pThrowInfo ; pThrowInfo
lea     eax, [ebp+pExceptionObject]
push    eax             ; pExceptionObject
mov     [ebp+pExceptionObject], offset off_10010240
call    __CxxThrowException@8 ; _CxxThrowException(x,x)
sub_10003A42 endp

db 0CCh



sub_10003A8F proc near
push    0
push    1               ; char *
call    sub_10003A42
pop     ecx
pop     ecx
test    eax, eax
jz      short loc_10003AA0
mov     [eax], eax

loc_10003AA0:
lea     ecx, [eax+4]
test    ecx, ecx
jz      short locret_10003AA9
mov     [ecx], eax

locret_10003AA9:
retn
sub_10003A8F endp




sub_10003AAA proc near

arg_0= dword ptr  4
arg_4= dword ptr  8

mov     eax, [esp+arg_0]
push    esi
mov     esi, ecx
and     dword ptr [esi], 0
push    edi
mov     edi, [esp+8+arg_4]
mov     [esi+4], eax
test    edi, edi
jnz     short loc_10003AC5
call    __invalid_parameter_noinfo

loc_10003AC5:
mov     eax, [edi]
mov     [esi], eax
pop     edi
mov     eax, esi
pop     esi
retn    8
sub_10003AAA endp



; Attributes: bp-based frame

sub_10003AD0 proc near

var_24= byte ptr -24h
var_1C= byte ptr -1Ch
var_14= byte ptr -14h
var_C= dword ptr -0Ch
var_8= dword ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8

push    ebp
mov     ebp, esp
sub     esp, 24h
push    ebx
mov     ebx, ecx
cmp     dword ptr [ebx+18h], 0
mov     [ebp+var_C], ebx
jz      loc_10003BC5
push    edi
mov     edi, [ebp+arg_0]
mov     eax, [edi+14h]
mov     [ebp+arg_0], eax
mov     eax, [ebx+14h]
push    ebx
push    dword ptr [eax]
lea     ecx, [ebp+var_14]
call    sub_10003AAA
push    ebx
push    dword ptr [ebx+14h]
lea     ecx, [ebp+var_1C]
call    sub_10003AAA
lea     eax, [ebp+var_1C]
push    eax
lea     ecx, [ebp+var_14]
call    sub_100019C7
test    al, al
jnz     loc_10003BC4
push    esi

loc_10003B1F:
lea     ecx, [ebp+var_14]
call    sub_10001965
mov     eax, [eax]
push    ebx
push    dword ptr [ebx+14h]
lea     ecx, [ebp+var_24]
mov     [ebp+var_4], eax
call    sub_10003AAA
lea     ecx, [ebp+var_14]
call    sub_10001994
lea     eax, [ebp+var_24]
push    eax
lea     ecx, [ebp+var_14]
call    sub_100019C7
test    al, al
jnz     short loc_10003BA3
lea     ecx, [ebp+var_14]
call    sub_10001965
mov     esi, [eax]
mov     eax, [ebp+var_4]
cmp     eax, [ebp+arg_0]
mov     [ebp+var_8], esi
jge     short loc_10003B9B
cmp     esi, [ebp+arg_0]
jge     short loc_10003B9B
push    eax
mov     ecx, edi
call    ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::string::operator[](uint)
mov     bl, [eax]
push    esi
mov     ecx, edi
call    ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::string::operator[](uint)
push    [ebp+var_4]
mov     ecx, edi
mov     esi, eax
call    ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::string::operator[](uint)
mov     cl, [esi]
push    [ebp+var_8]
mov     [eax], cl
mov     ecx, edi
call    ??A?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAADI@Z ; std::string::operator[](uint)
mov     [eax], bl
mov     ebx, [ebp+var_C]

loc_10003B9B:
lea     ecx, [ebp+var_14]
call    sub_10001994

loc_10003BA3:
push    ebx
push    dword ptr [ebx+14h]
lea     ecx, [ebp+var_1C]
call    sub_10003AAA
lea     eax, [ebp+var_1C]
push    eax
lea     ecx, [ebp+var_14]
call    sub_100019C7
test    al, al
jz      loc_10003B1F
pop     esi

loc_10003BC4:
pop     edi

loc_10003BC5:
pop     ebx
leave
retn    4
sub_10003AD0 endp




sub_10003BCA proc near

arg_0= byte ptr  4
arg_4= byte ptr  8

push    esi
lea     eax, [esp+4+arg_0]
push    eax
mov     esi, ecx
call    sub_100023C0
lea     eax, [esp+4+arg_4]
push    eax
mov     ecx, esi
call    sub_100023C0
pop     esi
retn    8
sub_10003BCA endp



; Attributes: bp-based frame

sub_10003BE7 proc near

var_10= dword ptr -10h
var_4= dword ptr -4
arg_4= dword ptr  0Ch

; FUNCTION CHUNK AT 10002F56 SIZE 00000012 BYTES
; FUNCTION CHUNK AT 1000F7A1 SIZE 00000023 BYTES

; __unwind { // loc_1000F7A9
push    4
mov     eax, offset loc_1000F7A9
call    __EH_prolog3
mov     esi, ecx
mov     [ebp+var_10], esi
call    sub_100022AB
;   try {
and     [ebp+var_4], 0
push    3
push    0
mov     ecx, esi
call    sub_10003BCA
push    2
push    1
mov     ecx, esi
call    sub_10003BCA
push    5
push    4
mov     ecx, esi
call    sub_10003BCA
push    4
push    2
mov     ecx, esi
call    sub_10003BCA
push    2
push    7
mov     ecx, esi
call    sub_10003BCA
push    3
push    6
mov     ecx, esi
call    sub_10003BCA
push    9
push    6
mov     ecx, esi
call    sub_10003BCA
push    8
push    4
mov     ecx, esi
call    sub_10003BCA
push    7
push    3
mov     ecx, esi
call    sub_10003BCA
push    0
push    7
mov     ecx, esi
call    sub_10003BCA
push    8
push    0Ch
mov     ecx, esi
call    sub_10003BCA
push    0
push    0Bh
mov     ecx, esi
call    sub_10003BCA
push    0Dh
push    0Fh
mov     ecx, esi
call    sub_10003BCA
push    7
push    0Eh
mov     ecx, esi
call    sub_10003BCA
push    8
push    0Dh
mov     ecx, esi
call    sub_10003BCA
mov     eax, esi
call    __EH_epilog3
retn
;   } // starts at 10003BFD
; } // starts at 10003BE7
sub_10003BE7 endp



; Attributes: thunk

sub_10003CAE proc near
jmp     sub_10003379
sub_10003CAE endp



; Attributes: bp-based frame

sub_10003CB3 proc near

arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h
arg_C= dword ptr  14h

push    ebp
mov     ebp, esp
push    ebx
push    esi
push    edi
mov     edi, [ebp+arg_0]
mov     esi, ecx
cmp     [esi+14h], edi
jnb     short loc_10003CC8
call    sub_1000F4E5

loc_10003CC8:
mov     eax, [esi+14h]
mov     ebx, [ebp+arg_4]
sub     eax, edi
cmp     eax, ebx
jnb     short loc_10003CD6
mov     ebx, eax

loc_10003CD6:
mov     eax, [ebp+arg_C]
cmp     ebx, eax
jnb     short loc_10003CDF
mov     eax, ebx

loc_10003CDF:
cmp     dword ptr [esi+18h], 8
jb      short loc_10003CEA
mov     esi, [esi+4]
jmp     short loc_10003CED

loc_10003CEA:
add     esi, 4

loc_10003CED:
push    eax
push    [ebp+arg_8]
lea     eax, [esi+edi*2]
push    eax
call    sub_10002A79
add     esp, 0Ch
test    eax, eax
jnz     short loc_10003D13
cmp     ebx, [ebp+arg_C]
jnb     short loc_10003D0B
or      eax, 0FFFFFFFFh
jmp     short loc_10003D13

loc_10003D0B:
xor     eax, eax
cmp     ebx, [ebp+arg_C]
setnz   al

loc_10003D13:
pop     edi
pop     esi
pop     ebx
pop     ebp
retn    10h
sub_10003CB3 endp

; [00000022 BYTES: COLLAPSED FUNCTION std::string::compare(char const *)]


; Attributes: bp-based frame

; int __cdecl sub_10003D3C(int, int, wchar_t *String)
sub_10003D3C proc near

var_2C= byte ptr -2Ch
var_10= dword ptr -10h
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
String= dword ptr  10h

; FUNCTION CHUNK AT 10001E20 SIZE 0000000A BYTES
; FUNCTION CHUNK AT 1000F7C4 SIZE 00000023 BYTES

; __unwind { // loc_1000F7CC
push    20h
mov     eax, offset loc_1000F7CC
call    __EH_prolog3
push    [ebp+arg_4]
and     [ebp+var_10], 0
lea     ecx, [ebp+var_2C]
call    ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ; std::wstring::wstring(std::wstring const &)
push    [ebp+String]    ; String
;   try {
and     [ebp+var_4], 0
mov     ecx, eax        ; int
call    ?assign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAEAAV12@PB_W@Z_0 ; std::wstring::assign(wchar_t const *)
mov     ecx, [ebp+arg_0]
push    eax
call    ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@ABV01@@Z ; std::wstring::wstring(std::wstring const &)
push    0               ; N
push    1               ; char
lea     ecx, [ebp+var_2C]
call    ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEX_NI@Z ; std::wstring::_Tidy(bool,uint)
mov     eax, [ebp+arg_0]
call    __EH_epilog3
retn
;   } // starts at 10003D5A
; } // starts at 10003D3C
sub_10003D3C endp



; Attributes: bp-based frame

; int __cdecl sub_10003D83(int, wchar_t *String)
sub_10003D83 proc near

var_64= byte ptr -64h
pExceptionObject= byte ptr -3Ch
nSize= dword ptr -14h
var_10= dword ptr -10h
var_4= dword ptr -4
arg_0= dword ptr  8
String= dword ptr  0Ch

; FUNCTION CHUNK AT 10002E05 SIZE 00000009 BYTES
; FUNCTION CHUNK AT 1000F7E7 SIZE 00000023 BYTES

; __unwind { // loc_1000F7EF
push    58h
mov     eax, offset loc_1000F7EF
call    __EH_prolog3
xor     ecx, ecx
mov     [ebp+nSize], ecx
mov     edi, [ebp+String]
cmp     [edi+14h], ecx
jnz     short loc_10003DCD
mov     [ebp+String], offset aCommonIncludeH ; "..\\..\\..\\..\\common\\include\\helper"...
mov     [ebp+var_10], offset aInvalidEnviron ; "Invalid environment variable name ( emp"...
push    1BAh            ; Value
lea     eax, [ebp+String]

loc_10003DB2:           ; int
push    eax
lea     eax, [ebp+var_10]

loc_10003DB6:           ; int
push    eax
lea     ecx, [ebp+pExceptionObject]

loc_10003DBA:
call    sub_100037FC
push    offset stru_10012C48 ; pThrowInfo
lea     eax, [ebp+pExceptionObject]

loc_10003DC7:           ; pExceptionObject
push    eax
call    __CxxThrowException@8 ; _CxxThrowException(x,x)

loc_10003DCD:
cmp     dword ptr [edi+18h], 8
lea     esi, [edi+4]
jb      short loc_10003DDA
mov     eax, [esi]
jmp     short loc_10003DDC

loc_10003DDA:
mov     eax, esi

loc_10003DDC:
mov     ebx, ds:GetEnvironmentVariableW
push    ecx             ; nSize
push    ecx             ; lpBuffer
push    eax             ; lpName
call    ebx ; GetEnvironmentVariableW
mov     [ebp+nSize], eax
test    eax, eax
jnz     short loc_10003E29
call    ds:__imp_GetLastError
cmp     eax, 0CBh
mov     [ebp+String], offset aCommonIncludeH ; "..\\..\\..\\..\\common\\include\\helper"...
lea     ecx, [ebp+pExceptionObject]
lea     eax, [ebp+String]
jnz     short loc_10003E1B
mov     [ebp+var_10], offset aRequestedEnvir ; "Requested environment variable does not"...
push    1C5h

loc_10003E14:
push    eax
lea     eax, [ebp+var_10]
push    eax
jmp     short loc_10003DBA

loc_10003E1B:
mov     [ebp+var_10], offset aCouldNotGetReq ; "Could not get requested environment var"...
push    1C8h
jmp     short loc_10003E14

loc_10003E29:
xor     ecx, ecx
push    2
pop     edx
mul     edx
seto    cl
neg     ecx
or      ecx, eax
push    ecx             ; unsigned int
call    ??_U@YAPAXI@Z   ; operator new[](uint)
pop     ecx
mov     [ebp+String], eax
;   try {
and     [ebp+var_4], 0
test    eax, eax
jnz     short loc_10003E68
lea     eax, [ebp+var_10]
push    1CFh
push    eax
mov     [ebp+var_10], offset aCommonIncludeH ; "..\\..\\..\\..\\common\\include\\helper"...
mov     [ebp+nSize], offset aNotEnoughMemor ; "Not enough memory"
lea     eax, [ebp+nSize]
jmp     loc_10003DB6

loc_10003E68:
cmp     dword ptr [edi+18h], 8
jb      short loc_10003E70
mov     esi, [esi]

loc_10003E70:           ; nSize
push    [ebp+nSize]
push    eax             ; lpBuffer
push    esi             ; lpName
call    ebx ; GetEnvironmentVariableW
test    eax, eax
jnz     short loc_10003EC9
call    ds:__imp_GetLastError
cmp     eax, 0CBh
mov     [ebp+nSize], offset aCommonIncludeH ; "..\\..\\..\\..\\common\\include\\helper"...
lea     eax, [ebp+nSize]
jnz     short loc_10003EA3
mov     [ebp+var_10], offset aRequestedEnvir ; "Requested environment variable does not"...
push    1DAh
jmp     loc_10003DB2

loc_10003EA3:           ; Value
push    1DDh
push    eax             ; int
lea     eax, [ebp+var_10]
push    eax             ; int
lea     ecx, [ebp+var_64]
mov     [ebp+var_10], offset aCouldNotGetReq ; "Could not get requested environment var"...
call    sub_100037FC
push    offset stru_10012C48
lea     eax, [ebp+var_64]
jmp     loc_10003DC7

loc_10003EC9:           ; String
push    [ebp+String]
mov     ecx, [ebp+arg_0]
call    ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::wstring::wstring(wchar_t const *)
push    [ebp+String]    ; void *
call    ??3@YAXPAX@Z    ; operator delete(void *)
mov     eax, [ebp+arg_0]
pop     ecx
call    __EH_epilog3
retn
;   } // starts at 10003E41
; } // starts at 10003D83
sub_10003D83 endp



; Attributes: bp-based frame

sub_10003EE6 proc near

var_84= byte ptr -84h
var_68= dword ptr -68h
String= word ptr -4Ch
var_30= dword ptr -30h
var_2C= dword ptr -2Ch
var_28= dword ptr -28h
var_14= dword ptr -14h
var_4= dword ptr -4
arg_4= dword ptr  0Ch

; FUNCTION CHUNK AT 10001E20 SIZE 0000000A BYTES
; FUNCTION CHUNK AT 1000F80A SIZE 0000004B BYTES

; __unwind { // loc_1000F82D
push    78h
mov     eax, offset loc_1000F82D
call    __EH_prolog3_GS
xor     edi, edi
mov     [ebp+var_30], edi
call    sub_10003753
mov     esi, eax
cmp     esi, edi
jz      loc_10003FF7
push    offset a827f7cb1A5e94d ; "827F7CB1-A5E9-4DE2-B0E1-E571DD1D14F9"
lea     ecx, [ebp+String]
call    ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::wstring::wstring(wchar_t const *)
lea     eax, [ebp+String]
push    eax             ; String
lea     eax, [ebp+var_2C]
push    eax             ; int
;   try {
mov     [ebp+var_4], edi
call    sub_10003D83
pop     ecx
pop     ecx
push    edi             ; N
push    1               ; char
lea     ecx, [ebp+String]
;   } // starts at 10003F1B
;   try {
mov     byte ptr [ebp+var_4], 2
call    ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEX_NI@Z ; std::wstring::_Tidy(bool,uint)
mov     ebx, offset aD7ccf60e527b47 ; "D7CCF60E-527B-4722-A41F-4EB6C11B3F74"
push    ebx             ; String
lea     ecx, [ebp+var_2C]
call    ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ; std::string::compare(char const *)
test    eax, eax
jnz     short loc_10003F52
mov     [ebp+var_30], 1
jmp     loc_10003FEC

loc_10003F52:           ; String
push    ebx
lea     ecx, [ebp+var_2C]
call    ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEHPBD@Z ; std::string::compare(char const *)
test    eax, eax
jz      loc_10003FEC
mov     eax, [esi]
push    1
mov     ecx, esi
call    dword ptr [eax+10h]
mov     eax, [esi]
push    2
mov     ecx, esi
call    dword ptr [eax+10h]
mov     eax, [esi]
push    offset aDongleDongleDl ; "Dongle ( Dongle.DLL )"
mov     ecx, esi
call    dword ptr [eax+0Ch]
push    offset asc_10010A40 ; "\\"
lea     ecx, [ebp+var_84]
call    ??0?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@PB_W@Z ; std::wstring::wstring(wchar_t const *)
push    offset aDongleLog ; "Dongle.LOG"
push    eax             ; int
lea     eax, [ebp+var_68]
push    eax             ; int
;   } // starts at 10003F2B
;   try {
mov     byte ptr [ebp+var_4], 3
call    sub_10003D3C
add     esp, 0Ch
push    0FFFFFFFFh      ; N
push    edi             ; int
push    eax             ; int
lea     ecx, [ebp+var_2C]
;   } // starts at 10003F9B
;   try {
mov     byte ptr [ebp+var_4], 4
call    sub_10002E0E
push    edi             ; N
push    1               ; char
lea     ecx, [ebp+var_68]
call    ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEX_NI@Z ; std::wstring::_Tidy(bool,uint)
push    edi             ; N
push    1               ; char
lea     ecx, [ebp+var_84]
;   } // starts at 10003FAE
;   try {
mov     byte ptr [ebp+var_4], 2
call    ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEX_NI@Z ; std::wstring::_Tidy(bool,uint)
cmp     [ebp+var_14], 8
mov     eax, [ebp+var_28]
jnb     short loc_10003FE0
lea     eax, [ebp+var_28]

loc_10003FE0:
mov     edx, [esi]
push    edi
push    eax
mov     ecx, esi
call    dword ptr [edx+4]
mov     [ebp+var_30], eax

loc_10003FEC:           ; N
push    edi
push    1               ; char
lea     ecx, [ebp+var_2C]
call    ?_Tidy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEX_NI@Z ; std::wstring::_Tidy(bool,uint)

loc_10003FF7:
mov     eax, [ebp+var_30]
call    __EH_epilog3_GS
retn
;   } // starts at 10003FCB
; } // starts at 10003EE6
sub_10003EE6 endp




; BOOL __stdcall DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)
_DllMain@12 proc near

hinstDLL= dword ptr  4
fdwReason= dword ptr  8
lpvReserved= dword ptr  0Ch

mov     eax, [esp+fdwReason]
push    esi
xor     esi, esi
inc     esi
sub     eax, 0
jz      short loc_10004019
dec     eax
jnz     short loc_1000401E
call    sub_10003EE6
mov     esi, eax
jmp     short loc_1000401E

loc_10004019:
call    sub_10003CAE

loc_1000401E:
mov     eax, esi
pop     esi
retn    0Ch
_DllMain@12 endp

; [00000006 BYTES: COLLAPSED FUNCTION GetLastError]
; [00000006 BYTES: COLLAPSED FUNCTION CloseHandle]
; [00000006 BYTES: COLLAPSED FUNCTION EnterCriticalSection]
; [00000006 BYTES: COLLAPSED FUNCTION LeaveCriticalSection]
; [00000006 BYTES: COLLAPSED FUNCTION WriteFile]
; [00000006 BYTES: COLLAPSED FUNCTION GetModuleHandleA]
; [00000006 BYTES: COLLAPSED FUNCTION GetCurrentProcessId]
; [00000006 BYTES: COLLAPSED FUNCTION GetEnvironmentVariableA]
; [00000006 BYTES: COLLAPSED FUNCTION GetOverlappedResult]
; [00000006 BYTES: COLLAPSED FUNCTION GlobalLock]
; [00000006 BYTES: COLLAPSED FUNCTION CreateFileA]
; [00000006 BYTES: COLLAPSED FUNCTION ReadFile]
; [00000006 BYTES: COLLAPSED FUNCTION GlobalFree]
; [00000006 BYTES: COLLAPSED FUNCTION Sleep]
; [00000006 BYTES: COLLAPSED FUNCTION GetTickCount]
; [00000006 BYTES: COLLAPSED FUNCTION WaitForSingleObject]
; [00000006 BYTES: COLLAPSED FUNCTION InitializeCriticalSection]
; [00000006 BYTES: COLLAPSED FUNCTION GetCurrentThread]
; [00000006 BYTES: COLLAPSED FUNCTION FreeLibrary]
; [00000006 BYTES: COLLAPSED FUNCTION GetProcAddress]
; [00000006 BYTES: COLLAPSED FUNCTION GetCurrentProcess]
; [00000006 BYTES: COLLAPSED FUNCTION LoadLibraryA]
; [00000006 BYTES: COLLAPSED FUNCTION GlobalAlloc]
; [00000006 BYTES: COLLAPSED FUNCTION GetVersion]
; [00000006 BYTES: COLLAPSED FUNCTION GlobalUnlock]
; [00000006 BYTES: COLLAPSED FUNCTION CreateEventA]
; [00000006 BYTES: COLLAPSED FUNCTION DeviceIoControl]
; [0000000F BYTES: COLLAPSED FUNCTION __security_check_cookie(x)]
align 10h
; [00000088 BYTES: COLLAPSED FUNCTION _strcmp]
align 10h
; [0000008B BYTES: COLLAPSED FUNCTION _strlen]
; [00000068 BYTES: COLLAPSED FUNCTION _strcpy_s]
align 10h
; [0000007A BYTES: COLLAPSED FUNCTION _memset]
; [0000007D BYTES: COLLAPSED FUNCTION _memcpy_s]
; [0000005D BYTES: COLLAPSED FUNCTION _memmove_s]
; [0000001A BYTES: COLLAPSED FUNCTION _wcslen]



sub_100043DE proc near
mov     eax, ecx
and     dword ptr [eax+4], 0
and     dword ptr [eax+8], 0
mov     dword ptr [eax], offset off_10010A48
retn
sub_100043DE endp

; [00000053 BYTES: COLLAPSED FUNCTION std::exception::exception(char const * const &)]
; [0000001D BYTES: COLLAPSED FUNCTION std::exception::exception(char const * const &,int)]
; [0000005D BYTES: COLLAPSED FUNCTION std::exception::exception(std::exception const &)]



sub_100044BC proc near
cmp     dword ptr [ecx+8], 0
mov     dword ptr [ecx], offset off_10010A48
jz      short locret_100044D1
push    dword ptr [ecx+4] ; Block
call    _free
pop     ecx

locret_100044D1:
retn
sub_100044BC endp

; [0000000D BYTES: COLLAPSED FUNCTION exception::what(void)]


; Attributes: bp-based frame

; int __thiscall sub_100044DF(void *, char)
sub_100044DF proc near

arg_0= byte ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
call    sub_100044BC
test    [ebp+arg_0], 1
jz      short loc_100044F9
push    esi             ; void *
call    ??3@YAXPAX@Z    ; operator delete(void *)
pop     ecx

loc_100044F9:
mov     eax, esi
pop     esi
pop     ebp
retn    4
sub_100044DF endp




sub_10004500 proc near
mov     edi, edi
push    ecx             ; struct type_info *
mov     dword ptr [ecx], offset off_10010A68
call    ?_Type_info_dtor@type_info@@CAXPAV1@@Z ; type_info::_Type_info_dtor(type_info *)
pop     ecx
retn
sub_10004500 endp



; Attributes: bp-based frame

; int __thiscall sub_10004510(void *, char)
sub_10004510 proc near

arg_0= byte ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
call    sub_10004500
test    [ebp+arg_0], 1
jz      short loc_1000452A
push    esi             ; void *
call    ??3@YAXPAX@Z    ; operator delete(void *)
pop     ecx

loc_1000452A:
mov     eax, esi
pop     esi
pop     ebp
retn    4
sub_10004510 endp

; [00000020 BYTES: COLLAPSED FUNCTION type_info::operator==(type_info const &)]
; [0000000B BYTES: COLLAPSED FUNCTION operator delete(void *)]
; [0000000B BYTES: COLLAPSED FUNCTION operator new[](uint)]
; [0000000B BYTES: COLLAPSED FUNCTION operator delete[](void *)]
; [0000001B BYTES: COLLAPSED FUNCTION std::bad_alloc::bad_alloc(void)]
; [00000065 BYTES: COLLAPSED FUNCTION operator new(uint)]
; [0000004C BYTES: COLLAPSED FUNCTION _CxxThrowException(x,x)]


; Attributes: bp-based frame

sub_1000463E proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_10021818, eax
pop     ebp
retn
sub_1000463E endp

; [00000128 BYTES: COLLAPSED FUNCTION __invoke_watson]
; [00000026 BYTES: COLLAPSED FUNCTION __invalid_parameter]
; [00000010 BYTES: COLLAPSED FUNCTION __invalid_parameter_noinfo]
; [0000006F BYTES: COLLAPSED FUNCTION _wcscpy_s]
; [0000002D BYTES: COLLAPSED FUNCTION _JumpToContinuation(void *,EHRegistrationNode *)]
pop     ebx
leave
retn    8
; [00000007 BYTES: COLLAPSED FUNCTION sub_1000484C]
; [00000054 BYTES: COLLAPSED FUNCTION _UnwindNestedFrames(EHRegistrationNode *,EHExceptionRecord *)]
; [00000036 BYTES: COLLAPSED FUNCTION ___CxxFrameHandler3]
; [00000033 BYTES: COLLAPSED FUNCTION CatchGuardHandler(EHExceptionRecord *,CatchGuardRN *,void *,void *)]
; [000000D7 BYTES: COLLAPSED FUNCTION _CallSETranslator(EHExceptionRecord *,EHRegistrationNode *,void *,void *,_s_FuncInfo const *,int,EHRegistrationNode *)]
; [0000009F BYTES: COLLAPSED FUNCTION TranslatorGuardHandler(EHExceptionRecord *,TranslatorGuardRN *,void *,void *)]
; [00000075 BYTES: COLLAPSED FUNCTION _GetRangeOfTrysToCheck(_s_FuncInfo const *,int,int,uint *,uint *)]
; [0000002C BYTES: COLLAPSED FUNCTION __CreateFrameInfo]
; [00000027 BYTES: COLLAPSED FUNCTION __IsExceptionObjectToBeDestroyed]
; [00000052 BYTES: COLLAPSED FUNCTION __FindAndUnlinkFrame]
; [00000060 BYTES: COLLAPSED FUNCTION _CallCatchBlock2(EHRegistrationNode *,_s_FuncInfo const *,void *,int,ulong)]
; [00000033 BYTES: COLLAPSED FUNCTION __EH_prolog3]
; [00000036 BYTES: COLLAPSED FUNCTION __EH_prolog3_catch]
; [00000036 BYTES: COLLAPSED FUNCTION __EH_prolog3_GS]
; [00000039 BYTES: COLLAPSED FUNCTION __EH_prolog3_catch_GS]
; [00000014 BYTES: COLLAPSED FUNCTION __EH_epilog3]
; [0000000F BYTES: COLLAPSED FUNCTION __EH_epilog3_GS]
; [0000000F BYTES: COLLAPSED FUNCTION __EH_epilog3_catch_GS]
; [0000001E BYTES: COLLAPSED FUNCTION _swprintf_s]
; [00000020 BYTES: COLLAPSED FUNCTION __freea]
; [00000087 BYTES: COLLAPSED FUNCTION _LocaleUpdate::_LocaleUpdate(localeinfo_struct *)]
; [0000017E BYTES: COLLAPSED FUNCTION _strupr_s_l_stat(char *,uint,localeinfo_struct *)]
; [00000035 BYTES: COLLAPSED FUNCTION __strupr_s_l]
; [00000017 BYTES: COLLAPSED FUNCTION __strupr_s]
; [000000B5 BYTES: COLLAPSED FUNCTION _strncpy_s]
; [000000F8 BYTES: COLLAPSED FUNCTION __vswprintf_helper]
; [0000002A BYTES: COLLAPSED FUNCTION __vswprintf_c_l]
; [0000008B BYTES: COLLAPSED FUNCTION __vswprintf_s_l]
; [0000002A BYTES: COLLAPSED FUNCTION __purecall]
; [0000008E BYTES: COLLAPSED FUNCTION _free]
align 10h
; [0000002B BYTES: COLLAPSED FUNCTION __alloca_probe]
; [00000058 BYTES: COLLAPSED FUNCTION __wcsdup]
; [000000F6 BYTES: COLLAPSED FUNCTION xtow_s(x,x,x,x,x)]
; [0000002C BYTES: COLLAPSED FUNCTION __itow_s]
; [000000BA BYTES: COLLAPSED FUNCTION __onexit_nolock]
; [00000031 BYTES: COLLAPSED FUNCTION ___onexitinit]
; [0000003C BYTES: COLLAPSED FUNCTION __onexit]
; [00000017 BYTES: COLLAPSED FUNCTION _atexit]
; [00000135 BYTES: COLLAPSED FUNCTION _CRT_INIT(x,x,x)]
; [000000F6 BYTES: COLLAPSED FUNCTION ___DllMainCRTStartup]
; [00000023 BYTES: COLLAPSED FUNCTION DllEntryPoint]
; [00000106 BYTES: COLLAPSED FUNCTION ___report_gsfailure]
; [00000042 BYTES: COLLAPSED FUNCTION __get_errno_from_oserr]
; [00000013 BYTES: COLLAPSED FUNCTION __errno]
; [00000013 BYTES: COLLAPSED FUNCTION ___doserrno]
; [00000023 BYTES: COLLAPSED FUNCTION __dosmaperr]
; [00000057 BYTES: COLLAPSED FUNCTION _fastzero_I]
; [0000008F BYTES: COLLAPSED FUNCTION __VEC_memzero]
; [00000050 BYTES: COLLAPSED FUNCTION _has_osfxsr_set]
; [00000062 BYTES: COLLAPSED FUNCTION __get_sse2_info]



sub_10005B1A proc near
call    __get_sse2_info
mov     dword_10023438, eax
xor     eax, eax
retn
sub_10005B1A endp

align 10h
; [00000365 BYTES: COLLAPSED FUNCTION _memcpy]
align 10h
; [00000365 BYTES: COLLAPSED FUNCTION _memcpy_0]
; [0000004F BYTES: COLLAPSED FUNCTION _V6_HeapAlloc]
; [000000CA BYTES: COLLAPSED FUNCTION _malloc]
; [00000070 BYTES: COLLAPSED FUNCTION type_info::_Type_info_dtor(type_info *)]


; Attributes: bp-based frame

sub_1000638E proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_10021B5C, eax
pop     ebp
retn
sub_1000638E endp

; [00000028 BYTES: COLLAPSED FUNCTION __callnewh]



sub_100063C5 proc near
and     dword_10023434, 0
retn
sub_100063C5 endp

; [00000072 BYTES: COLLAPSED FUNCTION __encode_pointer]
; [00000009 BYTES: COLLAPSED FUNCTION __encoded_null]
; [00000072 BYTES: COLLAPSED FUNCTION __decode_pointer]
; [00000009 BYTES: COLLAPSED FUNCTION __crtTlsAlloc(x)]
; [00000034 BYTES: COLLAPSED FUNCTION ___set_flsgetvalue]
; [0000003D BYTES: COLLAPSED FUNCTION __mtterm]
; [000000E7 BYTES: COLLAPSED FUNCTION __initptd]
; [00000079 BYTES: COLLAPSED FUNCTION __getptd_noexit]
; [0000001A BYTES: COLLAPSED FUNCTION __getptd]
; [0000012F BYTES: COLLAPSED FUNCTION _freefls(x)]
; [0000006E BYTES: COLLAPSED FUNCTION __freeptd]
; [0000018D BYTES: COLLAPSED FUNCTION __mtinit]


; Attributes: bp-based frame

; int __stdcall sub_100069D8(char *)
sub_100069D8 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
lea     eax, [ebp+arg_0]
push    eax             ; char **
mov     esi, ecx
call    ??0exception@std@@QAE@ABQBD@Z ; std::exception::exception(char const * const &)
mov     dword ptr [esi], offset off_10010B08
mov     eax, esi
pop     esi
pop     ebp
retn    4
sub_100069D8 endp




sub_100069F6 proc near
mov     dword ptr [ecx], offset off_10010B08
jmp     sub_100044BC
sub_100069F6 endp



; Attributes: bp-based frame

; int __thiscall sub_10006A01(void *, char)
sub_10006A01 proc near

arg_0= byte ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset off_10010B08
call    sub_100044BC
test    [ebp+arg_0], 1
jz      short loc_10006A21
push    esi             ; void *
call    ??3@YAXPAX@Z    ; operator delete(void *)
pop     ecx

loc_10006A21:
mov     eax, esi
pop     esi
pop     ebp
retn    4
sub_10006A01 endp

; [0000005F BYTES: COLLAPSED FUNCTION ___TypeMatch]
; [00000049 BYTES: COLLAPSED FUNCTION ___FrameUnwindFilter]
; [000000E1 BYTES: COLLAPSED FUNCTION ___FrameUnwindToState]
; [00000045 BYTES: COLLAPSED FUNCTION ExFilterRethrow(_EXCEPTION_POINTERS *)]
; [00000055 BYTES: COLLAPSED FUNCTION ___DestructExceptionObject]
; [00000029 BYTES: COLLAPSED FUNCTION ___AdjustPointer]
; [0000007B BYTES: COLLAPSED FUNCTION IsInExceptionSpec(EHExceptionRecord *,_s_ESTypeList const *)]
; [00000028 BYTES: COLLAPSED FUNCTION CallUnexpected(_s_ESTypeList const *)]
or      dword ptr [ebp-4], 0FFFFFFFFh
call    ?terminate@@YAXXZ ; terminate(void)
; [00000017 BYTES: COLLAPSED CHUNK OF FUNCTION CallUnexpected(_s_ESTypeList const *)]
align 4
; [0000019C BYTES: COLLAPSED FUNCTION CallCatchBlock(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,_s_FuncInfo const *,void *,int,ulong)]
; [0000017F BYTES: COLLAPSED FUNCTION ___BuildCatchObjectHelper]
; [00000092 BYTES: COLLAPSED FUNCTION ___BuildCatchObject]
; [0000006E BYTES: COLLAPSED FUNCTION CatchIt(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,_s_HandlerType const *,_s_CatchableType const *,_s_TryBlockMapEntry const *,int,EHRegistrationNode *,uchar)]
; [000000F4 BYTES: COLLAPSED FUNCTION FindHandlerForForeignException(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,int,int,EHRegistrationNode *)]
; [00000347 BYTES: COLLAPSED FUNCTION FindHandler(EHExceptionRecord *,EHRegistrationNode *,_CONTEXT *,void *,_s_FuncInfo const *,uchar,int,EHRegistrationNode *)]


; Attributes: bp-based frame

; int __stdcall sub_1000758E(struct std::exception *)
sub_1000758E proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]     ; struct std::exception *
mov     esi, ecx
call    ??0exception@std@@QAE@ABV01@@Z ; std::exception::exception(std::exception const &)
mov     dword ptr [esi], offset off_10010B08
mov     eax, esi
pop     esi
pop     ebp
retn    4
sub_1000758E endp

; [000000E6 BYTES: COLLAPSED FUNCTION ___InternalCxxFrameHandler]
; [00000039 BYTES: COLLAPSED FUNCTION terminate(void)]
; [00000013 BYTES: COLLAPSED FUNCTION unexpected(void)]
; [00000038 BYTES: COLLAPSED FUNCTION _inconsistency(void)]
; [00000011 BYTES: COLLAPSED FUNCTION __initp_eh_hooks]
align 10h
; [0000004C BYTES: COLLAPSED FUNCTION _CallSettingFrame(x,x,x)]
; [00000164 BYTES: COLLAPSED FUNCTION __flsbuf]
; [00000B75 BYTES: COLLAPSED FUNCTION __woutput_l]
align 4
jpt_100079FA dd offset $NORMAL_STATE$29479 ; jump table for switch statement
dd offset loc_10007A01
dd offset loc_10007A33
dd offset loc_10007A90
dd offset loc_10007ADD
dd offset loc_10007AE9
dd offset loc_10007B30
dd offset loc_10007C40
; [0000002F BYTES: COLLAPSED FUNCTION _CPtoLCID]
; [00000064 BYTES: COLLAPSED FUNCTION setSBCS(threadmbcinfostruct *)]
; [00000193 BYTES: COLLAPSED FUNCTION setSBUpLow(threadmbcinfostruct *)]
; [000000A4 BYTES: COLLAPSED FUNCTION ___updatetmbcinfo]
; [0000007C BYTES: COLLAPSED FUNCTION getSystemCP(int)]
; [000001E5 BYTES: COLLAPSED FUNCTION __setmbcp_nolock]
; [0000016A BYTES: COLLAPSED FUNCTION __setmbcp]
jmp     short loc_10008B34
; [0000002E BYTES: COLLAPSED CHUNK OF FUNCTION __setmbcp]
; [0000001E BYTES: COLLAPSED FUNCTION ___initmbctable]
; [00000149 BYTES: COLLAPSED FUNCTION ___freetlocinfo]
; [0000008F BYTES: COLLAPSED FUNCTION ___addlocaleref]
; [00000099 BYTES: COLLAPSED FUNCTION ___removelocaleref]
; [0000003E BYTES: COLLAPSED FUNCTION __updatetlocinfoEx_nolock]
; [00000076 BYTES: COLLAPSED FUNCTION ___updatetlocinfo]
; [000003A5 BYTES: COLLAPSED FUNCTION __crtLCMapStringA_stat(localeinfo_struct *,ulong,ulong,char const *,int,char *,int,int,int)]
; [00000045 BYTES: COLLAPSED FUNCTION ___crtLCMapStringA]
; [0000001D BYTES: COLLAPSED FUNCTION _strnlen]
align 10h
; [00000016 BYTES: COLLAPSED FUNCTION __alloca_probe_16]
; [00000016 BYTES: COLLAPSED FUNCTION __alloca_probe_8]
; [0000002F BYTES: COLLAPSED FUNCTION _write_char]
; [00000027 BYTES: COLLAPSED FUNCTION _write_multi_char]
; [00000052 BYTES: COLLAPSED FUNCTION _write_string]
; [00000B7E BYTES: COLLAPSED FUNCTION __woutput_s_l]
align 4
jpt_100094A5 dd offset $NORMAL_STATE$29486 ; jump table for switch statement
dd offset loc_100094AC
dd offset loc_100094DE
dd offset loc_10009539
dd offset loc_10009585
dd offset loc_10009591
dd offset loc_100095D7
dd offset loc_100096D6
; [00000117 BYTES: COLLAPSED FUNCTION _abort]
; [00000021 BYTES: COLLAPSED FUNCTION __set_abort_behavior]
; [000001AB BYTES: COLLAPSED FUNCTION __NMSG_WRITE]
; [00000039 BYTES: COLLAPSED FUNCTION __FF_MSGBANNER]


; Attributes: bp-based frame

sub_1000A220 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_10021ED4, eax
pop     ebp
retn
sub_1000A220 endp

; [00000030 BYTES: COLLAPSED FUNCTION __heap_init]
; [00000074 BYTES: COLLAPSED FUNCTION __heap_term]
; [0000004B BYTES: COLLAPSED FUNCTION __mtinitlocks]
; [00000057 BYTES: COLLAPSED FUNCTION __mtdeletelocks]
; [00000017 BYTES: COLLAPSED FUNCTION __unlock]
; [000000C3 BYTES: COLLAPSED FUNCTION __mtinitlocknum]
; [00000033 BYTES: COLLAPSED FUNCTION __lock]
; [00000030 BYTES: COLLAPSED FUNCTION ___sbh_find_block]
; [00000316 BYTES: COLLAPSED FUNCTION ___sbh_free_block]
; [000000B0 BYTES: COLLAPSED FUNCTION ___sbh_alloc_new_region]
; [00000108 BYTES: COLLAPSED FUNCTION ___sbh_alloc_new_group]
; [000002E1 BYTES: COLLAPSED FUNCTION ___sbh_resize_block]
; [000002E5 BYTES: COLLAPSED FUNCTION ___sbh_alloc_block]
align 4
; [00000045 BYTES: COLLAPSED FUNCTION __SEH_prolog4]
; [00000014 BYTES: COLLAPSED FUNCTION __SEH_epilog4]
align 10h
; [0000018C BYTES: COLLAPSED FUNCTION SEH_1000DFE0]
; [00000040 BYTES: COLLAPSED FUNCTION _calloc]
align 10h
; [00000095 BYTES: COLLAPSED FUNCTION __aulldvrm]
; [00000045 BYTES: COLLAPSED FUNCTION __malloc_crt]
; [0000004C BYTES: COLLAPSED FUNCTION __calloc_crt]
; [0000004E BYTES: COLLAPSED FUNCTION __realloc_crt]
; [000000A3 BYTES: COLLAPSED FUNCTION __msize]
; [00000030 BYTES: COLLAPSED FUNCTION __crt_waiting_on_module_handle]
; [00000029 BYTES: COLLAPSED FUNCTION __amsg_exit]
; [0000002B BYTES: COLLAPSED FUNCTION ___crtCorExitProcess]
; [00000017 BYTES: COLLAPSED FUNCTION ___crtExitProcess]
db 0CCh
; [00000009 BYTES: COLLAPSED FUNCTION __lockexit]
; [00000009 BYTES: COLLAPSED FUNCTION __unlockexit]
; [0000001D BYTES: COLLAPSED FUNCTION __initterm]
; [00000024 BYTES: COLLAPSED FUNCTION __initterm_e]
; [00000085 BYTES: COLLAPSED FUNCTION __cinit]
; [0000012C BYTES: COLLAPSED FUNCTION _doexit]
; [00000016 BYTES: COLLAPSED FUNCTION __exit]
; [0000000F BYTES: COLLAPSED FUNCTION __cexit]
; [0000004E BYTES: COLLAPSED FUNCTION __init_pointers]
; [00000254 BYTES: COLLAPSED FUNCTION __ioinit]
; [0000004E BYTES: COLLAPSED FUNCTION __ioterm]
; [000000DE BYTES: COLLAPSED FUNCTION __setenvp]
; [0000019A BYTES: COLLAPSED FUNCTION _parse_cmdline]
; [000000BB BYTES: COLLAPSED FUNCTION __setargv]
; [00000137 BYTES: COLLAPSED FUNCTION ___crtGetEnvironmentStringsA]



sub_1000BDB6 proc near
mov     edi, edi
push    esi
mov     eax, offset unk_1001289C
mov     esi, offset unk_1001289C
push    edi
mov     edi, eax
cmp     eax, esi
jnb     short loc_1000BDD9

loc_1000BDCA:
mov     eax, [edi]
test    eax, eax
jz      short loc_1000BDD2
call    eax

loc_1000BDD2:
add     edi, 4
cmp     edi, esi
jb      short loc_1000BDCA

loc_1000BDD9:
pop     edi
pop     esi
retn
sub_1000BDB6 endp




; void __cdecl sub_1000BDDC()
sub_1000BDDC proc near
mov     edi, edi
push    esi
mov     eax, offset unk_100128A4
mov     esi, offset unk_100128A4
push    edi
mov     edi, eax
cmp     eax, esi
jnb     short loc_1000BDFF

loc_1000BDF0:
mov     eax, [edi]
test    eax, eax
jz      short loc_1000BDF8
call    eax

loc_1000BDF8:
add     edi, 4
cmp     edi, esi
jb      short loc_1000BDF0

loc_1000BDFF:
pop     edi
pop     esi
retn
sub_1000BDDC endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_1]
; [00000160 BYTES: COLLAPSED FUNCTION __XcptFilter]
; [00000020 BYTES: COLLAPSED FUNCTION ___CppXcptFilter]
; [00000096 BYTES: COLLAPSED FUNCTION ___security_init_cookie]
; [00000087 BYTES: COLLAPSED FUNCTION _fastcopy_I]
; [000000E3 BYTES: COLLAPSED FUNCTION __VEC_memcpy]
align 4
; [00000090 BYTES: COLLAPSED FUNCTION __local_unwind4]
; [00000046 BYTES: COLLAPSED FUNCTION __unwind_handler4]
; [0000001C BYTES: COLLAPSED FUNCTION _seh_longjmp_unwind4(x)]
; [00000017 BYTES: COLLAPSED FUNCTION _EH4_CallFilterFunc(x,x)]
; [00000019 BYTES: COLLAPSED FUNCTION _EH4_TransferToHandler(x,x)]
; [0000001A BYTES: COLLAPSED FUNCTION _EH4_GlobalUnwind(x)]
; [00000017 BYTES: COLLAPSED FUNCTION _EH4_LocalUnwind(x,x,x,x)]
; [00000012 BYTES: COLLAPSED FUNCTION unknown_libname_5]
align 4
; [00000020 BYTES: COLLAPSED FUNCTION __global_unwind2]
; [00000045 BYTES: COLLAPSED FUNCTION __unwind_handler]
; [00000084 BYTES: COLLAPSED FUNCTION __local_unwind2]
; [00000023 BYTES: COLLAPSED FUNCTION __abnormal_termination]
; [00000009 BYTES: COLLAPSED FUNCTION __NLG_Notify1]
; [0000001F BYTES: COLLAPSED FUNCTION __NLG_Notify]
; [00000003 BYTES: COLLAPSED FUNCTION __NLG_Call]
; [00000085 BYTES: COLLAPSED FUNCTION __lseeki64_nolock]
; [00000119 BYTES: COLLAPSED FUNCTION __lseeki64]
; [00000733 BYTES: COLLAPSED FUNCTION __write_nolock]
; [000000DC BYTES: COLLAPSED FUNCTION __write]
; [00000049 BYTES: COLLAPSED FUNCTION __getbuf]
; [00000064 BYTES: COLLAPSED FUNCTION __isatty]



sub_1000CE7D proc near
mov     eax, offset off_100212C8
retn
sub_1000CE7D endp

; [000000B1 BYTES: COLLAPSED FUNCTION ___initstdio]
; [00000020 BYTES: COLLAPSED FUNCTION ___endstdio]
; [00000041 BYTES: COLLAPSED FUNCTION __lock_file]
; [00000032 BYTES: COLLAPSED FUNCTION __lock_file2]
; [0000003C BYTES: COLLAPSED FUNCTION __unlock_file]
; [0000002F BYTES: COLLAPSED FUNCTION __unlock_file2]
; [00000032 BYTES: COLLAPSED FUNCTION __fileno]
; [00000187 BYTES: COLLAPSED FUNCTION __fputwc_nolock]
; [00000021 BYTES: COLLAPSED FUNCTION __initp_misc_cfltcvt_tab]
; [00000016 BYTES: COLLAPSED FUNCTION __get_printf_count_output]
; [00000117 BYTES: COLLAPSED FUNCTION __mbtowc_l]
; [0000001A BYTES: COLLAPSED FUNCTION _mbtowc]
; [00000038 BYTES: COLLAPSED FUNCTION __isleadbyte_l]
; [00000013 BYTES: COLLAPSED FUNCTION _isleadbyte]
; [000001BA BYTES: COLLAPSED FUNCTION __crtGetStringTypeA_stat(localeinfo_struct *,ulong,char const *,int,ushort *,int,int,int)]
; [00000042 BYTES: COLLAPSED FUNCTION ___crtGetStringTypeA]
; [00000195 BYTES: COLLAPSED FUNCTION ___free_lc_time]
; [00000045 BYTES: COLLAPSED FUNCTION ___free_lconv_num]
; [0000008E BYTES: COLLAPSED FUNCTION ___free_lconv_mon]
; [00000074 BYTES: COLLAPSED FUNCTION _strcat_s]
align 10h
; [00000046 BYTES: COLLAPSED FUNCTION _strcspn]
align 10h
; [00000040 BYTES: COLLAPSED FUNCTION _strpbrk]
; [00000049 BYTES: COLLAPSED FUNCTION ___ansicp]
; [000001B4 BYTES: COLLAPSED FUNCTION ___convertcp]
; [0000001E BYTES: COLLAPSED FUNCTION __initp_misc_winsig]
; [00000037 BYTES: COLLAPSED FUNCTION _siglookup]



sub_1000DB62 proc near
push    dword_100221D4
call    __decode_pointer
pop     ecx
retn
sub_1000DB62 endp

; [000001B0 BYTES: COLLAPSED FUNCTION _raise]


; Attributes: bp-based frame

sub_1000DD1F proc near

lpProcName= dword ptr -24h
var_14= byte ptr -14h
var_C= byte ptr -0Ch
var_8= byte ptr -8
var_4= dword ptr -4
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
arg_8= dword ptr  10h

mov     edi, edi
push    ebp
mov     ebp, esp
sub     esp, 14h
push    ebx
push    esi
push    edi
call    __encoded_null
and     [ebp+var_4], 0
cmp     dword_100221E0, 0
mov     ebx, eax
jnz     loc_1000DDD0
push    offset LibFileName ; "USER32.DLL"
call    ds:__imp_LoadLibraryA
mov     edi, eax
test    edi, edi
jz      loc_1000DE81
mov     esi, ds:__imp_GetProcAddress
push    offset aMessageboxa ; "MessageBoxA"
push    edi             ; hModule
call    esi ; __imp_GetProcAddress
test    eax, eax
jz      loc_1000DE81
push    eax
call    __encode_pointer
mov     [esp+24h+lpProcName], offset aGetactivewindo ; "GetActiveWindow"
push    edi             ; hModule
mov     dword_100221E0, eax
call    esi ; __imp_GetProcAddress
push    eax
call    __encode_pointer
mov     [esp+24h+lpProcName], offset aGetlastactivep ; "GetLastActivePopup"
push    edi             ; hModule
mov     dword_100221E4, eax
call    esi ; __imp_GetProcAddress
push    eax
call    __encode_pointer
mov     [esp+24h+lpProcName], offset aGetuserobjecti ; "GetUserObjectInformationA"
push    edi             ; hModule
mov     dword_100221E8, eax
call    esi ; __imp_GetProcAddress
push    eax
call    __encode_pointer
pop     ecx
mov     dword_100221F0, eax
test    eax, eax
jz      short loc_1000DDD0
push    offset aGetprocesswind ; "GetProcessWindowStation"
push    edi             ; hModule
call    esi ; __imp_GetProcAddress
push    eax
call    __encode_pointer
pop     ecx
mov     dword_100221EC, eax

loc_1000DDD0:
mov     eax, dword_100221EC
cmp     eax, ebx
jz      short loc_1000DE28
cmp     dword_100221F0, ebx
jz      short loc_1000DE28
push    eax
call    __decode_pointer
push    dword_100221F0
mov     esi, eax
call    __decode_pointer
pop     ecx
pop     ecx
mov     edi, eax
test    esi, esi
jz      short loc_1000DE28
test    edi, edi
jz      short loc_1000DE28
call    esi
test    eax, eax
jz      short loc_1000DE1F
lea     ecx, [ebp+var_8]
push    ecx
push    0Ch
lea     ecx, [ebp+var_14]
push    ecx
push    1
push    eax
call    edi
test    eax, eax
jz      short loc_1000DE1F
test    [ebp+var_C], 1
jnz     short loc_1000DE28

loc_1000DE1F:
or      [ebp+arg_8], 200000h
jmp     short loc_1000DE61

loc_1000DE28:
mov     eax, dword_100221E4
cmp     eax, ebx
jz      short loc_1000DE61
push    eax
call    __decode_pointer
pop     ecx
test    eax, eax
jz      short loc_1000DE61
call    eax
mov     [ebp+var_4], eax
test    eax, eax
jz      short loc_1000DE61
mov     eax, dword_100221E8
cmp     eax, ebx
jz      short loc_1000DE61
push    eax
call    __decode_pointer
pop     ecx
test    eax, eax
jz      short loc_1000DE61
push    [ebp+var_4]
call    eax
mov     [ebp+var_4], eax

loc_1000DE61:
push    dword_100221E0
call    __decode_pointer
pop     ecx
test    eax, eax
jz      short loc_1000DE81
push    [ebp+arg_8]
push    [ebp+arg_4]
push    [ebp+arg_0]
push    [ebp+var_4]
call    eax
jmp     short loc_1000DE83

loc_1000DE81:
xor     eax, eax

loc_1000DE83:
pop     edi
pop     esi
pop     ebx
leave
retn
sub_1000DD1F endp

; [0000004B BYTES: COLLAPSED FUNCTION __set_error_mode]


; Attributes: bp-based frame

sub_1000DED3 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_100221F4, eax
pop     ebp
retn
sub_1000DED3 endp

; [00000060 BYTES: COLLAPSED FUNCTION ___crtInitCritSecAndSpinCount]
align 10h
; [00000035 BYTES: COLLAPSED FUNCTION __ValidateImageBase]
align 10h
; [00000044 BYTES: COLLAPSED FUNCTION __FindPESection]
align 10h
; [000000BD BYTES: COLLAPSED FUNCTION __IsNonwritableInCurrentImage]
; [0000011E BYTES: COLLAPSED FUNCTION __calloc_impl]
; [0000021B BYTES: COLLAPSED FUNCTION _realloc]


; Attributes: bp-based frame

sub_1000E3D6 proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
mov     dword_100221F8, eax
pop     ebp
retn
sub_1000E3D6 endp

; [00000053 BYTES: COLLAPSED FUNCTION x_ismbbtype_l(localeinfo_struct *,uint,int,int)]
; [00000018 BYTES: COLLAPSED FUNCTION __ismbblead]

__allmul:
mov     eax, [esp+8]
mov     ecx, [esp+10h]
or      ecx, eax
mov     ecx, [esp+0Ch]
jnz     short hard
mov     eax, [esp+4]
mul     ecx
retn    10h
; [0000001B BYTES: COLLAPSED FUNCTION hard]
; [00000016 BYTES: COLLAPSED FUNCTION _atol]
; [00000086 BYTES: COLLAPSED FUNCTION __free_osfhnd]
; [00000077 BYTES: COLLAPSED FUNCTION __get_osfhandle]
; [000000A0 BYTES: COLLAPSED FUNCTION ___lock_fhandle]
; [00000027 BYTES: COLLAPSED FUNCTION __unlock_fhandle]
; [000000C5 BYTES: COLLAPSED FUNCTION __putwch_nolock]
; [0000009F BYTES: COLLAPSED FUNCTION __fcloseall]
; [00000068 BYTES: COLLAPSED FUNCTION __flush]
; [00000048 BYTES: COLLAPSED FUNCTION __fflush_nolock]
; [000000DA BYTES: COLLAPSED FUNCTION _flsall]



sub_1000E94C proc near
push    1
call    _flsall
pop     ecx
retn
sub_1000E94C endp

; [00000174 BYTES: COLLAPSED FUNCTION __flswbuf]
; [0000016C BYTES: COLLAPSED FUNCTION __wctomb_s_l]
; [0000001D BYTES: COLLAPSED FUNCTION _wctomb_s]
; [00000009 BYTES: COLLAPSED FUNCTION __fptrap]
; [0000022F BYTES: COLLAPSED FUNCTION strtoxl(localeinfo_struct *,char const *,char const * *,int,int)]
; [0000002B BYTES: COLLAPSED FUNCTION _strtol]
; [000000B8 BYTES: COLLAPSED FUNCTION __isctype_l]
; [0000001F BYTES: COLLAPSED FUNCTION ___initconout]
; [0000002D BYTES: COLLAPSED FUNCTION ___termcon]
; [00000077 BYTES: COLLAPSED FUNCTION __fclose_nolock]
; [0000007C BYTES: COLLAPSED FUNCTION _fclose]
; [000000E1 BYTES: COLLAPSED FUNCTION __commit]
align 10h
; [00000061 BYTES: COLLAPSED FUNCTION ___ascii_strnicmp]
; [0000009C BYTES: COLLAPSED FUNCTION __close_nolock]
; [000000CD BYTES: COLLAPSED FUNCTION __close]
; [00000031 BYTES: COLLAPSED FUNCTION __freebuf]
align 10h
; [00000005 BYTES: COLLAPSED FUNCTION found_bx]
align 10h
; [00000006 BYTES: COLLAPSED FUNCTION _strchr]
; [000000B8 BYTES: COLLAPSED FUNCTION ___from_strstr_to_strchr]


; Attributes: bp-based frame

sub_1000F45E proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]
mov     esi, ecx
call    sub_1000220F
mov     dword ptr [esi], offset off_100123F0
mov     eax, esi
pop     esi
pop     ebp
retn    4
sub_1000F45E endp




sub_1000F47B proc near
mov     dword ptr [ecx], offset off_100123F0
jmp     sub_10001F03
sub_1000F47B endp



; Attributes: bp-based frame

; int __thiscall sub_1000F486(void *, char)
sub_1000F486 proc near

arg_0= byte ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
mov     esi, ecx
mov     dword ptr [esi], offset off_100123F0
call    sub_10001F03
test    [ebp+arg_0], 1
jz      short loc_1000F4A6
push    esi             ; void *
call    ??3@YAXPAX@Z    ; operator delete(void *)
pop     ecx

loc_1000F4A6:
mov     eax, esi
pop     esi
pop     ebp
retn    4
sub_1000F486 endp



; Attributes: noreturn bp-based frame

sub_1000F4AD proc near

pExceptionObject= byte ptr -50h
var_28= byte ptr -28h
var_4= dword ptr -4

; FUNCTION CHUNK AT 1000F5BC SIZE 00000023 BYTES

; __unwind { // loc_1000F5C4
push    44h
mov     eax, offset loc_1000F5C4
call    __EH_prolog3
push    offset aStringTooLong ; "string too long"
lea     ecx, [ebp+var_28]
call    ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::string::string(char const *)
;   try {
and     [ebp+var_4], 0
lea     eax, [ebp+var_28]
push    eax
lea     ecx, [ebp+pExceptionObject]
call    sub_10002244
push    offset stru_10012A6C ; pThrowInfo
lea     eax, [ebp+pExceptionObject]
push    eax             ; pExceptionObject
call    __CxxThrowException@8 ; _CxxThrowException(x,x)
;   } // starts at 1000F4C6
; } // starts at 1000F4AD
sub_1000F4AD endp

db 0CCh


; Attributes: noreturn bp-based frame

sub_1000F4E5 proc near

pExceptionObject= byte ptr -50h
var_28= byte ptr -28h
var_4= dword ptr -4

; FUNCTION CHUNK AT 1000F5BC SIZE 00000023 BYTES

; __unwind { // loc_1000F5C4
push    44h
mov     eax, offset loc_1000F5C4
call    __EH_prolog3
push    offset aInvalidStringP ; "invalid string position"
lea     ecx, [ebp+var_28]
call    ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::string::string(char const *)
;   try {
and     [ebp+var_4], 0
lea     eax, [ebp+var_28]
push    eax
lea     ecx, [ebp+pExceptionObject]
call    sub_1000F45E
push    offset stru_100132FC ; pThrowInfo
lea     eax, [ebp+pExceptionObject]
push    eax             ; pExceptionObject
call    __CxxThrowException@8 ; _CxxThrowException(x,x)
;   } // starts at 1000F4FE
; } // starts at 1000F4E5
sub_1000F4E5 endp

db 0CCh


; Attributes: bp-based frame

; int __stdcall sub_1000F51D(struct std::exception *)
sub_1000F51D proc near

arg_0= dword ptr  8

mov     edi, edi
push    ebp
mov     ebp, esp
push    esi
push    [ebp+arg_0]     ; struct std::exception *
mov     esi, ecx
call    sub_1000233E
mov     dword ptr [esi], offset off_100123F0
mov     eax, esi
pop     esi
pop     ebp
retn    4
sub_1000F51D endp

; [00000006 BYTES: COLLAPSED FUNCTION RtlUnwind]
; [0000001B BYTES: COLLAPSED CHUNK OF FUNCTION std::string::_Copy(uint,uint)]
; [0000001B BYTES: COLLAPSED CHUNK OF FUNCTION std::wstring::_Copy(uint,uint)]
; START OF FUNCTION CHUNK FOR sub_1000220F
;   ADDITIONAL PARENT FUNCTION sub_1000233E

loc_1000F576:
; __unwind { // loc_1000F57E
;   cleanup() // owned by 10002228
;   cleanup() // owned by 10002358
mov     ecx, [ebp+var_10]
jmp     sub_100044BC

loc_1000F57E:
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0Ch]
mov     ecx, [edx-14h]
xor     ecx, eax        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
mov     eax, offset stru_10012A1C
jmp     ___CxxFrameHandler3
; } // starts at 1000F576
; END OF FUNCTION CHUNK FOR sub_1000220F
; START OF FUNCTION CHUNK FOR sub_100022AB

loc_1000F599:
; __unwind { // loc_1000F5A1
;   cleanup() // owned by 100022C8
mov     ecx, [ebp+var_10]
jmp     loc_10002E05

loc_1000F5A1:
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0Ch]
mov     ecx, [edx-18h]
xor     ecx, eax        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
mov     eax, offset stru_10012A48
jmp     ___CxxFrameHandler3
; } // starts at 1000F599
; END OF FUNCTION CHUNK FOR sub_100022AB
; START OF FUNCTION CHUNK FOR sub_100022E2
;   ADDITIONAL PARENT FUNCTION sub_1000F4AD
;   ADDITIONAL PARENT FUNCTION sub_1000F4E5

loc_1000F5BC:
; __unwind { // loc_1000F5C4
;   cleanup() // owned by 1000230C
;   cleanup() // owned by 1000F4C6
;   cleanup() // owned by 1000F4FE
lea     ecx, [ebp+var_28]
jmp     loc_10001E01

loc_1000F5C4:
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0Ch]
mov     ecx, [edx-54h]
xor     ecx, eax        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
mov     eax, offset stru_10012A84
jmp     ___CxxFrameHandler3
; } // starts at 1000F5BC
; END OF FUNCTION CHUNK FOR sub_100022E2
; START OF FUNCTION CHUNK FOR sub_100023E9

loc_1000F5DF:
; __unwind { // loc_1000F5F8
;   cleanup() // owned by 100023FC
;   cleanup() // owned by 1000240D
mov     eax, [ebp+var_38]
and     eax, 1
jz      locret_1000F5F7
and     [ebp+var_38], 0FFFFFFFEh
mov     ecx, [ebp+var_3C]
jmp     loc_10002F56

locret_1000F5F7:
retn

loc_1000F5F8:
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0Ch]
mov     ecx, [edx-40h]
xor     ecx, eax        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
mov     ecx, [edx-4]
xor     ecx, eax        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
mov     eax, offset stru_10012AF8
jmp     ___CxxFrameHandler3
; } // starts at 1000F5DF
; END OF FUNCTION CHUNK FOR sub_100023E9
; START OF FUNCTION CHUNK FOR sub_10002486

loc_1000F61D:
; __unwind { // loc_1000F646
;   cleanup() // owned by 100024BE
mov     eax, [ebp+204h+var_224]
and     eax, 1
jz      locret_1000F635
and     [ebp+204h+var_224], 0FFFFFFFEh
mov     ecx, [ebp+204h+var_220]
jmp     loc_10001E20

locret_1000F635:
retn

loc_1000F636:
;   cleanup() // owned by 100024DF
;   cleanup() // owned by 100025A6
lea     ecx, [ebp+204h+var_248]
jmp     loc_10002F56

loc_1000F63E:
;   cleanup() // owned by 10002599
lea     ecx, [ebp+204h+var_21C]
jmp     loc_100017B5

loc_1000F646:
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0Ch]
mov     ecx, [edx-48h]
xor     ecx, eax        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
mov     ecx, [edx+20Ch]
xor     ecx, eax        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
mov     eax, offset stru_10012B34
jmp     ___CxxFrameHandler3
; } // starts at 1000F61D
; END OF FUNCTION CHUNK FOR sub_10002486
; START OF FUNCTION CHUNK FOR sub_10002FA7

loc_1000F66E:
; __unwind { // loc_1000F68F
;   cleanup() // owned by 10002FE3
mov     eax, [ebp+114h+var_12C]
and     eax, 1
jz      locret_1000F686
and     [ebp+114h+var_12C], 0FFFFFFFEh
mov     ecx, [ebp+114h+var_128]
jmp     loc_10001E20

locret_1000F686:
retn

loc_1000F687:
;   cleanup() // owned by 1000306B
lea     ecx, [ebp+114h+var_124]
jmp     loc_100017B5

loc_1000F68F:
mov     edx, [esp-4+lpWideCharStr]
lea     eax, [edx+0Ch]
mov     ecx, [edx-1Ch]
xor     ecx, eax        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
mov     ecx, [edx+11Ch]
xor     ecx, eax        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
mov     eax, offset stru_10012B68
jmp     ___CxxFrameHandler3
; } // starts at 1000F66E
; END OF FUNCTION CHUNK FOR sub_10002FA7
; START OF FUNCTION CHUNK FOR sub_100030CA

loc_1000F6B7:
; __unwind { // loc_1000F6F0
;   cleanup() // owned by 10003108
mov     eax, [ebp+1A0h+var_1CC]
and     eax, 1
jz      locret_1000F6CF
and     [ebp+1A0h+var_1CC], 0FFFFFFFEh
mov     ecx, [ebp+1A0h+var_1BC]
jmp     loc_10001E20

locret_1000F6CF:
retn

loc_1000F6D0:
lea     ecx, [ebp+1A0h+var_1B8]
jmp     loc_100017B5

loc_1000F6D8:
;   cleanup() // owned by 10003128
;   cleanup() // owned by 10003134
;   cleanup() // owned by 1000315D
;   cleanup() // owned by 10003253
lea     ecx, [ebp+1A0h+var_1A0]
jmp     loc_10001E01

loc_1000F6E0:
lea     ecx, [ebp+1A0h+var_200]
jmp     loc_10002F56

loc_1000F6E8:
;   cleanup() // owned by 10003151
;   cleanup() // owned by 10003246
lea     ecx, [ebp+1A0h+var_1B4]
jmp     loc_100017B5

loc_1000F6F0:
mov     edx, [esp-4+lpWideCharStr]
lea     eax, [edx+0Ch]
mov     ecx, [edx-7Ch]
xor     ecx, eax        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
mov     ecx, [edx+1A8h]
xor     ecx, eax        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
mov     eax, offset stru_10012B8C
jmp     ___CxxFrameHandler3
; } // starts at 1000F6B7
; END OF FUNCTION CHUNK FOR sub_100030CA
; START OF FUNCTION CHUNK FOR sub_100037FC

loc_1000F718:
; __unwind { // loc_1000F72B
;   cleanup() // owned by 1000381B
mov     ecx, [ebp+var_58]
jmp     sub_100044BC

loc_1000F720:
;   cleanup() // owned by 10003836
mov     ecx, [ebp+var_58]
add     ecx, 0Ch
jmp     loc_10001E20

loc_1000F72B:
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0Ch]
mov     ecx, [edx-60h]
xor     ecx, eax        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
mov     ecx, [edx-8]
xor     ecx, eax        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
mov     eax, offset stru_10012C24
jmp     ___CxxFrameHandler3
; } // starts at 1000F718
; END OF FUNCTION CHUNK FOR sub_100037FC
; START OF FUNCTION CHUNK FOR sub_1000393A

loc_1000F750:
; __unwind { // loc_1000F758
;   cleanup() // owned by 1000394B
mov     ecx, [ebp+var_18]
jmp     sub_100032E0

loc_1000F758:
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0Ch]
mov     ecx, [edx-44h]
xor     ecx, eax        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
mov     eax, offset stru_10012C60
jmp     ___CxxFrameHandler3
; } // starts at 1000F750
; END OF FUNCTION CHUNK FOR sub_1000393A
; START OF FUNCTION CHUNK FOR sub_100039BF

loc_1000F773:
; __unwind { // loc_1000F786
;   cleanup() // owned by 100039D5
mov     ecx, [ebp+var_14]
jmp     sub_100044BC

loc_1000F77B:
;   cleanup() // owned by 100039EC
mov     ecx, [ebp+var_14]
add     ecx, 0Ch
jmp     loc_10001E20

loc_1000F786:
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0Ch]
mov     ecx, [edx-18h]
xor     ecx, eax        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
mov     eax, offset stru_10012CF0
jmp     ___CxxFrameHandler3
; } // starts at 1000F773
; END OF FUNCTION CHUNK FOR sub_100039BF
; START OF FUNCTION CHUNK FOR sub_10003BE7

loc_1000F7A1:
; __unwind { // loc_1000F7A9
;   cleanup() // owned by 10003BFD
mov     ecx, [ebp+var_10]
jmp     loc_10002F56

loc_1000F7A9:
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0Ch]
mov     ecx, [edx-14h]
xor     ecx, eax        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
mov     eax, offset stru_10012D1C
jmp     ___CxxFrameHandler3
; } // starts at 1000F7A1
; END OF FUNCTION CHUNK FOR sub_10003BE7
; START OF FUNCTION CHUNK FOR sub_10003D3C

loc_1000F7C4:
; __unwind { // loc_1000F7CC
;   cleanup() // owned by 10003D5A
lea     ecx, [ebp+var_2C]
jmp     loc_10001E20

loc_1000F7CC:
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0Ch]
mov     ecx, [edx-30h]
xor     ecx, eax        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
mov     eax, offset stru_10012D48
jmp     ___CxxFrameHandler3
; } // starts at 1000F7C4
; END OF FUNCTION CHUNK FOR sub_10003D3C
; START OF FUNCTION CHUNK FOR sub_10003D83

loc_1000F7E7:
; __unwind { // loc_1000F7EF
;   cleanup() // owned by 10003E41
lea     ecx, [ebp+String]
jmp     loc_10002E05

loc_1000F7EF:
mov     edx, [esp-4+String]
lea     eax, [edx+0Ch]
mov     ecx, [edx-68h]
xor     ecx, eax        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
mov     eax, offset stru_10012D74
jmp     ___CxxFrameHandler3
; } // starts at 1000F7E7
; END OF FUNCTION CHUNK FOR sub_10003D83
; START OF FUNCTION CHUNK FOR sub_10003EE6

loc_1000F80A:
; __unwind { // loc_1000F82D
lea     ecx, [ebp+String]
jmp     loc_10001E20

loc_1000F812:
;   cleanup() // owned by 10003F1B
;   cleanup() // owned by 10003F2B
;   cleanup() // owned by 10003FCB
lea     ecx, [ebp+var_2C]
jmp     loc_10001E20

loc_1000F81A:
;   cleanup() // owned by 10003F9B
lea     ecx, [ebp+var_84]
jmp     loc_10001E20

loc_1000F825:
;   cleanup() // owned by 10003FAE
lea     ecx, [ebp+var_68]
jmp     loc_10001E20

loc_1000F82D:
mov     edx, [esp-4+arg_4]
lea     eax, [edx+0Ch]
mov     ecx, [edx-88h]
xor     ecx, eax        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
mov     ecx, [edx-4]
xor     ecx, eax        ; StackCookie
call    @__security_check_cookie@4 ; __security_check_cookie(x)
mov     eax, offset stru_10012D98
jmp     ___CxxFrameHandler3
; } // starts at 1000F80A
; END OF FUNCTION CHUNK FOR sub_10003EE6
; [0000001B BYTES: COLLAPSED CHUNK OF FUNCTION CallUnexpected(_s_ESTypeList const *)]



sub_1000F870 proc near
mov     ecx, offset unk_100217EC
call    sub_1000393A
push    offset sub_1000F886 ; void (__cdecl *)()
call    _atexit
pop     ecx
retn
sub_1000F870 endp




; void __cdecl sub_1000F886()
sub_1000F886 proc near
mov     ecx, offset unk_100217EC
jmp     sub_10003304
sub_1000F886 endp




; void __cdecl sub_1000F890()
sub_1000F890 proc near
mov     dword_10021808, offset off_10010240
mov     ecx, offset dword_10021808
jmp     sub_100044BC
sub_1000F890 endp

align 200h
dd 180h dup(?)
_text ends

; Section 2. (virtual address 00010000)
; Virtual size                  : 00003BEF (  15343.)
; Section size in file          : 00003C00 (  15360.)
; Offset to raw data for section: 0000EE00
; Flags 40000040: Data Readable
; Alignment     : default
;
; Imports from KERNEL32.dll
;

; Segment type: Externs
; _idata
; int (__stdcall *MultiByteToWideChar)(UINT CodePage, DWORD dwFlags, LPCCH lpMultiByteStr, int cbMultiByte, LPWSTR lpWideCharStr, int cchWideChar)
extrn MultiByteToWideChar:dword
; LPVOID (__stdcall *HeapAlloc)(HANDLE hHeap, DWORD dwFlags, SIZE_T dwBytes)
extrn HeapAlloc:dword
; HANDLE (__stdcall *GetProcessHeap)()
extrn GetProcessHeap:dword
; DWORD (__stdcall *GetLastError)()
extrn __imp_GetLastError:dword
; BOOL (__stdcall *CloseHandle)(HANDLE hObject)
extrn __imp_CloseHandle:dword
; HANDLE (__stdcall *CreateFileW)(LPCWSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile)
extrn CreateFileW:dword
; int (__stdcall *WideCharToMultiByte)(UINT CodePage, DWORD dwFlags, LPCWCH lpWideCharStr, int cchWideChar, LPSTR lpMultiByteStr, int cbMultiByte, LPCCH lpDefaultChar, LPBOOL lpUsedDefaultChar)
extrn WideCharToMultiByte:dword
; void (__stdcall *DeleteCriticalSection)(LPCRITICAL_SECTION lpCriticalSection)
extrn DeleteCriticalSection:dword
; void (__stdcall *EnterCriticalSection)(LPCRITICAL_SECTION lpCriticalSection)
extrn __imp_EnterCriticalSection:dword
; BOOL (__stdcall *TryEnterCriticalSection)(LPCRITICAL_SECTION lpCriticalSection)
extrn TryEnterCriticalSection:dword
; void (__stdcall *LeaveCriticalSection)(LPCRITICAL_SECTION lpCriticalSection)
extrn __imp_LeaveCriticalSection:dword
; DWORD (__stdcall *SetFilePointer)(HANDLE hFile, LONG lDistanceToMove, PLONG lpDistanceToMoveHigh, DWORD dwMoveMethod)
extrn SetFilePointer:dword
; BOOL (__stdcall *WriteFile)(HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite, LPDWORD lpNumberOfBytesWritten, LPOVERLAPPED lpOverlapped)
extrn __imp_WriteFile:dword
; void (__stdcall *GetLocalTime)(LPSYSTEMTIME lpSystemTime)
extrn GetLocalTime:dword
; BOOL (__stdcall *InitializeCriticalSectionAndSpinCount)(LPCRITICAL_SECTION lpCriticalSection, DWORD dwSpinCount)
extrn InitializeCriticalSectionAndSpinCount:dword
; DWORD (__stdcall *GetEnvironmentVariableW)(LPCWSTR lpName, LPWSTR lpBuffer, DWORD nSize)
extrn GetEnvironmentVariableW:dword
; HMODULE (__stdcall *GetModuleHandleA)(LPCSTR lpModuleName)
extrn __imp_GetModuleHandleA:dword
; DWORD (__stdcall *GetCurrentProcessId)()
extrn __imp_GetCurrentProcessId:dword
; DWORD (__stdcall *GetEnvironmentVariableA)(LPCSTR lpName, LPSTR lpBuffer, DWORD nSize)
extrn __imp_GetEnvironmentVariableA:dword
; BOOL (__stdcall *GetOverlappedResult)(HANDLE hFile, LPOVERLAPPED lpOverlapped, LPDWORD lpNumberOfBytesTransferred, BOOL bWait)
extrn __imp_GetOverlappedResult:dword
; LPVOID (__stdcall *GlobalLock)(HGLOBAL hMem)
extrn __imp_GlobalLock:dword
; HANDLE (__stdcall *CreateFileA)(LPCSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, LPSECURITY_ATTRIBUTES lpSecurityAttributes, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, HANDLE hTemplateFile)
extrn __imp_CreateFileA:dword
; BOOL (__stdcall *ReadFile)(HANDLE hFile, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPDWORD lpNumberOfBytesRead, LPOVERLAPPED lpOverlapped)
extrn __imp_ReadFile:dword
; HGLOBAL (__stdcall *GlobalFree)(HGLOBAL hMem)
extrn __imp_GlobalFree:dword
; void (__stdcall *Sleep)(DWORD dwMilliseconds)
extrn __imp_Sleep:dword
; DWORD (__stdcall *GetTickCount)()
extrn __imp_GetTickCount:dword
; DWORD (__stdcall *WaitForSingleObject)(HANDLE hHandle, DWORD dwMilliseconds)
extrn __imp_WaitForSingleObject:dword
; void (__stdcall *InitializeCriticalSection)(LPCRITICAL_SECTION lpCriticalSection)
extrn __imp_InitializeCriticalSection:dword
; HANDLE (__stdcall *GetCurrentThread)()
extrn __imp_GetCurrentThread:dword
; BOOL (__stdcall *FreeLibrary)(HMODULE hLibModule)
extrn __imp_FreeLibrary:dword
; FARPROC (__stdcall *GetProcAddress)(HMODULE hModule, LPCSTR lpProcName)
extrn __imp_GetProcAddress:dword
; HANDLE (__stdcall *GetCurrentProcess)()
extrn __imp_GetCurrentProcess:dword
; HMODULE (__stdcall *LoadLibraryA)(LPCSTR lpLibFileName)
extrn __imp_LoadLibraryA:dword
; HGLOBAL (__stdcall *GlobalAlloc)(UINT uFlags, SIZE_T dwBytes)
extrn __imp_GlobalAlloc:dword
; DWORD (__stdcall *GetVersion)()
extrn __imp_GetVersion:dword
; BOOL (__stdcall *GlobalUnlock)(HGLOBAL hMem)
extrn __imp_GlobalUnlock:dword
; HANDLE (__stdcall *CreateEventA)(LPSECURITY_ATTRIBUTES lpEventAttributes, BOOL bManualReset, BOOL bInitialState, LPCSTR lpName)
extrn __imp_CreateEventA:dword
; BOOL (__stdcall *DeviceIoControl)(HANDLE hDevice, DWORD dwIoControlCode, LPVOID lpInBuffer, DWORD nInBufferSize, LPVOID lpOutBuffer, DWORD nOutBufferSize, LPDWORD lpBytesReturned, LPOVERLAPPED lpOverlapped)
extrn __imp_DeviceIoControl:dword
; void (__stdcall *RaiseException)(DWORD dwExceptionCode, DWORD dwExceptionFlags, DWORD nNumberOfArguments, const ULONG_PTR *lpArguments)
extrn RaiseException:dword
; BOOL (__stdcall *TerminateProcess)(HANDLE hProcess, UINT uExitCode)
extrn TerminateProcess:dword
; LONG (__stdcall *UnhandledExceptionFilter)(struct _EXCEPTION_POINTERS *ExceptionInfo)
extrn UnhandledExceptionFilter:dword
; LPTOP_LEVEL_EXCEPTION_FILTER (__stdcall *SetUnhandledExceptionFilter)(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
extrn SetUnhandledExceptionFilter:dword
; BOOL (__stdcall *IsDebuggerPresent)()
extrn IsDebuggerPresent:dword
; void (__stdcall *RtlUnwind)(PVOID TargetFrame, PVOID TargetIp, PEXCEPTION_RECORD ExceptionRecord, PVOID ReturnValue)
extrn __imp_RtlUnwind:dword
; BOOL (__stdcall *HeapFree)(HANDLE hHeap, DWORD dwFlags, LPVOID lpMem)
extrn HeapFree:dword
; DWORD (__stdcall *GetCurrentThreadId)()
extrn GetCurrentThreadId:dword
; LPSTR (__stdcall *GetCommandLineA)()
extrn GetCommandLineA:dword
; HMODULE (__stdcall *GetModuleHandleW)(LPCWSTR lpModuleName)
extrn GetModuleHandleW:dword
; LPVOID (__stdcall *TlsGetValue)(DWORD dwTlsIndex)
extrn TlsGetValue:dword
; DWORD (__stdcall *TlsAlloc)()
extrn TlsAlloc:dword
; BOOL (__stdcall *TlsSetValue)(DWORD dwTlsIndex, LPVOID lpTlsValue)
extrn TlsSetValue:dword
; BOOL (__stdcall *TlsFree)(DWORD dwTlsIndex)
extrn TlsFree:dword
; LONG (__stdcall *InterlockedIncrement)(volatile LONG *lpAddend)
extrn InterlockedIncrement:dword
; void (__stdcall *SetLastError)(DWORD dwErrCode)
extrn SetLastError:dword
; LONG (__stdcall *InterlockedDecrement)(volatile LONG *lpAddend)
extrn InterlockedDecrement:dword
; BOOL (__stdcall *GetCPInfo)(UINT CodePage, LPCPINFO lpCPInfo)
extrn GetCPInfo:dword
; UINT (__stdcall *GetACP)()
extrn GetACP:dword
; UINT (__stdcall *GetOEMCP)()
extrn GetOEMCP:dword
; BOOL (__stdcall *IsValidCodePage)(UINT CodePage)
extrn IsValidCodePage:dword
; int (__stdcall *LCMapStringA)(LCID Locale, DWORD dwMapFlags, LPCSTR lpSrcStr, int cchSrc, LPSTR lpDestStr, int cchDest)
extrn LCMapStringA:dword
; int (__stdcall *LCMapStringW)(LCID Locale, DWORD dwMapFlags, LPCWSTR lpSrcStr, int cchSrc, LPWSTR lpDestStr, int cchDest)
extrn LCMapStringW:dword
; HANDLE (__stdcall *GetStdHandle)(DWORD nStdHandle)
extrn GetStdHandle:dword
; DWORD (__stdcall *GetModuleFileNameA)(HMODULE hModule, LPSTR lpFilename, DWORD nSize)
extrn GetModuleFileNameA:dword
; HANDLE (__stdcall *HeapCreate)(DWORD flOptions, SIZE_T dwInitialSize, SIZE_T dwMaximumSize)
extrn HeapCreate:dword
; BOOL (__stdcall *HeapDestroy)(HANDLE hHeap)
extrn HeapDestroy:dword
; BOOL (__stdcall *VirtualFree)(LPVOID lpAddress, SIZE_T dwSize, DWORD dwFreeType)
extrn VirtualFree:dword
; LPVOID (__stdcall *VirtualAlloc)(LPVOID lpAddress, SIZE_T dwSize, DWORD flAllocationType, DWORD flProtect)
extrn VirtualAlloc:dword
; LPVOID (__stdcall *HeapReAlloc)(HANDLE hHeap, DWORD dwFlags, LPVOID lpMem, SIZE_T dwBytes)
extrn HeapReAlloc:dword
; SIZE_T (__stdcall *HeapSize)(HANDLE hHeap, DWORD dwFlags, LPCVOID lpMem)
extrn HeapSize:dword
; void (__stdcall __noreturn *ExitProcess)(UINT uExitCode)
extrn ExitProcess:dword
; UINT (__stdcall *SetHandleCount)(UINT uNumber)
extrn SetHandleCount:dword
; DWORD (__stdcall *GetFileType)(HANDLE hFile)
extrn GetFileType:dword
; void (__stdcall *GetStartupInfoA)(LPSTARTUPINFOA lpStartupInfo)
extrn GetStartupInfoA:dword
; BOOL (__stdcall *FreeEnvironmentStringsA)(LPCH penv)
extrn FreeEnvironmentStringsA:dword
; LPCH (__stdcall *GetEnvironmentStrings)()
extrn GetEnvironmentStrings:dword
; BOOL (__stdcall *FreeEnvironmentStringsW)(LPWCH penv)
extrn FreeEnvironmentStringsW:dword
; LPWCH (__stdcall *GetEnvironmentStringsW)()
extrn GetEnvironmentStringsW:dword
; BOOL (__stdcall *QueryPerformanceCounter)(LARGE_INTEGER *lpPerformanceCount)
extrn QueryPerformanceCounter:dword
; void (__stdcall *GetSystemTimeAsFileTime)(LPFILETIME lpSystemTimeAsFileTime)
extrn GetSystemTimeAsFileTime:dword
; UINT (__stdcall *GetConsoleCP)()
extrn GetConsoleCP:dword
; BOOL (__stdcall *GetConsoleMode)(HANDLE hConsoleHandle, LPDWORD lpMode)
extrn GetConsoleMode:dword
; BOOL (__stdcall *GetStringTypeA)(LCID Locale, DWORD dwInfoType, LPCSTR lpSrcStr, int cchSrc, LPWORD lpCharType)
extrn GetStringTypeA:dword
; BOOL (__stdcall *GetStringTypeW)(DWORD dwInfoType, LPCWCH lpSrcStr, int cchSrc, LPWORD lpCharType)
extrn GetStringTypeW:dword
; int (__stdcall *GetLocaleInfoA)(LCID Locale, LCTYPE LCType, LPSTR lpLCData, int cchData)
extrn GetLocaleInfoA:dword
; BOOL (__stdcall *SetStdHandle)(DWORD nStdHandle, HANDLE hHandle)
extrn SetStdHandle:dword
; BOOL (__stdcall *WriteConsoleA)(HANDLE hConsoleOutput, const void *lpBuffer, DWORD nNumberOfCharsToWrite, LPDWORD lpNumberOfCharsWritten, LPVOID lpReserved)
extrn WriteConsoleA:dword
; UINT (__stdcall *GetConsoleOutputCP)()
extrn GetConsoleOutputCP:dword
; BOOL (__stdcall *WriteConsoleW)(HANDLE hConsoleOutput, const void *lpBuffer, DWORD nNumberOfCharsToWrite, LPDWORD lpNumberOfCharsWritten, LPVOID lpReserved)
extrn WriteConsoleW:dword
; BOOL (__stdcall *FlushFileBuffers)(HANDLE hFile)
extrn FlushFileBuffers:dword



; Segment type: Pure data
; Segment permissions: Read
_rdata segment para public 'DATA' use32
assume cs:_rdata
;org 10010168h
unk_10010168 db    0
db    0
db    0
db    0
dd offset sub_1000F870
; const _PVFV First
First dd 0
; const _PIFV dword_10010174
dword_10010174 dd 0
dd offset ___onexitinit
dd offset sub_10005B1A
dd offset ___initmbctable
dd offset ___initstdio
; const _PIFV Last
Last dd 0
unk_1001018C db    0
db    0
db    0
db    0
dd offset ___termcon
dd offset ___endstdio
; const _PVFV dword_10010198
dword_10010198 dd 0
unk_1001019C db    0
db    0
db    0
db    0
; const _PVFV dword_100101A0
dword_100101A0 dd 0
align 8
a0123456789abcd db '0123456789ABCDEF',0
align 4
aDongleCpp:
text "UTF-16LE", '.\Dongle.cpp',0
align 4
aInvalidInputPo:
text "UTF-16LE", 'Invalid input pointer'
text "UTF-16LE", 0
aSystemDriverIs:
text "UTF-16LE", 'System driver is inst'
text "UTF-16LE", 'alled',0
align 4
dd offset unk_10012468
off_10010240 dd offset loc_1000173D
dd offset ?what@exception@@UBEPBDXZ ; exception::what(void)
dd offset unk_100124E8
off_1001024C dd offset loc_10001F2E
dd offset unknown_libname_2 ; Microsoft VisualC 2-14/net runtime
dd offset unk_10012534
off_10010258 dd offset loc_10002267
dd offset unknown_libname_2 ; Microsoft VisualC 2-14/net runtime
; const char aListTTooLong[]
aListTTooLong db 'list<T> too long',0
align 4
; const wchar_t Format
Format:
text "UTF-16LE", '\\.\COM%d',0
; const wchar_t aDongleFoundOnP
aDongleFoundOnP:
text "UTF-16LE", 'Dongle found on Port:'
text "UTF-16LE", ' COM%d',0
; const wchar_t aUnableToFindAD
aUnableToFindAD:
text "UTF-16LE", 'Unable to find a Dong'
text "UTF-16LE", 'le on Port: COM%d',0
align 10h
aInvalidRomSize:
text "UTF-16LE", 'Invalid ROM size',0
align 4
aCouldNotAlloca:
text "UTF-16LE", 'Could not allocate me'
text "UTF-16LE", 'mory',0
aCouldNotReadKe:
text "UTF-16LE", 'Could not read key',0
align 10h
aInvalidInputPa:
text "UTF-16LE", 'Invalid input paramet'
text "UTF-16LE", 'er',0
aCouldNotReadHw:
text "UTF-16LE", 'Could not read hwk',0
align 4
dd offset unk_10012584
off_100103EC dd offset sub_10002B53
aCommonIncludeE:
text "UTF-16LE", '..\..\common\include\'
text "UTF-16LE", 'encoder\hwkencoder.cp'
text "UTF-16LE", 'p',0
; const wchar_t asc_10010448
asc_10010448:
text "UTF-16LE", ' ',0
aBadAllocation db 'bad allocation',0
align 4
dd offset unk_100125CC
off_10010460 dd offset unknown_libname_3 ; Microsoft VisualC 2-14/net runtime
dd offset __purecall
dd offset __purecall
dd offset __purecall
dd offset unk_10012614
off_10010474 dd offset loc_10003340
dd offset sub_1000331F
dd offset sub_1000332A
dd offset sub_10003335
dd offset unk_10012660
off_10010488 dd offset unknown_libname_4 ; Microsoft VisualC 2-14/net runtime
dd offset __purecall
dd offset __purecall
dd offset __purecall
dd offset __purecall
dd offset __purecall
dd offset __purecall
dd offset __purecall
; const wchar_t aSS
aSS:
text "UTF-16LE", '%s%s',0
align 4
; const wchar_t asc_100104B4
asc_100104B4:
text "UTF-16LE", 0Dh,0Ah,0
align 10h
; const wchar_t aFromSAtSFileSL
aFromSAtSFileSL:
text "UTF-16LE", 'FROM: "%s" AT: %s',0Dh
text "UTF-16LE", 0Ah
text "UTF-16LE", 'FILE: %s LINE: %d',0Dh
text "UTF-16LE", 0Ah
text "UTF-16LE", '%s %s',0Dh,0Ah,0
; const wchar_t aInfo
aInfo:
text "UTF-16LE", 'INFO:',0
aError:
text "UTF-16LE", 'ERROR:',0
align 4
aDebug:
text "UTF-16LE", 'DEBUG:',0
align 4
aMessage_0:
text "UTF-16LE", 'MESSAGE:',0
align 4
; const wchar_t a02d02d02d02d02
a02d02d02d02d02:
text "UTF-16LE", '%02d:%02d:%02d %02d/%'
text "UTF-16LE", '02d/%02d',0
dd offset unk_100126A8
off_1001059C dd offset loc_100037E0
dd offset sub_100033C7
dd offset sub_10003454
dd offset sub_10003793
dd offset sub_100033A6
dd offset sub_1000353B
dd offset sub_10003580
dd offset sub_10003488
; const wchar_t String
String:
text "UTF-16LE", '_APPLICATION_NAME_',0
align 4
; const wchar_t aExceptionInCon
aExceptionInCon:
text "UTF-16LE", 'Exception in construc'
text "UTF-16LE", 'tor',0
align 4
; const wchar_t aUnknownLine
aUnknownLine:
text "UTF-16LE", 'unknown line',0
align 4
; const wchar_t aLine
aLine:
text "UTF-16LE", 'Line: ',0
align 4
; const wchar_t aUnknownFile
aUnknownFile:
text "UTF-16LE", 'unknown file',0
align 10h
; const wchar_t aFile
aFile:
text "UTF-16LE", 'File: ',0
align 10h
; const wchar_t aEmptyMessage
aEmptyMessage:
text "UTF-16LE", 'empty message',0
; const wchar_t aMessage
aMessage:
text "UTF-16LE", 'Message: ',0
dd offset unk_100126F4
off_100106A4 dd offset loc_1000391E
dd offset sub_100038ED
dd offset sub_100038F3
aPleaseUseWhatW db 'Please use "what_w" member function'
db ' instead',0
align 10h
aCouldNotCreate:
text "UTF-16LE", 'could not create crit'
text "UTF-16LE", 'ical section',0
align 8
aCommonIncludeC:
text "UTF-16LE", '..\..\..\..\common\in'
text "UTF-16LE", 'clude\critsection\Bas'
text "UTF-16LE", 'icCriticalSection.h',0
; const wchar_t aDongleLog
aDongleLog:
text "UTF-16LE", 'Dongle.LOG',0
align 4
aDongleDongleDl:
text "UTF-16LE", 'Dongle ( Dongle.DLL )'
text "UTF-16LE", 0
; const wchar_t aD7ccf60e527b47
aD7ccf60e527b47:
text "UTF-16LE", 'D7CCF60E-527B-4722-A4'
text "UTF-16LE", '1F-4EB6C11B3F74',0
align 8
; const wchar_t a827f7cb1A5e94d
a827f7cb1A5e94d:
text "UTF-16LE", '827F7CB1-A5E9-4DE2-B0'
text "UTF-16LE", 'E1-E571DD1D14F9',0
align 4
dd offset a827f7cb1A5e94d ; "827F7CB1-A5E9-4DE2-B0E1-E571DD1D14F9"
dd offset aD7ccf60e527b47 ; "D7CCF60E-527B-4722-A41F-4EB6C11B3F74"
dd offset aDongleDongleDl ; "Dongle ( Dongle.DLL )"
dd offset aDongleLog    ; "Dongle.LOG"
aNotEnoughMemor:
text "UTF-16LE", 'Not enough memory',0
aCouldNotGetReq:
text "UTF-16LE", 'Could not get request'
text "UTF-16LE", 'ed environment variab'
text "UTF-16LE", 'le',0
align 8
aRequestedEnvir:
text "UTF-16LE", 'Requested environment'
text "UTF-16LE", ' variable does not ex'
text "UTF-16LE", 'ist',0
align 8
aInvalidEnviron:
text "UTF-16LE", 'Invalid environment v'
text "UTF-16LE", 'ariable name ( empty '
text "UTF-16LE", 'name )',0
align 10h
aCommonIncludeH:
text "UTF-16LE", '..\..\..\..\common\in'
text "UTF-16LE", 'clude\helper\commonfu'
text "UTF-16LE", 'nc.h',0
align 10h
; const wchar_t asc_10010A40
asc_10010A40:
text "UTF-16LE", '\',0
dd offset unk_10012740
off_10010A48 dd offset sub_100044DF
dd offset ?what@exception@@UBEPBDXZ ; exception::what(void)
aUnknownExcepti db 'Unknown exception',0
align 4
dd offset unk_10012754
off_10010A68 dd offset sub_10004510
unk_10010A6C db  63h ; c
db  73h ; s
db  6Dh ; m
db 0E0h
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    3
db    0
db    0
db    0
db  20h
db    5
db  93h
db  19h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dword_10010A8C dd 0
; const struct _EXCEPTION_POINTERS ExceptionInfo
ExceptionInfo _EXCEPTION_POINTERS <offset dword_10021830,\
                     offset dword_10021888>
; const CHAR ProcName[]
ProcName db 'EncodePointer',0
align 4
; const WCHAR ModuleName
ModuleName:
text "UTF-16LE", 'KERNEL32.DLL',0
align 4
; const CHAR aDecodepointer[]
aDecodepointer db 'DecodePointer',0
align 4
; const CHAR aFlsfree[]
aFlsfree db 'FlsFree',0
; const CHAR aFlssetvalue[]
aFlssetvalue db 'FlsSetValue',0
; const CHAR aFlsgetvalue[]
aFlsgetvalue db 'FlsGetValue',0
; const CHAR aFlsalloc[]
aFlsalloc db 'FlsAlloc',0
align 10h
off_10010B00 dd offset ___DestructExceptionObject
dd offset unk_1001279C
off_10010B08 dd offset sub_10006A01
dd offset ?what@exception@@UBEPBDXZ ; exception::what(void)
; const char aBadException[]
aBadException db 'bad exception',0
align 10h
db    1
db    2
db    3
db    4
db    5
db    6
db    7
db    8
db    9
db  0Ah
db  0Bh
db  0Ch
db  0Dh
db  0Eh
db  0Fh
db  10h
db  11h
db  12h
db  13h
db  14h
db  15h
db  16h
db  17h
db  18h
db  19h
db  1Ah
db  1Bh
db  1Ch
db  1Dh
db  1Eh
db  1Fh
db  20h
db  21h ; !
db  22h ; "
db  23h ; #
db  24h ; $
db  25h ; %
db  26h ; &
db  27h ; '
db  28h ; (
db  29h ; )
db  2Ah ; *
db  2Bh ; +
db  2Ch ; ,
db  2Dh ; -
db  2Eh ; .
db  2Fh ; /
db  30h ; 0
db  31h ; 1
db  32h ; 2
db  33h ; 3
db  34h ; 4
db  35h ; 5
db  36h ; 6
db  37h ; 7
db  38h ; 8
db  39h ; 9
db  3Ah ; :
db  3Bh ; ;
db  3Ch ; <
db  3Dh ; =
db  3Eh ; >
db  3Fh ; ?
db  40h ; @
db  41h ; A
db  42h ; B
db  43h ; C
db  44h ; D
db  45h ; E
db  46h ; F
db  47h ; G
db  48h ; H
db  49h ; I
db  4Ah ; J
db  4Bh ; K
db  4Ch ; L
db  4Dh ; M
db  4Eh ; N
db  4Fh ; O
db  50h ; P
db  51h ; Q
db  52h ; R
db  53h ; S
db  54h ; T
db  55h ; U
db  56h ; V
db  57h ; W
db  58h ; X
db  59h ; Y
db  5Ah ; Z
db  5Bh ; [
db  5Ch ; \
db  5Dh ; ]
db  5Eh ; ^
db  5Fh ; _
db  60h ; `
db  61h ; a
db  62h ; b
db  63h ; c
db  64h ; d
db  65h ; e
db  66h ; f
db  67h ; g
db  68h ; h
db  69h ; i
db  6Ah ; j
db  6Bh ; k
db  6Ch ; l
db  6Dh ; m
db  6Eh ; n
db  6Fh ; o
db  70h ; p
db  71h ; q
db  72h ; r
db  73h ; s
db  74h ; t
db  75h ; u
db  76h ; v
db  77h ; w
db  78h ; x
db  79h ; y
db  7Ah ; z
db  7Bh ; {
db  7Ch ; |
db  7Dh ; }
db  7Eh ; ~
db  7Fh ; 
db    0
unk_10010BA0 db  3Dh ; =
db    0
unk_10010BA2 db    0
db    0
; const WCHAR SrcStr
SrcStr dw 0
align 4
aRuntimeError db 'runtime error ',0
align 4
asc_10010BB8 db 0Dh,0Ah,0
align 4
aTlossError db 'TLOSS error',0Dh,0Ah,0
align 4
aSingError db 'SING error',0Dh,0Ah,0
align 4
aDomainError db 'DOMAIN error',0Dh,0Ah,0
align 10h
aR6034AnApplica db 'R6034',0Dh,0Ah
db 'An application has made an attempt '
db 'to load the C runtime library incor'
db 'rectly.',0Ah
db 'Please contact the application',27h
db 's support team for more information'
db '.',0Dh,0Ah,0
align 10h
aR6033AttemptTo db 'R6033',0Dh,0Ah
db '- Attempt to use MSIL code from thi'
db 's assembly during native code initi'
db 'alization',0Ah
db 'This indicates a bug in your applic'
db 'ation. It is most likely the result'
db ' of calling an MSIL-compiled (/clr)'
db ' function from a native constructor'
db ' or from DllMain.',0Dh,0Ah,0
align 4
aR6032NotEnough db 'R6032',0Dh,0Ah
db '- not enough space for locale infor'
db 'mation',0Dh,0Ah,0
align 10h
aR6031AttemptTo db 'R6031',0Dh,0Ah
db '- Attempt to initialize the CRT mor'
db 'e than once.',0Ah
db 'This indicates a bug in your applic'
db 'ation.',0Dh,0Ah,0
align 4
aR6030CrtNotIni db 'R6030',0Dh,0Ah
db '- CRT not initialized',0Dh,0Ah,0
align 4
aR6028UnableToI db 'R6028',0Dh,0Ah
db '- unable to initialize heap',0Dh,0Ah
db 0
align 4
aR6027NotEnough db 'R6027',0Dh,0Ah
db '- not enough space for lowio initia'
db 'lization',0Dh,0Ah,0
align 4
aR6026NotEnough db 'R6026',0Dh,0Ah
db '- not enough space for stdio initia'
db 'lization',0Dh,0Ah,0
align 4
aR6025PureVirtu db 'R6025',0Dh,0Ah
db '- pure virtual function call',0Dh,0Ah
db 0
align 4
aR6024NotEnough db 'R6024',0Dh,0Ah
db '- not enough space for _onexit/atex'
db 'it table',0Dh,0Ah,0
align 4
aR6019UnableToO db 'R6019',0Dh,0Ah
db '- unable to open console device',0Dh
db 0Ah,0
align 4
aR6018Unexpecte db 'R6018',0Dh,0Ah
db '- unexpected heap error',0Dh,0Ah,0
align 4
aR6017Unexpecte db 'R6017',0Dh,0Ah
db '- unexpected multithread lock error'
db 0Dh,0Ah,0
align 4
aR6016NotEnough db 'R6016',0Dh,0Ah
db '- not enough space for thread data',0Dh
db 0Ah,0
aThisApplicatio db 0Dh,0Ah
db 'This application has requested the '
db 'Runtime to terminate it in an unusu'
db 'al way.',0Ah
db 'Please contact the application',27h
db 's support team for more information'
db '.',0Dh,0Ah,0
align 10h
aR6009NotEnough db 'R6009',0Dh,0Ah
db '- not enough space for environment',0Dh
db 0Ah,0
aR6008NotEnough db 'R6008',0Dh,0Ah
db '- not enough space for arguments',0Dh
db 0Ah,0
align 4
aR6002FloatingP db 'R6002',0Dh,0Ah
db '- floating point support not loaded'
db 0Dh,0Ah,0
align 4
aMicrosoftVisua db 'Microsoft Visual C++ Runtime Librar'
db 'y',0
align 10h
; const char asc_10011130[]
asc_10011130 db 0Ah
db 0Ah,0
align 4
; const char asc_10011134[]
asc_10011134 db '...',0
; const char aProgramNameUnk[]
aProgramNameUnk db '<program name unknown>',0
align 10h
; const char Source[]
Source db 'Runtime Error!',0Ah
db 0Ah
db 'Program: ',0
align 4
; const CHAR aCorexitprocess[]
aCorexitprocess db 'CorExitProcess',0
align 4
; const WCHAR aMscoreeDll
aMscoreeDll:
text "UTF-16LE", 'mscoree.dll',0
align 8
unk_10011198 db    5
db    0
db    0
db 0C0h
db  0Bh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  1Dh
db    0
db    0
db 0C0h
db    4
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  96h
db    0
db    0
db 0C0h
db    4
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  8Dh
db    0
db    0
db 0C0h
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  8Eh
db    0
db    0
db 0C0h
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  8Fh
db    0
db    0
db 0C0h
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  90h
db    0
db    0
db 0C0h
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  91h
db    0
db    0
db 0C0h
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  92h
db    0
db    0
db 0C0h
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  93h
db    0
db    0
db 0C0h
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
aCompleteObject db ' Complete Object Locator',27h,0
db    0
db    0
aClassHierarchy db ' Class Hierarchy Descriptor',27h,0
db    0
db    0
db    0
aBaseClassArray db ' Base Class Array',27h,0
db    0
aBaseClassDescr db ' Base Class Descriptor at (',0
aTypeDescriptor db ' Type Descriptor',27h,0
db    0
db    0
aLocalStaticThr db '`local static thread guard',27h,0
aManagedVectorC_0 db '`managed vector copy constructor it'
db 'erator',27h,0
db    0
aVectorVbaseCop db '`vector vbase copy constructor iter'
db 'ator',27h,0
db    0
db    0
db    0
aVectorCopyCons db '`vector copy constructor iterator',27h
db 0
db    0
aDynamicAtexitD db '`dynamic atexit destructor for ',27h
db 0
db    0
db    0
db    0
aDynamicInitial db '`dynamic initializer for ',27h,0
db    0
aEhVectorVbaseC_0 db '`eh vector vbase copy constructor i'
db 'terator',27h,0
aEhVectorCopyCo db '`eh vector copy constructor iterato'
db 'r',27h,0
db    0
db    0
aManagedVectorD db '`managed vector destructor iterator'
db 27h,0
db    0
db    0
db    0
aManagedVectorC db '`managed vector constructor iterato'
db 'r',27h,0
db    0
db    0
aPlacementDelet_0 db '`placement delete[] closure',27h,0
db    0
db    0
db    0
aPlacementDelet db '`placement delete closure',27h,0
db    0
aOmniCallsig db '`omni callsig',27h,0
db    0
aDelete_0 db ' delete[]',0
db    0
db    0
aNew_0 db ' new[]',0
db    0
aLocalVftableCo db '`local vftable constructor closure',27h
db 0
aLocalVftable db '`local vftable',27h,0
aRtti db '`RTTI',0
db    0
db    0
unk_100114A8 db  60h ; `
db  45h ; E
db  48h ; H
db    0
aUdtReturning db '`udt returning',27h,0
aCopyConstructo db '`copy constructor closure',27h,0
db    0
aEhVectorVbaseC db '`eh vector vbase constructor iterat'
db 'or',27h,0
db    0
aEhVectorDestru db '`eh vector destructor iterator',27h
db 0
aEhVectorConstr db '`eh vector constructor iterator',27h
db 0
db    0
db    0
db    0
aVirtualDisplac db '`virtual displacement map',27h,0
db    0
aVectorVbaseCon db '`vector vbase constructor iterator',27h
db 0
aVectorDestruct db '`vector destructor iterator',27h,0
db    0
db    0
db    0
aVectorConstruc db '`vector constructor iterator',27h,0
db    0
db    0
aScalarDeleting db '`scalar deleting destructor',27h,0
db    0
db    0
db    0
aDefaultConstru db '`default constructor closure',27h,0
db    0
db    0
aVectorDeleting db '`vector deleting destructor',27h,0
db    0
db    0
db    0
aVbaseDestructo db '`vbase destructor',27h,0
db    0
aString db '`string',27h,0
db    0
db    0
db    0
aLocalStaticGua db '`local static guard',27h,0
db    0
db    0
db    0
aTypeof db '`typeof',27h,0
db    0
db    0
db    0
aVcall db '`vcall',27h,0
aVbtable db '`vbtable',27h,0
db    0
db    0
aVftable db '`vftable',27h,0
db    0
db    0
unk_10011688 db  5Eh ; ^
db  3Dh ; =
db    0
db    0
unk_1001168C db  7Ch ; |
db  3Dh ; =
db    0
db    0
unk_10011690 db  26h ; &
db  3Dh ; =
db    0
db    0
unk_10011694 db  3Ch ; <
db  3Ch ; <
db  3Dh ; =
db    0
unk_10011698 db  3Eh ; >
db  3Eh ; >
db  3Dh ; =
db    0
unk_1001169C db  25h ; %
db  3Dh ; =
db    0
db    0
unk_100116A0 db  2Fh ; /
db  3Dh ; =
db    0
db    0
unk_100116A4 db  2Dh ; -
db  3Dh ; =
db    0
db    0
unk_100116A8 db  2Bh ; +
db  3Dh ; =
db    0
db    0
unk_100116AC db  2Ah ; *
db  3Dh ; =
db    0
db    0
unk_100116B0 db  7Ch ; |
db  7Ch ; |
db    0
db    0
unk_100116B4 db  26h ; &
db  26h ; &
db    0
db    0
unk_100116B8 db  7Ch ; |
db    0
db    0
db    0
unk_100116BC db  5Eh ; ^
db    0
db    0
db    0
unk_100116C0 db  7Eh ; ~
db    0
db    0
db    0
unk_100116C4 db  28h ; (
db  29h ; )
db    0
db    0
unk_100116C8 db  2Ch ; ,
db    0
db    0
db    0
unk_100116CC db  3Eh ; >
db  3Dh ; =
db    0
db    0
unk_100116D0 db  3Eh ; >
db    0
db    0
db    0
unk_100116D4 db  3Ch ; <
db  3Dh ; =
db    0
db    0
unk_100116D8 db  3Ch ; <
db    0
db    0
db    0
unk_100116DC db  25h ; %
db    0
db    0
db    0
unk_100116E0 db  2Fh ; /
db    0
db    0
db    0
unk_100116E4 db  2Dh ; -
db  3Eh ; >
db  2Ah ; *
db    0
unk_100116E8 db  26h ; &
db    0
db    0
db    0
unk_100116EC db  2Bh ; +
db    0
db    0
db    0
unk_100116F0 db  2Dh ; -
db    0
db    0
db    0
unk_100116F4 db  2Dh ; -
db  2Dh ; -
db    0
db    0
unk_100116F8 db  2Bh ; +
db  2Bh ; +
db    0
db    0
unk_100116FC db  2Ah ; *
db    0
db    0
db    0
unk_10011700 db  2Dh ; -
db  3Eh ; >
db    0
db    0
aOperator db 'operator',0
db    0
db    0
db    0
unk_10011710 db  5Bh ; [
db  5Dh ; ]
db    0
db    0
unk_10011714 db  21h ; !
db  3Dh ; =
db    0
db    0
unk_10011718 db  3Dh ; =
db  3Dh ; =
db    0
db    0
unk_1001171C db  21h ; !
db    0
db    0
db    0
unk_10011720 db  3Ch ; <
db  3Ch ; <
db    0
db    0
unk_10011724 db  3Eh ; >
db  3Eh ; >
db    0
db    0
aDelete db ' delete',0
aNew db ' new',0
db    0
db    0
db    0
aUnaligned db '__unaligned',0
aRestrict db '__restrict',0
db    0
aPtr64 db '__ptr64',0
aClrcall db '__clrcall',0
db    0
db    0
aFastcall db '__fastcall',0
db    0
aThiscall db '__thiscall',0
db    0
aStdcall db '__stdcall',0
db    0
db    0
aPascal db '__pascal',0
db    0
db    0
db    0
aCdecl db '__cdecl',0
aBased db '__based(',0
db    0
db    0
db    0
dd offset aBased        ; "__based("
dd offset aCdecl        ; "__cdecl"
dd offset aPascal       ; "__pascal"
dd offset aStdcall      ; "__stdcall"
dd offset aThiscall     ; "__thiscall"
dd offset aFastcall     ; "__fastcall"
dd offset aClrcall      ; "__clrcall"
dd offset aPtr64        ; "__ptr64"
dd offset aRestrict     ; "__restrict"
dd offset aUnaligned    ; "__unaligned"
dd offset unk_10010BA2
dd offset aTypeDescriptor ; " Type Descriptor'"
dd offset aBaseClassDescr ; " Base Class Descriptor at ("
dd offset aBaseClassArray ; " Base Class Array'"
dd offset aClassHierarchy ; " Class Hierarchy Descriptor'"
dd offset aCompleteObject ; " Complete Object Locator'"
dd offset aNew          ; " new"
dd offset aDelete       ; " delete"
dd offset unk_10010BA0
dd offset unk_10011724
dd offset unk_10011720
dd offset unk_1001171C
dd offset unk_10011718
dd offset unk_10011714
dd offset unk_10011710
dd offset aOperator     ; "operator"
dd offset unk_10011700
dd offset unk_100116FC
dd offset unk_100116F8
dd offset unk_100116F4
dd offset unk_100116F0
dd offset unk_100116EC
dd offset unk_100116E8
dd offset unk_100116E4
dd offset unk_100116E0
dd offset unk_100116DC
dd offset unk_100116D8
dd offset unk_100116D4
dd offset unk_100116D0
dd offset unk_100116CC
dd offset unk_100116C8
dd offset unk_100116C4
dd offset unk_100116C0
dd offset unk_100116BC
dd offset unk_100116B8
dd offset unk_100116B4
dd offset unk_100116B0
dd offset unk_100116AC
dd offset unk_100116A8
dd offset unk_100116A4
dd offset unk_100116A0
dd offset unk_1001169C
dd offset unk_10011698
dd offset unk_10011694
dd offset unk_10011690
dd offset unk_1001168C
dd offset unk_10011688
dd offset aVftable      ; "`vftable'"
dd offset aVbtable      ; "`vbtable'"
dd offset aVcall        ; "`vcall'"
dd offset aTypeof       ; "`typeof'"
dd offset aLocalStaticGua ; "`local static guard'"
dd offset aString       ; "`string'"
dd offset aVbaseDestructo ; "`vbase destructor'"
dd offset aVectorDeleting ; "`vector deleting destructor'"
dd offset aDefaultConstru ; "`default constructor closure'"
dd offset aScalarDeleting ; "`scalar deleting destructor'"
dd offset aVectorConstruc ; "`vector constructor iterator'"
dd offset aVectorDestruct ; "`vector destructor iterator'"
dd offset aVectorVbaseCon ; "`vector vbase constructor iterator'"
dd offset aVirtualDisplac ; "`virtual displacement map'"
dd offset aEhVectorConstr ; "`eh vector constructor iterator'"
dd offset aEhVectorDestru ; "`eh vector destructor iterator'"
dd offset aEhVectorVbaseC ; "`eh vector vbase constructor iterator'"
dd offset aCopyConstructo ; "`copy constructor closure'"
dd offset aUdtReturning ; "`udt returning'"
dd offset unk_100114A8
dd offset aRtti         ; "`RTTI"
dd offset aLocalVftable ; "`local vftable'"
dd offset aLocalVftableCo ; "`local vftable constructor closure'"
dd offset aNew_0        ; " new[]"
dd offset aDelete_0     ; " delete[]"
dd offset aOmniCallsig  ; "`omni callsig'"
dd offset aPlacementDelet ; "`placement delete closure'"
dd offset aPlacementDelet_0 ; "`placement delete[] closure'"
dd offset aManagedVectorC ; "`managed vector constructor iterator'"
dd offset aManagedVectorD ; "`managed vector destructor iterator'"
dd offset aEhVectorCopyCo ; "`eh vector copy constructor iterator'"
dd offset aEhVectorVbaseC_0 ; "`eh vector vbase copy constructor itera"...
dd offset aDynamicInitial ; "`dynamic initializer for '"
dd offset aDynamicAtexitD ; "`dynamic atexit destructor for '"
dd offset aVectorCopyCons ; "`vector copy constructor iterator'"
dd offset aVectorVbaseCop ; "`vector vbase copy constructor iterator"...
dd offset aManagedVectorC_0 ; "`managed vector copy constructor iterat"...
off_10011920 dd offset aLocalStaticThr ; "`local static thread guard'"
dd offset unk_10010BA2
aNull_0:
text "UTF-16LE", '(null)',0
align 4
aNull db '(null)',0
align 10h
byte_10011940 db 6
db    0
db    0
db    6
db    0
db    1
db    0
db    0
db  10h
db    0
db    3
db    6
db    0
db    6
db    2
db  10h
db    4
db  45h ; E
db  45h ; E
db  45h ; E
db    5
db    5
db    5
db    5
db    5
db  35h ; 5
db  30h ; 0
db    0
db  50h ; P
db    0
db    0
db    0
db    0
db  28h ; (
db  20h
db  38h ; 8
db  50h ; P
db  58h ; X
db    7
db    8
db    0
db  37h ; 7
db  30h ; 0
db  30h ; 0
db  57h ; W
db  50h ; P
db    7
db    0
db    0
db  20h
db  20h
db    8
db    0
db    0
db    0
db    0
db    8
db  60h ; `
db  68h ; h
db  60h ; `
db  60h ; `
db  60h ; `
db  60h ; `
db    0
db    0
db  78h ; x
db  70h ; p
db  78h ; x
db  78h ; x
db  78h ; x
db  78h ; x
db    8
db    7
db    8
db    0
db    0
db    7
db    0
db    8
db    8
db    8
db    0
db    0
db    8
db    0
db    8
db    0
db    7
db    8
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
asc_10011AA0:
text "UTF-16LE", '         (((((       '
text "UTF-16LE", '           H'
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  81h
db    0
db  81h
db    0
db  81h
db    0
db  81h
db    0
db  81h
db    0
db  81h
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db    1
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  82h
db    0
db  82h
db    0
db  82h
db    0
db  82h
db    0
db  82h
db    0
db  82h
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db    2
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_10011CA2 db  20h
db    0
aHH:
text "UTF-16LE", '        h((((        '
text "UTF-16LE", '          H'
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  84h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  81h
db    1
db  81h
db    1
db  81h
db    1
db  81h
db    1
db  81h
db    1
db  81h
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  82h
db    1
db  82h
db    1
db  82h
db    1
db  82h
db    1
db  82h
db    1
db  82h
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  20h
db    0
db  48h ; H
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  14h
db    0
db  14h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  14h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db  10h
db    0
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db  10h
db    0
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db  10h
db    0
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    2
db    1
db    1
db    1
db    0
db    0
db    0
db    0
db  80h
db  81h
db  82h
db  83h
db  84h
db  85h
db  86h
db  87h
db  88h
db  89h
db  8Ah
db  8Bh
db  8Ch
db  8Dh
db  8Eh
db  8Fh
db  90h
db  91h
db  92h
db  93h
db  94h
db  95h
db  96h
db  97h
db  98h
db  99h
db  9Ah
db  9Bh
db  9Ch
db  9Dh
db  9Eh
db  9Fh
db 0A0h
db 0A1h
db 0A2h
db 0A3h
db 0A4h
db 0A5h
db 0A6h
db 0A7h
db 0A8h
db 0A9h
db 0AAh
db 0ABh
db 0ACh
db 0ADh
db 0AEh
db 0AFh
db 0B0h
db 0B1h
db 0B2h
db 0B3h
db 0B4h
db 0B5h
db 0B6h
db 0B7h
db 0B8h
db 0B9h
db 0BAh
db 0BBh
db 0BCh
db 0BDh
db 0BEh
db 0BFh
db 0C0h
db 0C1h
db 0C2h
db 0C3h
db 0C4h
db 0C5h
db 0C6h
db 0C7h
db 0C8h
db 0C9h
db 0CAh
db 0CBh
db 0CCh
db 0CDh
db 0CEh
db 0CFh
db 0D0h
db 0D1h
db 0D2h
db 0D3h
db 0D4h
db 0D5h
db 0D6h
db 0D7h
db 0D8h
db 0D9h
db 0DAh
db 0DBh
db 0DCh
db 0DDh
db 0DEh
db 0DFh
db 0E0h
db 0E1h
db 0E2h
db 0E3h
db 0E4h
db 0E5h
db 0E6h
db 0E7h
db 0E8h
db 0E9h
db 0EAh
db 0EBh
db 0ECh
db 0EDh
db 0EEh
db 0EFh
db 0F0h
db 0F1h
db 0F2h
db 0F3h
db 0F4h
db 0F5h
db 0F6h
db 0F7h
db 0F8h
db 0F9h
db 0FAh
db 0FBh
db 0FCh
db 0FDh
db 0FEh
db 0FFh
unk_10011F28 db    0
db    1
db    2
db    3
db    4
db    5
db    6
db    7
db    8
db    9
db  0Ah
db  0Bh
db  0Ch
db  0Dh
db  0Eh
db  0Fh
db  10h
db  11h
db  12h
db  13h
db  14h
db  15h
db  16h
db  17h
db  18h
db  19h
db  1Ah
db  1Bh
db  1Ch
db  1Dh
db  1Eh
db  1Fh
db  20h
db  21h ; !
db  22h ; "
db  23h ; #
db  24h ; $
db  25h ; %
db  26h ; &
db  27h ; '
db  28h ; (
db  29h ; )
db  2Ah ; *
db  2Bh ; +
db  2Ch ; ,
db  2Dh ; -
db  2Eh ; .
db  2Fh ; /
db  30h ; 0
db  31h ; 1
db  32h ; 2
db  33h ; 3
db  34h ; 4
db  35h ; 5
db  36h ; 6
db  37h ; 7
db  38h ; 8
db  39h ; 9
db  3Ah ; :
db  3Bh ; ;
db  3Ch ; <
db  3Dh ; =
db  3Eh ; >
db  3Fh ; ?
db  40h ; @
db  61h ; a
db  62h ; b
db  63h ; c
db  64h ; d
db  65h ; e
db  66h ; f
db  67h ; g
db  68h ; h
db  69h ; i
db  6Ah ; j
db  6Bh ; k
db  6Ch ; l
db  6Dh ; m
db  6Eh ; n
db  6Fh ; o
db  70h ; p
db  71h ; q
db  72h ; r
db  73h ; s
db  74h ; t
db  75h ; u
db  76h ; v
db  77h ; w
db  78h ; x
db  79h ; y
db  7Ah ; z
db  5Bh ; [
db  5Ch ; \
db  5Dh ; ]
db  5Eh ; ^
db  5Fh ; _
db  60h ; `
db  61h ; a
db  62h ; b
db  63h ; c
db  64h ; d
db  65h ; e
db  66h ; f
db  67h ; g
db  68h ; h
db  69h ; i
db  6Ah ; j
db  6Bh ; k
db  6Ch ; l
db  6Dh ; m
db  6Eh ; n
db  6Fh ; o
db  70h ; p
db  71h ; q
db  72h ; r
db  73h ; s
db  74h ; t
db  75h ; u
db  76h ; v
db  77h ; w
db  78h ; x
db  79h ; y
db  7Ah ; z
db  7Bh ; {
db  7Ch ; |
db  7Dh ; }
db  7Eh ; ~
db  7Fh ; 
db  80h
db  81h
db  82h
db  83h
db  84h
db  85h
db  86h
db  87h
db  88h
db  89h
db  8Ah
db  8Bh
db  8Ch
db  8Dh
db  8Eh
db  8Fh
db  90h
db  91h
db  92h
db  93h
db  94h
db  95h
db  96h
db  97h
db  98h
db  99h
db  9Ah
db  9Bh
db  9Ch
db  9Dh
db  9Eh
db  9Fh
db 0A0h
db 0A1h
db 0A2h
db 0A3h
db 0A4h
db 0A5h
db 0A6h
db 0A7h
db 0A8h
db 0A9h
db 0AAh
db 0ABh
db 0ACh
db 0ADh
db 0AEh
db 0AFh
db 0B0h
db 0B1h
db 0B2h
db 0B3h
db 0B4h
db 0B5h
db 0B6h
db 0B7h
db 0B8h
db 0B9h
db 0BAh
db 0BBh
db 0BCh
db 0BDh
db 0BEh
db 0BFh
db 0C0h
db 0C1h
db 0C2h
db 0C3h
db 0C4h
db 0C5h
db 0C6h
db 0C7h
db 0C8h
db 0C9h
db 0CAh
db 0CBh
db 0CCh
db 0CDh
db 0CEh
db 0CFh
db 0D0h
db 0D1h
db 0D2h
db 0D3h
db 0D4h
db 0D5h
db 0D6h
db 0D7h
db 0D8h
db 0D9h
db 0DAh
db 0DBh
db 0DCh
db 0DDh
db 0DEh
db 0DFh
db 0E0h
db 0E1h
db 0E2h
db 0E3h
db 0E4h
db 0E5h
db 0E6h
db 0E7h
db 0E8h
db 0E9h
db 0EAh
db 0EBh
db 0ECh
db 0EDh
db 0EEh
db 0EFh
db 0F0h
db 0F1h
db 0F2h
db 0F3h
db 0F4h
db 0F5h
db 0F6h
db 0F7h
db 0F8h
db 0F9h
db 0FAh
db 0FBh
db 0FCh
db 0FDh
db 0FEh
db 0FFh
db  80h
db  81h
db  82h
db  83h
db  84h
db  85h
db  86h
db  87h
db  88h
db  89h
db  8Ah
db  8Bh
db  8Ch
db  8Dh
db  8Eh
db  8Fh
db  90h
db  91h
db  92h
db  93h
db  94h
db  95h
db  96h
db  97h
db  98h
db  99h
db  9Ah
db  9Bh
db  9Ch
db  9Dh
db  9Eh
db  9Fh
db 0A0h
db 0A1h
db 0A2h
db 0A3h
db 0A4h
db 0A5h
db 0A6h
db 0A7h
db 0A8h
db 0A9h
db 0AAh
db 0ABh
db 0ACh
db 0ADh
db 0AEh
db 0AFh
db 0B0h
db 0B1h
db 0B2h
db 0B3h
db 0B4h
db 0B5h
db 0B6h
db 0B7h
db 0B8h
db 0B9h
db 0BAh
db 0BBh
db 0BCh
db 0BDh
db 0BEh
db 0BFh
db 0C0h
db 0C1h
db 0C2h
db 0C3h
db 0C4h
db 0C5h
db 0C6h
db 0C7h
db 0C8h
db 0C9h
db 0CAh
db 0CBh
db 0CCh
db 0CDh
db 0CEh
db 0CFh
db 0D0h
db 0D1h
db 0D2h
db 0D3h
db 0D4h
db 0D5h
db 0D6h
db 0D7h
db 0D8h
db 0D9h
db 0DAh
db 0DBh
db 0DCh
db 0DDh
db 0DEh
db 0DFh
db 0E0h
db 0E1h
db 0E2h
db 0E3h
db 0E4h
db 0E5h
db 0E6h
db 0E7h
db 0E8h
db 0E9h
db 0EAh
db 0EBh
db 0ECh
db 0EDh
db 0EEh
db 0EFh
db 0F0h
db 0F1h
db 0F2h
db 0F3h
db 0F4h
db 0F5h
db 0F6h
db 0F7h
db 0F8h
db 0F9h
db 0FAh
db 0FBh
db 0FCh
db 0FDh
db 0FEh
db 0FFh
unk_100120A8 db    0
db    1
db    2
db    3
db    4
db    5
db    6
db    7
db    8
db    9
db  0Ah
db  0Bh
db  0Ch
db  0Dh
db  0Eh
db  0Fh
db  10h
db  11h
db  12h
db  13h
db  14h
db  15h
db  16h
db  17h
db  18h
db  19h
db  1Ah
db  1Bh
db  1Ch
db  1Dh
db  1Eh
db  1Fh
db  20h
db  21h ; !
db  22h ; "
db  23h ; #
db  24h ; $
db  25h ; %
db  26h ; &
db  27h ; '
db  28h ; (
db  29h ; )
db  2Ah ; *
db  2Bh ; +
db  2Ch ; ,
db  2Dh ; -
db  2Eh ; .
db  2Fh ; /
db  30h ; 0
db  31h ; 1
db  32h ; 2
db  33h ; 3
db  34h ; 4
db  35h ; 5
db  36h ; 6
db  37h ; 7
db  38h ; 8
db  39h ; 9
db  3Ah ; :
db  3Bh ; ;
db  3Ch ; <
db  3Dh ; =
db  3Eh ; >
db  3Fh ; ?
db  40h ; @
db  41h ; A
db  42h ; B
db  43h ; C
db  44h ; D
db  45h ; E
db  46h ; F
db  47h ; G
db  48h ; H
db  49h ; I
db  4Ah ; J
db  4Bh ; K
db  4Ch ; L
db  4Dh ; M
db  4Eh ; N
db  4Fh ; O
db  50h ; P
db  51h ; Q
db  52h ; R
db  53h ; S
db  54h ; T
db  55h ; U
db  56h ; V
db  57h ; W
db  58h ; X
db  59h ; Y
db  5Ah ; Z
db  5Bh ; [
db  5Ch ; \
db  5Dh ; ]
db  5Eh ; ^
db  5Fh ; _
db  60h ; `
db  41h ; A
db  42h ; B
db  43h ; C
db  44h ; D
db  45h ; E
db  46h ; F
db  47h ; G
db  48h ; H
db  49h ; I
db  4Ah ; J
db  4Bh ; K
db  4Ch ; L
db  4Dh ; M
db  4Eh ; N
db  4Fh ; O
db  50h ; P
db  51h ; Q
db  52h ; R
db  53h ; S
db  54h ; T
db  55h ; U
db  56h ; V
db  57h ; W
db  58h ; X
db  59h ; Y
db  5Ah ; Z
db  7Bh ; {
db  7Ch ; |
db  7Dh ; }
db  7Eh ; ~
db  7Fh ; 
db  80h
db  81h
db  82h
db  83h
db  84h
db  85h
db  86h
db  87h
db  88h
db  89h
db  8Ah
db  8Bh
db  8Ch
db  8Dh
db  8Eh
db  8Fh
db  90h
db  91h
db  92h
db  93h
db  94h
db  95h
db  96h
db  97h
db  98h
db  99h
db  9Ah
db  9Bh
db  9Ch
db  9Dh
db  9Eh
db  9Fh
db 0A0h
db 0A1h
db 0A2h
db 0A3h
db 0A4h
db 0A5h
db 0A6h
db 0A7h
db 0A8h
db 0A9h
db 0AAh
db 0ABh
db 0ACh
db 0ADh
db 0AEh
db 0AFh
db 0B0h
db 0B1h
db 0B2h
db 0B3h
db 0B4h
db 0B5h
db 0B6h
db 0B7h
db 0B8h
db 0B9h
db 0BAh
db 0BBh
db 0BCh
db 0BDh
db 0BEh
db 0BFh
db 0C0h
db 0C1h
db 0C2h
db 0C3h
db 0C4h
db 0C5h
db 0C6h
db 0C7h
db 0C8h
db 0C9h
db 0CAh
db 0CBh
db 0CCh
db 0CDh
db 0CEh
db 0CFh
db 0D0h
db 0D1h
db 0D2h
db 0D3h
db 0D4h
db 0D5h
db 0D6h
db 0D7h
db 0D8h
db 0D9h
db 0DAh
db 0DBh
db 0DCh
db 0DDh
db 0DEh
db 0DFh
db 0E0h
db 0E1h
db 0E2h
db 0E3h
db 0E4h
db 0E5h
db 0E6h
db 0E7h
db 0E8h
db 0E9h
db 0EAh
db 0EBh
db 0ECh
db 0EDh
db 0EEh
db 0EFh
db 0F0h
db 0F1h
db 0F2h
db 0F3h
db 0F4h
db 0F5h
db 0F6h
db 0F7h
db 0F8h
db 0F9h
db 0FAh
db 0FBh
db 0FCh
db 0FDh
db 0FEh
db 0FFh
aHhMmSs db 'HH:mm:ss',0
db    0
db    0
db    0
aDdddMmmmDdYyyy db 'dddd, MMMM dd, yyyy',0
aMmDdYy db 'MM/dd/yy',0
db    0
db    0
db    0
unk_100121D4 db  50h ; P
db  4Dh ; M
db    0
db    0
unk_100121D8 db  41h ; A
db  4Dh ; M
db    0
db    0
aDecember db 'December',0
db    0
db    0
db    0
aNovember db 'November',0
db    0
db    0
db    0
aOctober db 'October',0
aSeptember db 'September',0
db    0
db    0
aAugust db 'August',0
db    0
aJuly db 'July',0
db    0
db    0
db    0
aJune db 'June',0
db    0
db    0
db    0
aApril db 'April',0
db    0
db    0
aMarch db 'March',0
db    0
db    0
aFebruary db 'February',0
db    0
db    0
db    0
aJanuary db 'January',0
unk_10012244 db  44h ; D
db  65h ; e
db  63h ; c
db    0
unk_10012248 db  4Eh ; N
db  6Fh ; o
db  76h ; v
db    0
unk_1001224C db  4Fh ; O
db  63h ; c
db  74h ; t
db    0
unk_10012250 db  53h ; S
db  65h ; e
db  70h ; p
db    0
unk_10012254 db  41h ; A
db  75h ; u
db  67h ; g
db    0
unk_10012258 db  4Ah ; J
db  75h ; u
db  6Ch ; l
db    0
unk_1001225C db  4Ah ; J
db  75h ; u
db  6Eh ; n
db    0
unk_10012260 db  4Dh ; M
db  61h ; a
db  79h ; y
db    0
unk_10012264 db  41h ; A
db  70h ; p
db  72h ; r
db    0
unk_10012268 db  4Dh ; M
db  61h ; a
db  72h ; r
db    0
unk_1001226C db  46h ; F
db  65h ; e
db  62h ; b
db    0
unk_10012270 db  4Ah ; J
db  61h ; a
db  6Eh ; n
db    0
aSaturday db 'Saturday',0
db    0
db    0
db    0
aFriday db 'Friday',0
db    0
aThursday db 'Thursday',0
db    0
db    0
db    0
aWednesday db 'Wednesday',0
db    0
db    0
aTuesday db 'Tuesday',0
aMonday db 'Monday',0
db    0
aSunday db 'Sunday',0
db    0
byte_100122B8 db 53h
db  61h ; a
db  74h ; t
db    0
unk_100122BC db  46h ; F
db  72h ; r
db  69h ; i
db    0
unk_100122C0 db  54h ; T
db  68h ; h
db  75h ; u
db    0
unk_100122C4 db  57h ; W
db  65h ; e
db  64h ; d
db    0
unk_100122C8 db  54h ; T
db  75h ; u
db  65h ; e
db    0
unk_100122CC db  4Dh ; M
db  6Fh ; o
db  6Eh ; n
db    0
unk_100122D0 db  53h ; S
db  75h ; u
db  6Eh ; n
db    0
db    0
db    0
db    0
db    0
byte_100122D8 db 6
db  80h
db  80h
db  86h
db  80h
db  81h
db  80h
db    0
db    0
db  10h
db    3
db  86h
db  80h
db  86h
db  82h
db  80h
db  14h
db    5
db    5
db  45h ; E
db  45h ; E
db  45h ; E
db  85h
db  85h
db  85h
db    5
db    0
db    0
db  30h ; 0
db  30h ; 0
db  80h
db  50h ; P
db  80h
db  88h
db    0
db    8
db    0
db  28h ; (
db  27h ; '
db  38h ; 8
db  50h ; P
db  57h ; W
db  80h
db    0
db    7
db    0
db  37h ; 7
db  30h ; 0
db  30h ; 0
db  50h ; P
db  50h ; P
db  88h
db    0
db    0
db    0
db  20h
db  28h ; (
db  80h
db  88h
db  80h
db  80h
db    0
db    0
db    0
db  60h ; `
db  68h ; h
db  60h ; `
db  68h ; h
db  68h ; h
db  68h ; h
db    8
db    8
db    7
db  78h ; x
db  70h ; p
db  70h ; p
db  77h ; w
db  70h ; p
db  70h ; p
db    8
db    8
db    0
db    0
db    8
db    0
db    8
db    0
db    7
db    8
db    0
db    0
db    0
; const CHAR aGetprocesswind[]
aGetprocesswind db 'GetProcessWindowStation',0
; const CHAR aGetuserobjecti[]
aGetuserobjecti db 'GetUserObjectInformationA',0
align 4
; const CHAR aGetlastactivep[]
aGetlastactivep db 'GetLastActivePopup',0
align 4
; const CHAR aGetactivewindo[]
aGetactivewindo db 'GetActiveWindow',0
; const CHAR aMessageboxa[]
aMessageboxa db 'MessageBoxA',0
; const CHAR LibFileName[]
LibFileName db 'USER32.DLL',0
align 4
aSunmontuewedth db 'SunMonTueWedThuFriSat',0
align 4
aJanfebmaraprma db 'JanFebMarAprMayJunJulAugSepOctNovDe'
db 'c',0
align 4
; const CHAR FileName[]
FileName db 'CONOUT$',0
dd offset unk_100127E8
off_100123F0 dd offset sub_1000F486
dd offset unknown_libname_2 ; Microsoft VisualC 2-14/net runtime
; const char aStringTooLong[]
aStringTooLong db 'string too long',0
; const char aInvalidStringP[]
aInvalidStringP db 'invalid string position',0
__load_config_used dd 48h ; Size
dd 0                    ; Time stamp
dw 2 dup(0)             ; Version: 0.0
dd 0                    ; GlobalFlagsClear
dd 0                    ; GlobalFlagsSet
dd 0                    ; CriticalSectionDefaultTimeout
dd 0                    ; DeCommitFreeBlockThreshold
dd 0                    ; DeCommitTotalFreeThreshold
dd 0                    ; LockPrefixTable
dd 0                    ; MaximumAllocationSize
dd 0                    ; VirtualMemoryThreshold
dd 0                    ; ProcessHeapFlags
dd 0                    ; ProcessAffinityMask
dw 0                    ; CSDVersion
dw 0                    ; Reserved1
dd 0                    ; EditList
dd offset ___security_cookie ; SecurityCookie
dd offset ___safe_se_handler_table ; SEHandlerTable
dd 16h                  ; SEHandlerCount
unk_10012468 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset off_1001445C
dd offset unk_1001247C
unk_1001247C db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
dd offset off_1001248C
off_1001248C dd offset off_10012498
dd offset off_100124B4
align 8
off_10012498 dd offset off_1001445C
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
dd offset unk_1001247C
off_100124B4 dd offset off_10014478
align 10h
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
dd offset unk_100124D0
unk_100124D0 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
dd offset off_100124E0
off_100124E0 dd offset off_100124B4
align 8
unk_100124E8 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset off_10014494
dd offset unk_100124FC
unk_100124FC db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
dd offset off_1001250C
off_1001250C dd offset off_10012518
dd offset off_100124B4
align 8
off_10012518 dd offset off_10014494
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
dd offset unk_100124FC
unk_10012534 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset off_100144B4
dd offset unk_10012548
unk_10012548 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    3
db    0
db    0
db    0
dd offset off_10012558
off_10012558 dd offset off_10012568
dd offset off_10012518
dd offset off_100124B4
align 8
off_10012568 dd offset off_100144B4
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
dd offset unk_10012548
unk_10012584 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset off_100144D4
dd offset unk_10012598
unk_10012598 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
dd offset off_100125A8
off_100125A8 dd offset off_100125B0
align 10h
off_100125B0 dd offset off_100144D4
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
dd offset unk_10012598
unk_100125CC db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset off_100144F4
dd offset unk_100125E0
unk_100125E0 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
dd offset off_100125F0
off_100125F0 dd offset off_100125F8
align 8
off_100125F8 dd offset off_100144F4
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
dd offset unk_100125E0
unk_10012614 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset off_10014520
dd offset unk_10012628
unk_10012628 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
dd offset off_10012638
off_10012638 dd offset off_10012644
dd offset off_100125F8
db    0
db    0
db    0
db    0
off_10012644 dd offset off_10014520
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
dd offset unk_10012628
unk_10012660 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset off_10014550
dd offset unk_10012674
unk_10012674 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
dd offset off_10012684
off_10012684 dd offset off_1001268C
db    0
db    0
db    0
db    0
off_1001268C dd offset off_10014550
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
dd offset unk_10012674
unk_100126A8 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset off_10014574
dd offset unk_100126BC
unk_100126BC db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
dd offset off_100126CC
off_100126CC dd offset off_100126D8
dd offset off_1001268C
align 8
off_100126D8 dd offset off_10014574
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
dd offset unk_100126BC
unk_100126F4 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset off_10014598
dd offset unk_10012708
unk_10012708 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
dd offset off_10012718
off_10012718 dd offset off_10012724
dd offset off_100124B4
db    0
db    0
db    0
db    0
off_10012724 dd offset off_10014598
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
dd offset unk_10012708
unk_10012740 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset off_10014478
dd offset unk_100124D0
unk_10012754 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset off_10020888
dd offset unk_10012768
unk_10012768 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
dd offset off_10012778
off_10012778 dd offset off_10012780
align 10h
off_10012780 dd offset off_10020888
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
dd offset unk_10012768
unk_1001279C db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset off_10020A30
dd offset unk_100127B0
unk_100127B0 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
dd offset off_100127C0
off_100127C0 dd offset off_100127CC
dd offset off_100124B4
db    0
db    0
db    0
db    0
off_100127CC dd offset off_10020A30
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
dd offset unk_100127B0
unk_100127E8 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset off_100217B4
dd offset unk_100127FC
unk_100127FC db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    3
db    0
db    0
db    0
dd offset off_1001280C
off_1001280C dd offset off_1001281C
dd offset off_10012518
dd offset off_100124B4
db    0
db    0
db    0
db    0
off_1001281C dd offset off_100217B4
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  40h ; @
db    0
db    0
db    0
dd offset unk_100127FC
align 10h
___safe_se_handler_table dd rva ?CatchGuardHandler@@YA?AW4_EXCEPTION_DISPOSITION@@PAUEHExceptionRecord@@PAUCatchGuardRN@@PAX2@Z ; CatchGuardHandler(EHExceptionRecord *,CatchGuardRN *,void *,void *)
dd rva ?TranslatorGuardHandler@@YA?AW4_EXCEPTION_DISPOSITION@@PAUEHExceptionRecord@@PAUTranslatorGuardRN@@PAX2@Z ; TranslatorGuardHandler(EHExceptionRecord *,TranslatorGuardRN *,void *,void *)
dd rva SEH_1000DFE0
dd rva __unwind_handler4
dd rva __unwind_handler
dd rva loc_1000F540
dd rva loc_1000F55B
dd rva loc_1000F57E
dd rva loc_1000F5A1
dd rva loc_1000F5C4
dd rva loc_1000F5F8
dd rva loc_1000F646
dd rva loc_1000F68F
dd rva loc_1000F6F0
dd rva loc_1000F72B
dd rva loc_1000F758
dd rva loc_1000F786
dd rva loc_1000F7A9
dd rva loc_1000F7CC
dd rva loc_1000F7EF
dd rva loc_1000F82D
dd rva loc_1000F855
db    0
db    0
db    0
db    0
unk_1001289C db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_100128A4 db    0
db    0
db    0
db    0
; const _ThrowInfo pThrowInfo
pThrowInfo _ThrowInfo <0, offset sub_10001732, 0, \
            offset unk_100128B8>
unk_100128B8 db    2
db    0
db    0
db    0
dd offset unk_100128C4
dd offset unk_100128E0
unk_100128C4 db    0
db    0
db    0
db    0
dd offset off_1001445C
align 10h
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  0Ch
db    0
db    0
db    0
dd offset sub_1000194D
unk_100128E0 db    0
db    0
db    0
db    0
dd offset off_10014478
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  0Ch
db    0
db    0
db    0
dd offset ??0exception@std@@QAE@ABV01@@Z ; std::exception::exception(std::exception const &)
stru_100128FC HandlerType <40h, 0, 0, \
             offset __catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z$0>
stru_1001290C HandlerType <40h, 0, 0, \
             offset __catch$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z$1>
stru_1001291C UnwindMapEntry <-1, 0>
UnwindMapEntry <-1, 0>
UnwindMapEntry <1, 0>
UnwindMapEntry <1, 0>
stru_1001293C FuncInfo <19930522h, 0, 4, \
          offset stru_1001291C, 2, \
          offset stru_10012960, 0, 0, 0,\
          1>
stru_10012960 TryBlockMapEntry <2, 2, 3, 1, \
                  offset stru_1001290C>
TryBlockMapEntry <0, 0, 3, 1, \
                  offset stru_100128FC>
stru_10012988 HandlerType <40h, 0, 0, \
             offset __catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXII@Z$0>
stru_10012998 HandlerType <40h, 0, 0, \
             offset __catch$?_Copy@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXII@Z$1>
stru_100129A8 UnwindMapEntry <-1, 0>
UnwindMapEntry <-1, 0>
UnwindMapEntry <1, 0>
UnwindMapEntry <1, 0>
stru_100129C8 FuncInfo <19930522h, 0, 4, \
          offset stru_100129A8, 2, \
          offset stru_100129EC, 0, 0, 0,\
          1>
stru_100129EC TryBlockMapEntry <2, 2, 3, 1, \
                  offset stru_10012998>
TryBlockMapEntry <0, 0, 3, 1, \
                  offset stru_10012988>
stru_10012A14 UnwindMapEntry <-1, offset loc_1000F576>
stru_10012A1C FuncInfo <19930522h, 0, 1, \
          offset stru_10012A14, 0, 0, 0,\
          0, 0, 1>
stru_10012A40 UnwindMapEntry <-1, offset loc_1000F599>
stru_10012A48 FuncInfo <19930522h, 0, 1, \
          offset stru_10012A40, 0, 0, 0,\
          0, 0, 1>
; const _ThrowInfo stru_10012A6C
stru_10012A6C _ThrowInfo <0, offset sub_1000225C, 0, \
            offset unk_10012AA8>
stru_10012A7C UnwindMapEntry <-1, offset loc_1000F5BC>
stru_10012A84 FuncInfo <19930522h, 0, 1, \
          offset stru_10012A7C, 0, 0, 0,\
          0, 0, 1>
unk_10012AA8 db    3
db    0
db    0
db    0
dd offset unk_10012AB8
dd offset unk_10012AD4
dd offset unk_100128E0
unk_10012AB8 db    0
db    0
db    0
db    0
dd offset off_100144B4
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  28h ; (
db    0
db    0
db    0
dd offset sub_10002378
unk_10012AD4 db    0
db    0
db    0
db    0
dd offset off_10014494
align 10h
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  28h ; (
db    0
db    0
db    0
dd offset sub_1000233E
stru_10012AF0 UnwindMapEntry <-1, offset loc_1000F5DF>
stru_10012AF8 FuncInfo <19930522h, 0, 1, \
          offset stru_10012AF0, 0, 0, 0,\
          0, 0, 1>
stru_10012B1C UnwindMapEntry <-1, offset loc_1000F61D>
UnwindMapEntry <0, offset loc_1000F636>
UnwindMapEntry <1, offset loc_1000F63E>
stru_10012B34 FuncInfo <19930522h, 0, 3, \
          offset stru_10012B1C, 0, 0, 0,\
          0, 0, 1>
stru_10012B58 UnwindMapEntry <-1, offset loc_1000F66E>
UnwindMapEntry <0, offset loc_1000F687>
stru_10012B68 FuncInfo <19930522h, 0, 2, \
          offset stru_10012B58, 0, 0, 0,\
          0, 0, 1>
stru_10012B8C FuncInfo <19930522h, 0, 6, \
          offset stru_10012BB0, 0, 0, 0,\
          0, 0, 1>
stru_10012BB0 UnwindMapEntry <-1, offset loc_1000F6B7>
UnwindMapEntry <0, offset loc_1000F6D0>
UnwindMapEntry <1, offset loc_1000F6D8>
UnwindMapEntry <0, offset loc_1000F6D8>
UnwindMapEntry <3, offset loc_1000F6E0>
UnwindMapEntry <3, offset loc_1000F6E8>
stru_10012BE0 HandlerType <40h, 0, 0, \
             offset loc_100038CA>
stru_10012BF0 TryBlockMapEntry <2, 2, 3, 1, \
                  offset stru_10012BE0>
stru_10012C04 UnwindMapEntry <-1, offset loc_1000F718>
UnwindMapEntry <0, offset loc_1000F720>
UnwindMapEntry <1, 0>
UnwindMapEntry <1, 0>
stru_10012C24 FuncInfo <19930522h, 0, 4, \
          offset stru_10012C04, 1, \
          offset stru_10012BF0, 0, 0, 0,\
          1>
; const _ThrowInfo stru_10012C48
stru_10012C48 _ThrowInfo <0, offset sub_10003901, 0, \
            offset unk_10012C84>
stru_10012C58 UnwindMapEntry <-1, offset loc_1000F750>
stru_10012C60 FuncInfo <19930522h, 0, 1, \
          offset stru_10012C58, 0, 0, 0,\
          0, 0, 1>
unk_10012C84 db    2
db    0
db    0
db    0
dd offset unk_10012C90
dd offset unk_100128E0
unk_10012C90 db    0
db    0
db    0
db    0
dd offset off_10014598
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  28h ; (
db    0
db    0
db    0
dd offset sub_100039BF
stru_10012CAC HandlerType <40h, 0, 0, \
             offset loc_100039F7>
stru_10012CBC TryBlockMapEntry <2, 2, 3, 1, \
                  offset stru_10012CAC>
stru_10012CD0 UnwindMapEntry <-1, offset loc_1000F773>
UnwindMapEntry <0, offset loc_1000F77B>
UnwindMapEntry <1, 0>
UnwindMapEntry <1, 0>
stru_10012CF0 FuncInfo <19930522h, 0, 4, \
          offset stru_10012CD0, 1, \
          offset stru_10012CBC, 0, 0, 0,\
          1>
stru_10012D14 UnwindMapEntry <-1, offset loc_1000F7A1>
stru_10012D1C FuncInfo <19930522h, 0, 1, \
          offset stru_10012D14, 0, 0, 0,\
          0, 0, 1>
stru_10012D40 UnwindMapEntry <-1, offset loc_1000F7C4>
stru_10012D48 FuncInfo <19930522h, 0, 1, \
          offset stru_10012D40, 0, 0, 0,\
          0, 0, 1>
stru_10012D6C UnwindMapEntry <-1, offset loc_1000F7E7>
stru_10012D74 FuncInfo <19930522h, 0, 1, \
          offset stru_10012D6C, 0, 0, 0,\
          0, 0, 1>
stru_10012D98 FuncInfo <19930522h, 0, 5, \
          offset stru_10012DBC, 0, 0, 0,\
          0, 0, 1>
stru_10012DBC UnwindMapEntry <-1, offset loc_1000F80A>
UnwindMapEntry <0, offset loc_1000F812>
UnwindMapEntry <-1, offset loc_1000F812>
UnwindMapEntry <2, offset loc_1000F81A>
UnwindMapEntry <3, offset loc_1000F825>
align 8
stru_10012DE8 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD4h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_1000527B>>
align 8
stru_10012E08 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD4h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_10005586>>
align 8
stru_10012E28 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD4h, 0, <\
                 0FFFFFFFEh, \
                 offset loc_100057AB, \
                 offset loc_100057BC>>
align 8
stru_10012E48 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD4h, 0, <\
                 0FFFFFFFEh, \
                 offset loc_10005A85, \
                 offset loc_10005AA1>>
align 8
stru_10012E68 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD4h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_1000624B>>
align 8
stru_10012E88 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD4h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_10006385>>
align 8
stru_10012EA8 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD4h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_10006603>, <\
                 0FFFFFFFEh, 0, \
                 offset loc_10006612>>
stru_10012ED0 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD8h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_100067C5>, <\
                 0FFFFFFFEh, 0, \
                 offset loc_100067D1>>
stru_10012EF8 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD0h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_10006B90>, <\
                 0, offset loc_10006B52,\
                 offset loc_10006B5C>>
stru_10012F20 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD8h, 0, <\
                 0FFFFFFFEh, \
                 offset loc_10006C39, \
                 offset loc_10006C42>>
stru_10012F3C HandlerType <40h, 0, 0, \
             offset __catch$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z$0>
stru_10012F4C UnwindMapEntry <-1, 0>
UnwindMapEntry <-1, 0>
stru_10012F5C TryBlockMapEntry <0, 0, 1, 1, \
                  offset stru_10012F3C>
stru_10012F70 FuncInfo <19930522h, 0, 2, \
          offset stru_10012F4C, 1, \
          offset stru_10012F5C, 0, 0, 0,\
          1>
db    0
db    0
db    0
db    0
stru_10012F98 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFB4h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_10006E58>, <\
                 0, offset loc_10006DC8,\
                 offset loc_10006DD1>>
stru_10012FC0 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD4h, 0, <\
                 0FFFFFFFEh, \
                 offset loc_1000703F, \
                 offset loc_10007043>>
align 10h
stru_10012FE0 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD8h, 0, <\
                 0FFFFFFFEh, \
                 offset loc_100070D8, \
                 offset loc_100070DC>>
; const _ThrowInfo stru_10012FFC
stru_10012FFC _ThrowInfo <0, offset sub_100069F6, 0, \
            offset unk_1001300C>
unk_1001300C db    2
db    0
db    0
db    0
dd offset unk_10013018
dd offset unk_100128E0
unk_10013018 db    0
db    0
db    0
db    0
dd offset off_10020A30
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  0Ch
db    0
db    0
db    0
dd offset sub_1000758E
align 8
stru_10013038 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD8h, 0, <\
                 0FFFFFFFEh, \
                 offset loc_100076B1, \
                 offset loc_100076B5>>
align 8
stru_10013058 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD8h, 0, <\
                 0FFFFFFFEh, \
                 offset loc_10007701, \
                 offset loc_10007705>>
align 8
stru_10013078 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD4h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_10008736>>
align 8
stru_10013098 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFCCh, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_10008B04>>
align 8
stru_100130B8 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD4h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_10008E74>>
align 8
stru_100130D8 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD4h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_1000A446>>
align 8
stru_100130F8 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD0h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_1000B386>>
align 8
stru_10013118 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFC8h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_1000B61F>>
align 8
stru_10013138 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFF8Ch, 0, <\
                 0FFFFFFFEh, \
                 offset loc_1000B8E7, \
                 offset loc_1000B8EB>>
align 8
stru_10013158 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFCCh, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_1000C5B7>>
align 8
stru_10013178 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD0h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_1000CDC6>>
align 8
stru_10013198 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFC0h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_1000DCDD>>
align 8
stru_100131B8 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD0h, 0, <\
                 0FFFFFFFEh, \
                 offset loc_1000DF03, \
                 offset loc_1000DF1A>>
align 8
stru_100131D8 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD8h, 0, <\
                 0FFFFFFFEh, \
                 offset loc_1000E06B, \
                 offset loc_1000E07F>>
align 8
stru_100131F8 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD4h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_1000E194>>
align 8
stru_10013218 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD0h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_1000E2F9>>
align 8
stru_10013238 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD4h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_1000E629>>
align 8
stru_10013258 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD0h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_1000E7B9>>
align 8
stru_10013278 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFCCh, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_1000E943>, <\
                 0, 0, \
                 offset loc_1000E90F>>
stru_100132A0 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD4h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_1000F0A1>>
align 10h
stru_100132C0 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD0h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_1000F183>>
align 10h
stru_100132E0 _EH4_SCOPETABLE <0FFFFFFFEh, 0, \
                 0FFFFFFD0h, 0, <\
                 0FFFFFFFEh, 0, \
                 offset loc_1000F350>>
; const _ThrowInfo stru_100132FC
stru_100132FC _ThrowInfo <0, offset sub_1000F47B, 0, \
            offset unk_1001330C>
unk_1001330C db    3
db    0
db    0
db    0
dd offset unk_1001331C
dd offset unk_10012AD4
dd offset unk_100128E0
unk_1001331C db    0
db    0
db    0
db    0
dd offset off_100217B4
align 8
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db  28h ; (
db    0
db    0
db    0
dd offset sub_1000F51D
__IMPORT_DESCRIPTOR_KERNEL32 dd rva off_10013360 ; Import Name Table
dd 0                    ; Time stamp
dd 0                    ; Forwarder Chain
dd rva aKernel32Dll     ; DLL Name
dd rva MultiByteToWideChar ; Import Address Table
align 20h
;
; Import names for KERNEL32.dll
;
off_10013360 dd rva word_100134C8
dd rva word_100134DE
dd rva word_100134EA
dd rva word_100134FC
dd rva word_1001350C
dd rva word_1001351A
dd rva word_10013528
dd rva word_1001353E
dd rva word_10013556
dd rva word_1001356E
dd rva word_10013588
dd rva word_100135A0
dd rva word_100135B2
dd rva word_100135BE
dd rva word_100135CE
dd rva word_100135F6
dd rva word_10013610
dd rva word_10013624
dd rva word_1001363A
dd rva word_10013654
dd rva word_1001366A
dd rva word_10013678
dd rva word_10013686
dd rva word_10013692
dd rva word_100136A0
dd rva word_100136A8
dd rva word_100136B8
dd rva word_100136CE
dd rva word_100136EA
dd rva word_100136FE
dd rva word_1001370C
dd rva word_1001371E
dd rva word_10013732
dd rva word_10013742
dd rva word_10013750
dd rva word_1001375E
dd rva word_1001376E
dd rva word_1001377E
dd rva word_1001379E
dd rva word_100137B0
dd rva word_100137C4
dd rva word_100137E0
dd rva word_100137FE
dd rva word_10013812
dd rva word_1001381E
dd rva word_1001382A
dd rva word_10013840
dd rva word_10013852
dd rva word_10013866
dd rva word_10013874
dd rva word_10013880
dd rva word_1001388E
dd rva word_10013898
dd rva word_100138B0
dd rva word_100138C0
dd rva word_100138D8
dd rva word_100138E4
dd rva word_100138EE
dd rva word_100138FA
dd rva word_1001390C
dd rva word_1001391C
dd rva word_1001392C
dd rva word_1001393C
dd rva word_10013952
dd rva word_10013960
dd rva word_1001396E
dd rva word_1001397C
dd rva word_1001398C
dd rva word_1001399A
dd rva word_100139A6
dd rva word_100139B4
dd rva word_100139C6
dd rva word_100139D4
dd rva word_100139E6
dd rva word_10013A00
dd rva word_10013A18
dd rva word_10013A32
dd rva word_10013A4C
dd rva word_10013A66
dd rva word_10013A80
dd rva word_10013A90
dd rva word_10013AA2
dd rva word_10013AB4
dd rva word_10013AC6
dd rva word_10013AD8
dd rva word_10013AE8
dd rva word_10013AF8
dd rva word_10013B0E
dd rva word_10013B1E
dd 0
word_100134C8 dw 31Ah
db 'MultiByteToWideChar',0
word_100134DE dw 29Dh
db 'HeapAlloc',0
word_100134EA dw 223h
db 'GetProcessHeap',0
align 4
word_100134FC dw 1E6h
db 'GetLastError',0
align 4
word_1001350C dw 43h
db 'CloseHandle',0
word_1001351A dw 7Fh
db 'CreateFileW',0
word_10013528 dw 47Ah
db 'WideCharToMultiByte',0
word_1001353E dw 0BEh
db 'DeleteCriticalSection',0
word_10013556 dw 0D9h
db 'EnterCriticalSection',0
align 2
word_1001356E dw 439h
db 'TryEnterCriticalSection',0
word_10013588 dw 2EFh
db 'LeaveCriticalSection',0
align 10h
word_100135A0 dw 3DFh
db 'SetFilePointer',0
align 2
word_100135B2 dw 48Dh
db 'WriteFile',0
word_100135BE dw 1E7h
db 'GetLocalTime',0
align 2
word_100135CE dw 2B5h
db 'InitializeCriticalSectionAndSpinCou'
db 'nt',0
word_100135F6 dw 1C3h
db 'GetEnvironmentVariableW',0
word_10013610 dw 1F6h
db 'GetModuleHandleA',0
align 4
word_10013624 dw 1AAh
db 'GetCurrentProcessId',0
word_1001363A dw 1C2h
db 'GetEnvironmentVariableA',0
word_10013654 dw 214h
db 'GetOverlappedResult',0
word_1001366A dw 290h
db 'GlobalLock',0
align 4
word_10013678 dw 78h
db 'CreateFileA',0
word_10013686 dw 368h
db 'ReadFile',0
align 2
word_10013692 dw 28Ch
db 'GlobalFree',0
align 10h
word_100136A0 dw 421h
db 'Sleep',0
word_100136A8 dw 266h
db 'GetTickCount',0
align 4
word_100136B8 dw 464h
db 'WaitForSingleObject',0
word_100136CE dw 2B4h
db 'InitializeCriticalSection',0
word_100136EA dw 1ACh
db 'GetCurrentThread',0
align 2
word_100136FE dw 14Ch
db 'FreeLibrary',0
word_1001370C dw 220h
db 'GetProcAddress',0
align 2
word_1001371E dw 1A9h
db 'GetCurrentProcess',0
word_10013732 dw 2F1h
db 'LoadLibraryA',0
align 2
word_10013742 dw 285h
db 'GlobalAlloc',0
word_10013750 dw 274h
db 'GetVersion',0
align 2
word_1001375E dw 297h
db 'GlobalUnlock',0
align 2
word_1001376E dw 72h
db 'CreateEventA',0
align 2
word_1001377E dw 0CAh
db 'DeviceIoControl',0
aKernel32Dll db 'KERNEL32.dll',0
align 2
word_1001379E dw 35Ah
db 'RaiseException',0
align 10h
word_100137B0 dw 42Dh
db 'TerminateProcess',0
align 4
word_100137C4 dw 43Eh
db 'UnhandledExceptionFilter',0
align 10h
word_100137E0 dw 415h
db 'SetUnhandledExceptionFilter',0
word_100137FE dw 2D1h
db 'IsDebuggerPresent',0
word_10013812 dw 392h
db 'RtlUnwind',0
word_1001381E dw 2A1h
db 'HeapFree',0
align 2
word_1001382A dw 1ADh
db 'GetCurrentThreadId',0
align 10h
word_10013840 dw 16Fh
db 'GetCommandLineA',0
word_10013852 dw 1F9h
db 'GetModuleHandleW',0
align 2
word_10013866 dw 434h
db 'TlsGetValue',0
word_10013874 dw 432h
db 'TlsAlloc',0
align 10h
word_10013880 dw 435h
db 'TlsSetValue',0
word_1001388E dw 433h
db 'TlsFree',0
word_10013898 dw 2C0h
db 'InterlockedIncrement',0
align 10h
word_100138B0 dw 3ECh
db 'SetLastError',0
align 10h
word_100138C0 dw 2BCh
db 'InterlockedDecrement',0
align 4
word_100138D8 dw 15Bh
db 'GetCPInfo',0
word_100138E4 dw 152h
db 'GetACP',0
align 2
word_100138EE dw 213h
db 'GetOEMCP',0
align 2
word_100138FA dw 2DBh
db 'IsValidCodePage',0
word_1001390C dw 2E1h
db 'LCMapStringA',0
align 4
word_1001391C dw 2E3h
db 'LCMapStringW',0
align 4
word_1001392C dw 23Bh
db 'GetStdHandle',0
align 4
word_1001393C dw 1F4h
db 'GetModuleFileNameA',0
align 2
word_10013952 dw 29Fh
db 'HeapCreate',0
align 10h
word_10013960 dw 2A0h
db 'HeapDestroy',0
word_1001396E dw 457h
db 'VirtualFree',0
word_1001397C dw 454h
db 'VirtualAlloc',0
align 4
word_1001398C dw 2A4h
db 'HeapReAlloc',0
word_1001399A dw 2A6h
db 'HeapSize',0
align 2
word_100139A6 dw 104h
db 'ExitProcess',0
word_100139B4 dw 3E8h
db 'SetHandleCount',0
align 2
word_100139C6 dw 1D7h
db 'GetFileType',0
word_100139D4 dw 239h
db 'GetStartupInfoA',0
word_100139E6 dw 14Ah
db 'FreeEnvironmentStringsA',0
word_10013A00 dw 1BFh
db 'GetEnvironmentStrings',0
word_10013A18 dw 14Bh
db 'FreeEnvironmentStringsW',0
word_10013A32 dw 1C1h
db 'GetEnvironmentStringsW',0
align 4
word_10013A4C dw 354h
db 'QueryPerformanceCounter',0
word_10013A66 dw 24Fh
db 'GetSystemTimeAsFileTime',0
word_10013A80 dw 183h
db 'GetConsoleCP',0
align 10h
word_10013A90 dw 195h
db 'GetConsoleMode',0
align 2
word_10013AA2 dw 23Dh
db 'GetStringTypeA',0
align 4
word_10013AB4 dw 240h
db 'GetStringTypeW',0
align 2
word_10013AC6 dw 1E8h
db 'GetLocaleInfoA',0
align 4
word_10013AD8 dw 3FCh
db 'SetStdHandle',0
align 4
word_10013AE8 dw 482h
db 'WriteConsoleA',0
word_10013AF8 dw 199h
db 'GetConsoleOutputCP',0
align 2
word_10013B0E dw 48Ch
db 'WriteConsoleW',0
word_10013B1E dw 141h
db 'FlushFileBuffers',0
align 10h
;
; Export directory for dongle.dll
;
dd 0                    ; Characteristics
dd 4AD336E7h            ; TimeDateStamp: Mon Oct 12 14:02:15 2009
dw 0                    ; MajorVersion
dw 0                    ; MinorVersion
dd rva aDongleDll       ; Name
dd 1                    ; Base
dd 4                    ; NumberOfFunctions
dd 4                    ; NumberOfNames
dd rva off_10013B68     ; AddressOfFunctions
dd rva off_10013B78     ; AddressOfNames
dd rva word_10013B88    ; AddressOfNameOrdinals
;
; Export Address Table for dongle.dll
;
off_10013B68 dd rva GetHardwareKeyInfo, rva IsMigratedHardwareKey
dd rva IsSystemDriverInstalled, rva MigrateHardwareKey
;
; Export Names Table for dongle.dll
;
off_10013B78 dd rva aGethardwarekey, rva aIsmigratedhard ; "GetHardwareKeyInfo" "IsMigratedHardwareKey"
dd rva aIssystemdriver, rva aMigratehardwar ; "IsSystemDriverInstalled" "MigrateHardwareKey"
;
; Export Ordinals Table for dongle.dll
;
word_10013B88 dw 0, 1, 2, 3
aDongleDll db 'dongle.dll',0
aGethardwarekey db 'GetHardwareKeyInfo',0
aIsmigratedhard db 'IsMigratedHardwareKey',0
aIssystemdriver db 'IsSystemDriverInstalled',0
aMigratehardwar db 'MigrateHardwareKey',0
align 800h
_rdata ends

; Section 3. (virtual address 00014000)
; Virtual size                  : 0000F440 (  62528.)
; Section size in file          : 0000D800 (  55296.)
; Offset to raw data for section: 00012A00
; Flags C0000040: Data Readable Writable
; Alignment     : default

; Segment type: Pure data
; Segment permissions: Read/Write
_data segment para public 'DATA' use32
assume cs:_data
;org 10014000h
unk_10014000 db    0
db  3Ah ; :
db  32h ; 2
db  2Ah ; *
db  22h ; "
db  1Ah
db  12h
db  0Ah
db    2
db  3Ch ; <
db  34h ; 4
db  2Ch ; ,
db  24h ; $
db  1Ch
db  14h
db  0Ch
db    4
db  3Eh ; >
db  36h ; 6
db  2Eh ; .
db  26h ; &
db  1Eh
db  16h
db  0Eh
db    6
db  40h ; @
db  38h ; 8
db  30h ; 0
db  28h ; (
db  20h
db  18h
db  10h
db    8
db  39h ; 9
db  31h ; 1
db  29h ; )
db  21h ; !
db  19h
db  11h
db    9
db    1
db  3Bh ; ;
db  33h ; 3
db  2Bh ; +
db  23h ; #
db  1Bh
db  13h
db  0Bh
db    3
db  3Dh ; =
db  35h ; 5
db  2Dh ; -
db  25h ; %
db  1Dh
db  15h
db  0Dh
db    5
db  3Fh ; ?
db  37h ; 7
db  2Fh ; /
db  27h ; '
db  1Fh
db  17h
db  0Fh
db    7
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_10014048 db    0
db  28h ; (
db    8
db  30h ; 0
db  10h
db  38h ; 8
db  18h
db  40h ; @
db  20h
db  27h ; '
db    7
db  2Fh ; /
db  0Fh
db  37h ; 7
db  17h
db  3Fh ; ?
db  1Fh
db  26h ; &
db    6
db  2Eh ; .
db  0Eh
db  36h ; 6
db  16h
db  3Eh ; >
db  1Eh
db  25h ; %
db    5
db  2Dh ; -
db  0Dh
db  35h ; 5
db  15h
db  3Dh ; =
db  1Dh
db  24h ; $
db    4
db  2Ch ; ,
db  0Ch
db  34h ; 4
db  14h
db  3Ch ; <
db  1Ch
db  23h ; #
db    3
db  2Bh ; +
db  0Bh
db  33h ; 3
db  13h
db  3Bh ; ;
db  1Bh
db  22h ; "
db    2
db  2Ah ; *
db  0Ah
db  32h ; 2
db  12h
db  3Ah ; :
db  1Ah
db  21h ; !
db    1
db  29h ; )
db    9
db  31h ; 1
db  11h
db  39h ; 9
db  19h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_10014090 db    0
db  21h ; !
db  22h ; "
db  23h ; #
db  24h ; $
db  25h ; %
db  26h ; &
db  27h ; '
db  28h ; (
db  29h ; )
db  2Ah ; *
db  2Bh ; +
db  2Ch ; ,
db  2Dh ; -
db  2Eh ; .
db  2Fh ; /
db  30h ; 0
db  31h ; 1
db  32h ; 2
db  33h ; 3
db  34h ; 4
db  35h ; 5
db  36h ; 6
db  37h ; 7
db  38h ; 8
db  39h ; 9
db  3Ah ; :
db  3Bh ; ;
db  3Ch ; <
db  3Dh ; =
db  3Eh ; >
db  3Fh ; ?
db  40h ; @
db    1
db    2
db    3
db    4
db    5
db    6
db    7
db    8
db    9
db  0Ah
db  0Bh
db  0Ch
db  0Dh
db  0Eh
db  0Fh
db  10h
db  11h
db  12h
db  13h
db  14h
db  15h
db  16h
db  17h
db  18h
db  19h
db  1Ah
db  1Bh
db  1Ch
db  1Dh
db  1Eh
db  1Fh
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_100140D8 db    0
db  39h ; 9
db  31h ; 1
db  29h ; )
db  21h ; !
db  19h
db  11h
db    9
db    1
db  3Ah ; :
db  32h ; 2
db  2Ah ; *
db  22h ; "
db  1Ah
db  12h
db  0Ah
db    2
db  3Bh ; ;
db  33h ; 3
db  2Bh ; +
db  23h ; #
db  1Bh
db  13h
db  0Bh
db    3
db  3Ch ; <
db  34h ; 4
db  2Ch ; ,
db  24h ; $
db  3Fh ; ?
db  37h ; 7
db  2Fh ; /
db  27h ; '
db  1Fh
db  17h
db  0Fh
db    7
db  3Eh ; >
db  36h ; 6
db  2Eh ; .
db  26h ; &
db  1Eh
db  16h
db  0Eh
db    6
db  3Dh ; =
db  35h ; 5
db  2Dh ; -
db  25h ; %
db  1Dh
db  15h
db  0Dh
db    5
db  1Ch
db  14h
db  0Ch
db    4
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_10014120 db    0
db  0Eh
db  11h
db  0Bh
db  18h
db    1
db    5
db    3
db  1Ch
db  0Fh
db    6
db  15h
db  0Ah
db  17h
db  13h
db  0Ch
db    4
db  1Ah
db    8
db  10h
db    7
db  1Bh
db  14h
db  0Dh
db    2
db  29h ; )
db  34h ; 4
db  1Fh
db  25h ; %
db  2Fh ; /
db  37h ; 7
db  1Eh
db  28h ; (
db  33h ; 3
db  2Dh ; -
db  21h ; !
db  30h ; 0
db  2Ch ; ,
db  31h ; 1
db  27h ; '
db  38h ; 8
db  22h ; "
db  35h ; 5
db  2Eh ; .
db  2Ah ; *
db  32h ; 2
db  24h ; $
db  1Dh
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_10014168 db    0
db  20h
db    1
db    2
db    3
db    4
db    5
db    4
db    5
db    6
db    7
db    8
db    9
db    8
db    9
db  0Ah
db  0Bh
db  0Ch
db  0Dh
db  0Ch
db  0Dh
db  0Eh
db  0Fh
db  10h
db  11h
db  10h
db  11h
db  12h
db  13h
db  14h
db  15h
db  14h
db  15h
db  16h
db  17h
db  18h
db  19h
db  18h
db  19h
db  1Ah
db  1Bh
db  1Ch
db  1Dh
db  1Ch
db  1Dh
db  1Eh
db  1Fh
db  20h
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_100141B0 db    0
db  10h
db    7
db  14h
db  15h
db  1Dh
db  0Ch
db  1Ch
db  11h
db    1
db  0Fh
db  17h
db  1Ah
db    5
db  12h
db  1Fh
db  0Ah
db    2
db    8
db  18h
db  0Eh
db  20h
db  1Bh
db    3
db    9
db  13h
db  0Dh
db  1Eh
db    6
db  16h
db  0Bh
db    4
db  19h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_100141F8 db    0
db  0Eh
db    4
db  0Dh
db    1
db    2
db  0Fh
db  0Bh
db    8
db    3
db  0Ah
db    6
db  0Ch
db    5
db    9
db    0
db    7
db    0
db  0Fh
db    7
db    4
db  0Eh
db    2
db  0Dh
db    1
db  0Ah
db    6
db  0Ch
db  0Bh
db    9
db    5
db    3
db    8
db    4
db    1
db  0Eh
db    8
db  0Dh
db    6
db    2
db  0Bh
db  0Fh
db  0Ch
db    9
db    7
db    3
db  0Ah
db    5
db    0
db  0Fh
db  0Ch
db    8
db    2
db    4
db    9
db    1
db    7
db    5
db  0Bh
db    3
db  0Eh
db  0Ah
db    0
db    6
db  0Dh
db    0
db  0Eh
db    4
db  0Dh
db    1
db    2
db  0Fh
db  0Bh
db    8
db    3
db  0Ah
db    6
db  0Ch
db    5
db    9
db    0
db    7
db    0
db  0Fh
db    7
db    4
db  0Eh
db    2
db  0Dh
db    1
db  0Ah
db    6
db  0Ch
db  0Bh
db    9
db    5
db    3
db    8
db    4
db    1
db  0Eh
db    8
db  0Dh
db    6
db    2
db  0Bh
db  0Fh
db  0Ch
db    9
db    7
db    3
db  0Ah
db    5
db    0
db  0Fh
db  0Ch
db    8
db    2
db    4
db    9
db    1
db    7
db    5
db  0Bh
db    3
db  0Eh
db  0Ah
db    0
db    6
db  0Dh
db    0
db  0Fh
db    1
db    8
db  0Eh
db    6
db  0Bh
db    3
db    4
db    9
db    7
db    2
db  0Dh
db  0Ch
db    0
db    5
db  0Ah
db    3
db  0Dh
db    4
db    7
db  0Fh
db    2
db    8
db  0Eh
db  0Ch
db    0
db    1
db  0Ah
db    6
db    9
db  0Bh
db    5
db    0
db  0Eh
db    7
db  0Bh
db  0Ah
db    4
db  0Dh
db    1
db    5
db    8
db  0Ch
db    6
db    9
db    3
db    2
db  0Fh
db  0Dh
db    8
db  0Ah
db    1
db    3
db  0Fh
db    4
db    2
db  0Bh
db    6
db    7
db  0Ch
db    0
db    5
db  0Eh
db    9
db    0
db  0Ah
db    0
db    9
db  0Eh
db    6
db    3
db  0Fh
db    5
db    1
db  0Dh
db  0Ch
db    7
db  0Bh
db    4
db    2
db    8
db  0Dh
db    7
db    0
db    9
db    3
db    4
db    6
db  0Ah
db    2
db    8
db    5
db  0Eh
db  0Ch
db  0Bh
db  0Fh
db    1
db  0Dh
db    6
db    4
db    9
db    8
db  0Fh
db    3
db    0
db  0Bh
db    1
db    2
db  0Ch
db    5
db  0Ah
db  0Eh
db    7
db    1
db  0Ah
db  0Dh
db    0
db    6
db    9
db    8
db    7
db    4
db  0Fh
db  0Eh
db    3
db  0Bh
db    5
db    2
db  0Ch
db    0
db    7
db  0Dh
db  0Eh
db    3
db    0
db    6
db    9
db  0Ah
db    1
db    2
db    8
db    5
db  0Bh
db  0Ch
db    4
db  0Fh
db  0Dh
db    8
db  0Bh
db    5
db    6
db  0Fh
db    0
db    3
db    4
db    7
db    2
db  0Ch
db    1
db  0Ah
db  0Eh
db    9
db  0Ah
db    6
db    9
db    0
db  0Ch
db  0Bh
db    7
db  0Dh
db  0Fh
db    1
db    3
db  0Eh
db    5
db    2
db    8
db    4
db    3
db  0Fh
db    0
db    6
db  0Ah
db    1
db  0Dh
db    8
db    9
db    4
db    5
db  0Bh
db  0Ch
db    7
db    2
db  0Eh
db    0
db    2
db  0Ch
db    4
db    1
db    7
db  0Ah
db  0Bh
db    6
db    8
db    5
db    3
db  0Fh
db  0Dh
db    0
db  0Eh
db    9
db  0Eh
db  0Bh
db    2
db  0Ch
db    4
db    7
db  0Dh
db    1
db    5
db    0
db  0Fh
db  0Ah
db    3
db    9
db    8
db    6
db    4
db    2
db    1
db  0Bh
db  0Ah
db  0Dh
db    7
db    8
db  0Fh
db    9
db  0Ch
db    5
db    6
db    3
db    0
db  0Eh
db  0Bh
db    8
db  0Ch
db    7
db    1
db  0Eh
db    2
db  0Dh
db    6
db  0Fh
db    0
db    9
db  0Ah
db    4
db    5
db    3
db    0
db  0Ch
db    1
db  0Ah
db  0Fh
db    9
db    2
db    6
db    8
db    0
db  0Dh
db    3
db    4
db  0Eh
db    7
db    5
db  0Bh
db  0Ah
db  0Fh
db    4
db    2
db    7
db  0Ch
db    9
db    5
db    6
db    1
db  0Dh
db  0Eh
db    0
db  0Bh
db    3
db    8
db    9
db  0Eh
db  0Fh
db    5
db    2
db    8
db  0Ch
db    3
db    7
db    0
db    4
db  0Ah
db    1
db  0Dh
db  0Bh
db    6
db    4
db    3
db    2
db  0Ch
db    9
db    5
db  0Fh
db  0Ah
db  0Bh
db  0Eh
db    1
db    7
db    6
db    0
db    8
db  0Dh
db    0
db    4
db  0Bh
db    2
db  0Eh
db  0Fh
db    0
db    8
db  0Dh
db    3
db  0Ch
db    9
db    7
db    5
db  0Ah
db    6
db    1
db  0Dh
db    0
db  0Bh
db    7
db    4
db    9
db    1
db  0Ah
db  0Eh
db    3
db    5
db  0Ch
db    2
db  0Fh
db    8
db    6
db    1
db    4
db  0Bh
db  0Dh
db  0Ch
db    3
db    7
db  0Eh
db  0Ah
db  0Fh
db    6
db    8
db    0
db    5
db    9
db    2
db    6
db  0Bh
db  0Dh
db    8
db    1
db    4
db  0Ah
db    7
db    9
db    5
db    0
db  0Fh
db  0Eh
db    2
db    3
db  0Ch
db    0
db  0Dh
db    2
db    8
db    4
db    6
db  0Fh
db  0Bh
db    1
db  0Ah
db    9
db    3
db  0Eh
db    5
db    0
db  0Ch
db    7
db    1
db  0Fh
db  0Dh
db    8
db  0Ah
db    3
db    7
db    4
db  0Ch
db    5
db    6
db  0Bh
db    0
db  0Eh
db    9
db    2
db    7
db  0Bh
db    4
db    1
db    9
db  0Ch
db  0Eh
db    2
db    0
db    6
db  0Ah
db  0Dh
db  0Fh
db    3
db    5
db    8
db    2
db    1
db  0Eh
db    7
db    4
db  0Ah
db    8
db  0Dh
db  0Fh
db  0Ch
db    9
db    0
db    3
db    5
db    6
db  0Bh
db    0
db    0
db    0
byte_10014444 db 0
db    1
db    1
db    2
db    2
db    2
db    2
db    2
db    2
db    1
db    2
db    2
db    2
db    2
db    2
db    2
db    1
db    0
db    0
db    0
off_10014458 dd offset a0123456789abcd ; "0123456789ABCDEF"
off_1001445C dd offset off_10010A68
db    0
db    0
db    0
db    0
db  2Eh ; .
db  3Fh ; ?
db  41h ; A
db  56h ; V
db  62h ; b
db  61h ; a
db  64h ; d
db  5Fh ; _
db  61h ; a
db  6Ch ; l
db  6Ch ; l
db  6Fh ; o
db  63h ; c
db  40h ; @
db  73h ; s
db  74h ; t
db  64h ; d
db  40h ; @
db  40h ; @
db    0
off_10014478 dd offset off_10010A68
align 10h
aAvexceptionStd db '.?AVexception@std@@',0
off_10014494 dd offset off_10010A68
db    0
db    0
db    0
db    0
db  2Eh ; .
db  3Fh ; ?
db  41h ; A
db  56h ; V
db  6Ch ; l
db  6Fh ; o
db  67h ; g
db  69h ; i
db  63h ; c
db  5Fh ; _
db  65h ; e
db  72h ; r
db  72h ; r
db  6Fh ; o
db  72h ; r
db  40h ; @
db  73h ; s
db  74h ; t
db  64h ; d
db  40h ; @
db  40h ; @
db    0
db    0
db    0
off_100144B4 dd offset off_10010A68
db    0
db    0
db    0
db    0
db  2Eh ; .
db  3Fh ; ?
db  41h ; A
db  56h ; V
db  6Ch ; l
db  65h ; e
db  6Eh ; n
db  67h ; g
db  74h ; t
db  68h ; h
db  5Fh ; _
db  65h ; e
db  72h ; r
db  72h ; r
db  6Fh ; o
db  72h ; r
db  40h ; @
db  73h ; s
db  74h ; t
db  64h ; d
db  40h ; @
db  40h ; @
db    0
db    0
off_100144D4 dd offset off_10010A68
db    0
db    0
db    0
db    0
db  2Eh ; .
db  3Fh ; ?
db  41h ; A
db  56h ; V
db  43h ; C
db  48h ; H
db  57h ; W
db  4Bh ; K
db  45h ; E
db  6Eh ; n
db  63h ; c
db  6Fh ; o
db  64h ; d
db  65h ; e
db  72h ; r
db  40h ; @
db  40h ; @
db    0
db    0
db    0
dd offset aBadAllocation ; "bad allocation"
off_100144F4 dd offset off_10010A68
db    0
db    0
db    0
db    0
db  2Eh ; .
db  3Fh ; ?
db  41h ; A
db  56h ; V
db  49h ; I
db  43h ; C
db  72h ; r
db  69h ; i
db  74h ; t
db  69h ; i
db  63h ; c
db  61h ; a
db  6Ch ; l
db  53h ; S
db  65h ; e
db  63h ; c
db  74h ; t
db  69h ; i
db  6Fh ; o
db  6Eh ; n
db  40h ; @
db  74h ; t
db  69h ; i
db  73h ; s
db  32h ; 2
db  77h ; w
db  65h ; e
db  62h ; b
db  40h ; @
db  67h ; g
db  6Dh ; m
db  40h ; @
db  40h ; @
db    0
db    0
db    0
off_10014520 dd offset off_10010A68
align 8
aAvcbasiccritic db '.?AVCBasicCriticalSection@tis2web@g'
db 'm@@',0
align 10h
off_10014550 dd offset off_10010A68
align 8
aAviloggerTis2w db '.?AVILogger@tis2web@gm@@',0
align 4
off_10014574 dd offset off_10010A68
db    0
db    0
db    0
db    0
db  2Eh ; .
db  3Fh ; ?
db  41h ; A
db  56h ; V
db  43h ; C
db  4Ch ; L
db  6Fh ; o
db  67h ; g
db  67h ; g
db  65h ; e
db  72h ; r
db  40h ; @
db  74h ; t
db  69h ; i
db  73h ; s
db  32h ; 2
db  77h ; w
db  65h ; e
db  62h ; b
db  40h ; @
db  67h ; g
db  6Dh ; m
db  40h ; @
db  40h ; @
db    0
db    0
db    0
db    0
off_10014598 dd offset off_10010A68
align 10h
aAvexceptionTis db '.?AVexception@tis2web@gm@@',0
align 4
dd offset aBadAllocation ; "bad allocation"
unk_100145C0 db    0
db    0
db  29h ; )
db 0F9h
db    2
db    0
db    0
db    0
dd offset unk_1001E658
db    4
db    8
db    0
db    0
dd offset unk_1001F2D6
db 0D4h
db    0
db    0
db    0
db    2
db    0
db    0
db    0
dd offset unk_1001D376
db 0E6h
db  1Ah
db    0
db    0
dd offset loc_1001F236
db 0A4h
db    2
db    0
db    0
dd offset unk_100145C0
unk_100145F0 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset sub_1001C1B9
dd offset sub_1001C27A
dd offset unk_1001EB38
dd offset unk_1001E750
dd offset unk_1001ECC4
dd offset sub_1001C194
dd offset sub_1001BBE3
dd offset unk_1001DB8C
dd offset sub_1001C30B
dd offset sub_1001BC61
dd offset sub_1001C4F3
dd offset unk_1001E4B4
dd offset unk_1001EC06
dd offset unk_1001EC64
dd offset unk_1001EC33
dd offset unk_1001EBF3
dd offset sub_1001C479
dd offset unk_1001ED33
dd offset sub_1001BEE9
dd offset unk_1001E00A
dd offset sub_1001C2E4
dd offset unk_1001EDA6
dd offset unk_1001EE1D
dd offset unk_1001DEB9
dd offset sub_1001EE49
dd offset sub_1001F5F2
dd offset unk_1001C5CB
dd offset sub_1001C538
dd offset sub_1001C6DF
dd offset sub_1001C718
dd offset GetVersion
dd offset CreateFileA
dd offset DeviceIoControl
dd offset CloseHandle
dd offset GetEnvironmentVariableA
dd offset InitializeCriticalSection
dd offset EnterCriticalSection
dd offset LeaveCriticalSection
dd offset GetCurrentProcess
dd offset GetCurrentThread
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset Sleep
dd offset GetTickCount
align 10h
dd offset LoadLibraryA
dd offset FreeLibrary
dd offset GetProcAddress
dd offset GlobalAlloc
dd offset GlobalFree
dd offset GlobalLock
dd offset GlobalUnlock
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset GetLastError
dd offset ReadFile
dd offset WriteFile
dd offset CreateEventA
dd offset WaitForSingleObject
dd offset GetOverlappedResult
dd offset GetCurrentProcessId
dd offset unk_100189E1
dd offset sub_100189B3
dd offset unk_1001E96E
dd offset unk_1001C926
dd offset unk_1001C8F4
dd offset unk_10019DC1
dd offset unk_1001EA0A
dd offset unk_1001EA88
dd offset unk_1001EAE5
dd offset sub_1001CB92
db  6Bh ; k
db 0FCh
db  4Dh ; M
db  65h ; e
db  4Ch ; L
db  65h ; e
db  5Ah ; Z
db  6Ch ; l
db    0
db    0
db    0
db    1
db    0
db    3
db  80h
db  34h ; 4
db  67h ; g
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  63h ; c
db  2Bh ; +
db  8Bh
db  59h ; Y
db  42h ; B
db  95h
db  34h ; 4
db 0A4h
db 0F9h
db  12h
db  29h ; )
db 0B4h
db 0F0h
db  12h
db  23h ; #
db 0BAh
db 0D5h
db  12h
db  26h ; &
db 0B7h
db 0F7h
db  12h
db  2Fh ; /
db  86h
db 0F8h
db  12h
db  31h ; 1
db  9Eh
db 0E5h
db  12h
db    2
db  98h
db 0E8h
db  12h
db  33h ; 3
db  9Bh
db 0FDh
db  12h
db  0Ah
db  93h
db 0F2h
db  12h
db  40h ; @
db    0
db  5Dh ; ]
db 0DDh
db 0DAh
db  0Eh
db  20h
db  10h
db  28h ; (
db 0C7h
db 0E2h
db 0E5h
db 0E2h
db  8Ch
db 0A2h
db  71h ; q
db  49h ; I
db 0C3h
db  5Dh ; ]
db 0DDh
db 0DAh
db  0Eh
db  20h
db  10h
db  28h ; (
db 0C7h
db 0E2h
db 0E5h
db 0E2h
db  8Ch
db 0A2h
db  71h ; q
db  49h ; I
db 0C3h
db  5Dh ; ]
db 0DDh
db 0DAh
db  0Eh
db  20h
db  10h
db  28h ; (
db 0C7h
db 0E2h
db 0E5h
db 0E2h
db  8Ch
db 0A2h
db  71h ; q
db  49h ; I
db 0C3h
db  5Dh ; ]
db 0DDh
db 0DAh
db  0Eh
db  20h
db  10h
db  28h ; (
db 0C7h
db 0E2h
db 0E5h
db 0E2h
db  8Ch
db 0A2h
db  71h ; q
db  49h ; I
db 0C3h
db  5Dh ; ]
db 0DDh
db 0DAh
db  0Eh
db  20h
db  10h
db  28h ; (
db 0C7h
db 0E2h
db 0E5h
db 0E2h
db  8Ch
db 0A2h
db  71h ; q
db  49h ; I
db 0C3h
db  5Dh ; ]
db 0DDh
db 0DAh
db  0Eh
db  20h
db  10h
db  28h ; (
db 0C7h
db 0E2h
db 0E5h
db 0E2h
db  8Ch
db 0A2h
db  71h ; q
db  49h ; I
db 0C3h
db  5Dh ; ]
db 0DDh
db 0DAh
db  0Eh
db  20h
db  10h
db  28h ; (
db 0C7h
db 0E2h
db 0E5h
db 0E2h
db  8Ch
db 0A2h
db  71h ; q
db  49h ; I
db 0C3h
db  5Dh ; ]
db 0DDh
db 0DAh
db  0Eh
db  20h
db  10h
db  28h ; (
db 0C7h
db 0E2h
db 0E5h
db 0E2h
db  8Ch
db 0A2h
db  71h ; q
db  49h ; I
db 0C3h
db 0BAh
db 0E7h
db 0AAh
db 0BBh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    2
db    0
db    2
db    1
db    1
db    2
db    0
db    1
db    0
db    2
db    2
db    1
db    0
db    2
db    0
db    1
db    0
db    1
db    2
db    1
db    2
db    0
dd offset unk_1001B958
dd offset unk_1001B960
dd offset unk_1001B968
dd offset unk_1001B973
dd offset unk_1001B97E
dd offset unk_1001B989
dd offset unk_1001B993
dd offset unk_1001B99D
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  78h ; x
db    3
db    0
db    0
db  78h ; x
db    2
db    0
db    0
db 0BCh
db    3
db    0
db    0
db  78h ; x
db  30h ; 0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  0Ah
db    0
db    0
db    0
db  0Ah
db    0
db    0
db    0
db  14h
db    0
db    0
db    0
db  0Ah
db    0
db    0
db    0
db  0Ah
db    0
db    0
db    0
db  14h
db    0
db    0
db    0
db  49h ; I
db 0F0h
db  45h ; E
db  74h ; t
db 0D9h
db  76h ; v
db  91h
db    5
db  51h ; Q
db 0FBh
db  89h
db  3Fh ; ?
db    3
db  0Eh
db 0E9h
db 0E7h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  4Dh ; M
db  57h ; W
db  53h ; S
db  53h ; S
db  53h ; S
db  49h ; I
db  55h ; U
db  53h ; S
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  20h
db  40h ; @
db  60h ; `
db  80h
db 0A0h
db 0C0h
db 0E0h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0F8h
db    3
db 0F8h
db    2
db 0E8h
db    3
db 0E8h
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  43h ; C
db  4Fh ; O
db  4Dh ; M
db  31h ; 1
db  3Ah ; :
db    0
db    0
db    0
db    0
db    0
db    1
db    2
db    4
db    4
db    2
db    2
db    2
db    2
db    2
db    2
db    4
db    4
db    4
db    4
db    4
db  0Fh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  53h ; S
db  53h ; S
db  49h ; I
db  50h ; P
db  43h ; C
db  57h ; W
db  53h ; S
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  53h ; S
db  53h ; S
db  49h ; I
db  50h ; P
db  43h ; C
db  4Eh ; N
db  45h ; E
db  54h ; T
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  53h ; S
db  53h ; S
db  49h ; I
db  50h ; P
db  43h ; C
db  4Eh ; N
db  45h ; E
db  54h ; T
db  53h ; S
db  45h ; E
db  43h ; C
db  55h ; U
db  52h ; R
db  49h ; I
db  54h ; T
db  59h ; Y
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    3
db    1
db 0AFh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  57h ; W
db  53h ; S
db  4Fh ; O
db  43h ; C
db  4Bh ; K
db  33h ; 3
db  32h ; 2
db  2Eh ; .
db  44h ; D
db  4Ch ; L
db  4Ch ; L
db    0
db  57h ; W
db  53h ; S
db  41h ; A
db  53h ; S
db  74h ; t
db  61h ; a
db  72h ; r
db  74h ; t
db  75h ; u
db  70h ; p
db    0
db  57h ; W
db  53h ; S
db  41h ; A
db  43h ; C
db  6Ch ; l
db  65h ; e
db  61h ; a
db  6Eh ; n
db  75h ; u
db  70h ; p
db    0
db  57h ; W
db  53h ; S
db  41h ; A
db  47h ; G
db  65h ; e
db  74h ; t
db  4Ch ; L
db  61h ; a
db  73h ; s
db  74h ; t
db  45h ; E
db  72h ; r
db  72h ; r
db  6Fh ; o
db  72h ; r
db    0
db  62h ; b
db  69h ; i
db  6Eh ; n
db  64h ; d
db    0
db  63h ; c
db  6Ch ; l
db  6Fh ; o
db  73h ; s
db  65h ; e
db  73h ; s
db  6Fh ; o
db  63h ; c
db  6Bh ; k
db  65h ; e
db  74h ; t
db    0
db  67h ; g
db  65h ; e
db  74h ; t
db  73h ; s
db  6Fh ; o
db  63h ; c
db  6Bh ; k
db  6Eh ; n
db  61h ; a
db  6Dh ; m
db  65h ; e
db    0
db  67h ; g
db  65h ; e
db  74h ; t
db  73h ; s
db  6Fh ; o
db  63h ; c
db  6Bh ; k
db  6Fh ; o
db  70h ; p
db  74h ; t
db    0
db  69h ; i
db  6Fh ; o
db  63h ; c
db  74h ; t
db  6Ch ; l
db  73h ; s
db  6Fh ; o
db  63h ; c
db  6Bh ; k
db  65h ; e
db  74h ; t
db    0
db  72h ; r
db  65h ; e
db  63h ; c
db  76h ; v
db  66h ; f
db  72h ; r
db  6Fh ; o
db  6Dh ; m
db    0
db  73h ; s
db  65h ; e
db  6Ch ; l
db  65h ; e
db  63h ; c
db  74h ; t
db    0
db  73h ; s
db  65h ; e
db  6Eh ; n
db  64h ; d
db  74h ; t
db  6Fh ; o
db    0
db  73h ; s
db  65h ; e
db  74h ; t
db  73h ; s
db  6Fh ; o
db  63h ; c
db  6Bh ; k
db  6Fh ; o
db  70h ; p
db  74h ; t
db    0
db  73h ; s
db  6Fh ; o
db  63h ; c
db  6Bh ; k
db  65h ; e
db  74h ; t
db    0
db    0
db  55h ; U
db  4Eh ; N
db  4Eh ; N
db  45h ; E
db  54h ; T
db  33h ; 3
db  32h ; 2
db  2Eh ; .
db  44h ; D
db  4Ch ; L
db  4Ch ; L
db    0
db  43h ; C
db  61h ; a
db  6Ch ; l
db  6Ch ; l
db  4Eh ; N
db  65h ; e
db  74h ; t
db  42h ; B
db  49h ; I
db  4Fh ; O
db  53h ; S
db    0
db  41h ; A
db  6Ch ; l
db  6Ch ; l
db  6Fh ; o
db  63h ; c
db  44h ; D
db  6Fh ; o
db  73h ; s
db  4Dh ; M
db  65h ; e
db  6Dh ; m
db  6Fh ; o
db  72h ; r
db  79h ; y
db    0
db  46h ; F
db  72h ; r
db  65h ; e
db  65h ; e
db  44h ; D
db  6Fh ; o
db  73h ; s
db  4Dh ; M
db  65h ; e
db  6Dh ; m
db  6Fh ; o
db  72h ; r
db  79h ; y
db    0
db  49h ; I
db  50h ; P
db  58h ; X
db  43h ; C
db  68h ; h
db  65h ; e
db  63h ; c
db  6Bh ; k
db  50h ; P
db  72h ; r
db  65h ; e
db  73h ; s
db  65h ; e
db  6Eh ; n
db  63h ; c
db  65h ; e
db    0
db  49h ; I
db  50h ; P
db  58h ; X
db  4Fh ; O
db  70h ; p
db  65h ; e
db  6Eh ; n
db  53h ; S
db  6Fh ; o
db  63h ; c
db  6Bh ; k
db  65h ; e
db  74h ; t
db    0
db  49h ; I
db  50h ; P
db  58h ; X
db  43h ; C
db  6Ch ; l
db  6Fh ; o
db  73h ; s
db  65h ; e
db  53h ; S
db  6Fh ; o
db  63h ; c
db  6Bh ; k
db  65h ; e
db  74h ; t
db    0
db  49h ; I
db  50h ; P
db  58h ; X
db  47h ; G
db  65h ; e
db  74h ; t
db  4Ch ; L
db  6Fh ; o
db  63h ; c
db  61h ; a
db  6Ch ; l
db  54h ; T
db  61h ; a
db  72h ; r
db  67h ; g
db  65h ; e
db  74h ; t
db    0
db  49h ; I
db  50h ; P
db  58h ; X
db  53h ; S
db  65h ; e
db  6Eh ; n
db  64h ; d
db    0
db  49h ; I
db  50h ; P
db  58h ; X
db  4Ch ; L
db  69h ; i
db  73h ; s
db  74h ; t
db  65h ; e
db  6Eh ; n
db    0
db  49h ; I
db  50h ; P
db  58h ; X
db  43h ; C
db  61h ; a
db  6Eh ; n
db  63h ; c
db  65h ; e
db  6Ch ; l
db    0
db  49h ; I
db  50h ; P
db  58h ; X
db  47h ; G
db  65h ; e
db  74h ; t
db  49h ; I
db  6Eh ; n
db  74h ; t
db  65h ; e
db  72h ; r
db  6Eh ; n
db  65h ; e
db  74h ; t
db  41h ; A
db  64h ; d
db  64h ; d
db  72h ; r
db    0
db  49h ; I
db  50h ; P
db  58h ; X
db  59h ; Y
db  69h ; i
db  65h ; e
db  6Ch ; l
db  64h ; d
db    0
db    0
db    0
db    0
db  4Eh ; N
db  45h ; E
db  54h ; T
db  41h ; A
db  50h ; P
db  49h ; I
db  33h ; 3
db  32h ; 2
db  2Eh ; .
db  44h ; D
db  4Ch ; L
db  4Ch ; L
db    0
db  4Eh ; N
db  65h ; e
db  74h ; t
db  62h ; b
db  69h ; i
db  6Fh ; o
db  73h ; s
db    0
db    0
db    0
db    0
db  4Bh ; K
db  45h ; E
db  52h ; R
db  4Eh ; N
db  45h ; E
db  4Ch ; L
db  33h ; 3
db  32h ; 2
db  2Eh ; .
db  44h ; D
db  4Ch ; L
db  4Ch ; L
db    0
db  47h ; G
db  65h ; e
db  74h ; t
db  50h ; P
db  72h ; r
db  69h ; i
db  6Fh ; o
db  72h ; r
db  69h ; i
db  74h ; t
db  79h ; y
db  43h ; C
db  6Ch ; l
db  61h ; a
db  73h ; s
db  73h ; s
db    0
db  53h ; S
db  65h ; e
db  74h ; t
db  50h ; P
db  72h ; r
db  69h ; i
db  6Fh ; o
db  72h ; r
db  69h ; i
db  74h ; t
db  79h ; y
db  43h ; C
db  6Ch ; l
db  61h ; a
db  73h ; s
db  73h ; s
db    0
db  47h ; G
db  65h ; e
db  74h ; t
db  54h ; T
db  68h ; h
db  72h ; r
db  65h ; e
db  61h ; a
db  64h ; d
db  50h ; P
db  72h ; r
db  69h ; i
db  6Fh ; o
db  72h ; r
db  69h ; i
db  74h ; t
db  79h ; y
db    0
db  53h ; S
db  65h ; e
db  74h ; t
db  54h ; T
db  68h ; h
db  72h ; r
db  65h ; e
db  61h ; a
db  64h ; d
db  50h ; P
db  72h ; r
db  69h ; i
db  6Fh ; o
db  72h ; r
db  69h ; i
db  74h ; t
db  79h ; y
db    0
db  49h ; I
db  73h ; s
db  42h ; B
db  61h ; a
db  64h ; d
db  52h ; R
db  65h ; e
db  61h ; a
db  64h ; d
db  50h ; P
db  74h ; t
db  72h ; r
db    0
db  49h ; I
db  73h ; s
db  42h ; B
db  61h ; a
db  64h ; d
db  57h ; W
db  72h ; r
db  69h ; i
db  74h ; t
db  65h ; e
db  50h ; P
db  74h ; t
db  72h ; r
db    0
db    0
db    0
db  4Bh ; K
db  45h ; E
db  52h ; R
db  4Eh ; N
db  45h ; E
db  4Ch ; L
db  33h ; 3
db  32h ; 2
db  2Eh ; .
db  44h ; D
db  4Ch ; L
db  4Ch ; L
db    0
db  45h ; E
db  73h ; s
db  63h ; c
db  61h ; a
db  70h ; p
db  65h ; e
db  43h ; C
db  6Fh ; o
db  6Dh ; m
db  6Dh ; m
db  46h ; F
db  75h ; u
db  6Eh ; n
db  63h ; c
db  74h ; t
db  69h ; i
db  6Fh ; o
db  6Eh ; n
db    0
db  47h ; G
db  65h ; e
db  74h ; t
db  43h ; C
db  6Fh ; o
db  6Dh ; m
db  6Dh ; m
db  53h ; S
db  74h ; t
db  61h ; a
db  74h ; t
db  65h ; e
db    0
db  50h ; P
db  75h ; u
db  72h ; r
db  67h ; g
db  65h ; e
db  43h ; C
db  6Fh ; o
db  6Dh ; m
db  6Dh ; m
db    0
db  53h ; S
db  65h ; e
db  74h ; t
db  43h ; C
db  6Fh ; o
db  6Dh ; m
db  6Dh ; m
db  53h ; S
db  74h ; t
db  61h ; a
db  74h ; t
db  65h ; e
db    0
db  53h ; S
db  65h ; e
db  74h ; t
db  43h ; C
db  6Fh ; o
db  6Dh ; m
db  6Dh ; m
db  54h ; T
db  69h ; i
db  6Dh ; m
db  65h ; e
db  6Fh ; o
db  75h ; u
db  74h ; t
db  73h ; s
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    4
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  4Bh ; K
db  45h ; E
db  52h ; R
db  4Eh ; N
db  45h ; E
db  4Ch ; L
db  33h ; 3
db  32h ; 2
db  2Eh ; .
db  44h ; D
db  4Ch ; L
db  4Ch ; L
db    0
db    0
db    0
db    0
db  42h ; B
db  6Fh ; o
db  72h ; r
db  6Ch ; l
db  61h ; a
db  6Eh ; n
db  64h ; d
db  33h ; 3
db  32h ; 2
db    0
db    0
db    0
db  49h ; I
db  73h ; s
db  54h ; T
db  4Eh ; N
db  54h ; T
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  5Ch ; \
db  5Ch ; \
db  2Eh ; .
db  5Ch ; \
db  50h ; P
db  49h ; I
db  50h ; P
db  45h ; E
db  5Ch ; \
db  53h ; S
db  53h ; S
db  49h ; I
db  4Eh ; N
db  65h ; e
db  74h ; t
db  50h ; P
db  69h ; i
db  70h ; p
db  65h ; e
db    0



sub_10015F9C proc near
mov     al, ds:[ebp+733h]
mov     [ebx+3], al
sub_10015F9C endp




sub_10015FA6 proc near
xor     eax, eax
mov     [ebx+2Ch], eax
sub_10015FA6 endp




sub_10015FAB proc near
mov     al, ds:[ebp+770h]
mov     [ebx+30h], al
retn
sub_10015FAB endp




sub_10015FB6 proc near
push    ebx
push    ecx
push    edx
push    esi
push    edi
push    ebx
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_10015FD9
cmp     dword ptr ds:[ebp+1584h], 1
jz      short loc_10015FD9
call    dword ptr ds:[ebp+130h]
jmp     short loc_10015FE0

loc_10015FD9:
call    dword ptr ds:[ebp+0DCh]

loc_10015FE0:
and     eax, 0FFh
pop     edi
pop     esi
pop     edx
pop     ecx
pop     ebx
retn
sub_10015FB6 endp




sub_10015FEB proc near
mov     ecx, 3

loc_10015FF0:
call    sub_10015FB6
or      al, al
jz      short locret_10016024
cmp     al, 0FFh
jz      short loc_10016007
cmp     al, 21h ; '!'
jz      short loc_1001600F
cmp     al, 22h ; '"'
jz      short loc_1001600F
jmp     short loc_1001601D

loc_10016007:
mov     ah, [ebx+31h]
cmp     ah, [ebx+1]
jz      short locret_10016024

loc_1001600F:
call    sub_10016292
mov     eax, ebx
call    sub_10016131
loop    loc_10015FF0

loc_1001601D:
mov     eax, 0FFh
or      al, al

locret_10016024:
retn
sub_10015FEB endp




sub_10016025 proc near
pusha
mov     edi, ebx
xor     eax, eax
mov     ecx, 40h ; '@'
rep stosb
popa
retn
sub_10016025 endp




sub_10016033 proc near
pusha
mov     edi, eax
xor     eax, eax
mov     ecx, 200h
rep stosb
popa
retn
sub_10016033 endp

db  60h ; `
db  3Eh ; >
db  8Bh
db  9Dh
db  6Ch ; l
db    7
db    0
db    0
db 0E8h
db 0D7h
db 0FFh
db 0FFh
db 0FFh
db 0C6h
db    3
db  32h ; 2
db 0C6h
db  43h ; C
db    2
db    0
db 0C6h
db  43h ; C
db  0Ah
db    6
db 0C6h
db  43h ; C
db  0Bh
db  18h
db 0C6h
db  43h ; C
db  0Ch
db  18h
db 0C6h
db  43h ; C
db  0Dh
db    1
db 0E8h
db  3Ch ; <
db 0FFh
db 0FFh
db 0FFh
db 0E8h
db  47h ; G
db 0FFh
db 0FFh
db 0FFh
db  0Ah
db 0C0h
db  8Bh
db 0FCh
db  36h ; 6
db  89h
db  47h ; G
db  1Ch
db  61h ; a
db 0C3h



sub_10016079 proc near
pusha
mov     ebx, ds:[ebp+76Ch]
call    sub_10016025
mov     byte ptr [ebx], 37h ; '7'
mov     word ptr [ebx+8], 100h
mov     eax, ebp
add     eax, 0ADEh
mov     [ebx+4], eax
call    sub_10015FB6
popa
retn
sub_10016079 endp




sub_100160A0 proc near
pusha
mov     ebx, ds:[ebp+76Ch]
call    sub_10016025
mov     byte ptr [ebx], 33h ; '3'
mov     edi, ebx
add     edi, 0Ah
mov     ecx, 10h
xor     eax, eax
cmp     esi, 0FFFFFFFFh
jz      short loc_100160C5
rep movsb
jmp     short loc_100160CD

loc_100160C5:
mov     byte ptr [ebx+0Ah], 2Ah ; '*'
inc     edi
dec     ecx
rep stosb

loc_100160CD:
mov     word ptr [ebx+8], 200h
mov     eax, ds:[ebp+7AAh]
mov     [ebx+4], eax
call    sub_10015FA6
call    sub_10015FB6
or      al, al
mov     edi, esp
mov     ss:[edi+1Ch], eax
popa
retn
sub_100160A0 endp

db  60h ; `
db  3Eh ; >
db  8Bh
db  9Dh
db  6Ch ; l
db    7
db    0
db    0
db 0E8h
db  27h ; '
db 0FFh
db 0FFh
db 0FFh
db 0C6h
db    3
db  78h ; x
db  8Bh
db 0FBh
db  83h
db 0C7h
db  0Ah
db 0B9h
db  10h
db    0
db    0
db    0
db 0F3h
db 0A4h
db  66h ; f
db 0C7h
db  43h ; C
db    8
db    0
db    2
db  3Eh ; >
db  8Bh
db  85h
db 0AAh
db    7
db    0
db    0
db  89h
db  43h ; C
db    4
db 0E8h
db  84h
db 0FEh
db 0FFh
db 0FFh
db 0E8h
db  8Fh
db 0FEh
db 0FFh
db 0FFh
db  0Ah
db 0C0h
db  8Bh
db 0FCh
db  36h ; 6
db  89h
db  47h ; G
db  1Ch
db  61h ; a
db 0C3h



sub_10016131 proc near
push    ebx
cmp     byte ptr [eax+31h], 0FFh
jnz     short loc_10016156
mov     ebx, ds:[ebp+78Ah]
call    sub_10016025
mov     byte ptr [ebx], 35h ; '5'
mov     [ebx+4], eax
call    sub_10015FAB
call    sub_10015FB6
or      al, al

loc_10016156:
pop     ebx
retn
sub_10016131 endp




sub_10016158 proc near
pusha
mov     ebx, ds:[ebp+76Ch]
call    sub_10016025
mov     byte ptr [ebx], 30h ; '0'
mov     edi, ebx
add     edi, 1Ah
mov     ecx, 10h
rep movsb
call    sub_10015FA6
call    sub_10015FEB
mov     edi, esp
mov     ss:[edi+1Ch], eax
popa
retn
sub_10016158 endp




sub_10016186 proc near
pusha
mov     ebx, ds:[ebp+76Ch]
call    sub_10016025
mov     byte ptr [ebx], 0B1h
mov     edi, ebx
add     edi, 1Ah
mov     ecx, 10h
rep movsb
call    sub_10015FA6
call    sub_10015FEB
popa
retn
sub_10016186 endp




sub_100161AE proc near
pusha
mov     ebx, ds:[ebp+764h]
mov     byte ptr [ebx], 20h ; ' '
mov     edi, ds:[ebp+764h]
add     edi, 0Ah
mov     ecx, 10h
rep movsb
mov     eax, ds:[ebp+7A6h]
mov     [ebx+4], eax
call    sub_10015F9C
call    sub_10015FEB
mov     edi, esp
mov     ss:[edi+1Ch], eax
popa
retn
sub_100161AE endp




sub_100161E6 proc near
push    ebx
mov     ebx, ds:[ebp+768h]
call    sub_10016025
mov     byte ptr [ebx], 0A1h
mov     eax, ds:[ebp+7AAh]
mov     [ebx+4], eax
mov     word ptr [ebx+8], 200h
call    sub_10015F9C
call    sub_10015FEB
pop     ebx
retn
sub_100161E6 endp




sub_10016212 proc near
pusha
mov     ebx, ds:[ebp+764h]
mov     byte ptr [ebx], 22h ; '"'
mov     [ebx+3], al
mov     eax, ds:[ebp+7A6h]
mov     [ebx+4], eax
call    sub_10015FA6
call    sub_10015FEB
mov     edi, esp
mov     ss:[edi+1Ch], eax
popa
retn
sub_10016212 endp




sub_1001623C proc near
push    eax
push    ebx
mov     ebx, ds:[ebp+768h]
call    sub_10016025
mov     byte ptr [ebx], 0A1h
mov     [ebx+3], al
mov     eax, ds:[ebp+7AAh]
mov     [ebx+4], eax
mov     word ptr [ebx+8], 200h
call    sub_10015FAB
call    sub_10015FEB
pop     ebx
pop     eax
retn
sub_1001623C endp




sub_1001626D proc near
push    ebx
mov     dword ptr ds:[ebp+7D8h], 0
mov     al, 0FFh

loc_1001627B:
cmp     byte ptr [ebx+31h], 0FFh
jnz     short loc_1001628A
call    sub_10017523
jb      short loc_10016290
jmp     short loc_1001627B

loc_1001628A:
mov     al, [ebx+31h]
or      al, al
clc

loc_10016290:
pop     ebx
retn
sub_1001626D endp




sub_10016292 proc near
pushf
push    dword ptr ds:[ebp+7D4h]
mov     dword ptr ds:[ebp+7D8h], 0
mov     dword ptr ds:[ebp+7D4h], 3E8h

loc_100162B0:
call    sub_10017523
jnb     short loc_100162B0
pop     dword ptr ds:[ebp+7D4h]
popf
retn
sub_10016292 endp




sub_100162C0 proc near
pushf
push    eax
push    ebx
mov     ebx, ds:[ebp+6F8h]
cmp     byte ptr [ebx+31h], 0FFh
jnz     short loc_100162D7
mov     eax, ebx
call    sub_10016131

loc_100162D7:
mov     ebx, ds:[ebp+704h]
cmp     byte ptr [ebx+31h], 0FFh
jnz     short loc_100162EB
mov     eax, ebx
call    sub_10016131

loc_100162EB:
mov     ebx, ds:[ebp+710h]
cmp     byte ptr [ebx+31h], 0FFh
jnz     short loc_100162FF
mov     eax, ebx
call    sub_10016131

loc_100162FF:
pop     ebx
pop     eax
popf
retn
sub_100162C0 endp




sub_10016303 proc near
mov     eax, ds:[ebp+700h]
mov     ds:[ebp+7AAh], eax
mov     eax, ds:[ebp+6F8h]
mov     ds:[ebp+768h], eax
call    sub_100161E6
jnz     short locret_10016388
mov     eax, ds:[ebp+70Ch]
mov     ds:[ebp+7AAh], eax
mov     eax, ds:[ebp+704h]
mov     ds:[ebp+768h], eax
call    sub_100161E6
jnz     short locret_10016388
mov     eax, ds:[ebp+718h]
mov     ds:[ebp+7AAh], eax
mov     eax, ds:[ebp+710h]
mov     ds:[ebp+768h], eax
call    sub_100161E6
jnz     short locret_10016388
mov     eax, ds:[ebp+6F8h]
mov     ds:[ebp+768h], eax
mov     eax, ds:[ebp+700h]
mov     ds:[ebp+7AAh], eax

locret_10016388:
retn
sub_10016303 endp




sub_10016389 proc near
push    eax
push    edx
mov     edx, ds:[ebp+700h]
mov     ds:[ebp+7AAh], edx
mov     edx, ds:[ebp+6F8h]
mov     ds:[ebp+768h], edx
call    sub_1001623C
jnz     short loc_10016410
mov     edx, ds:[ebp+70Ch]
mov     ds:[ebp+7AAh], edx
mov     edx, ds:[ebp+704h]
mov     ds:[ebp+768h], edx
call    sub_1001623C
jnz     short loc_10016410
mov     edx, ds:[ebp+718h]
mov     ds:[ebp+7AAh], edx
mov     edx, ds:[ebp+710h]
mov     ds:[ebp+768h], edx
call    sub_1001623C
jnz     short loc_10016410
mov     edx, ds:[ebp+6F8h]
mov     ds:[ebp+768h], edx
mov     edx, ds:[ebp+700h]
mov     ds:[ebp+7AAh], edx

loc_10016410:
pop     edx
pop     eax
retn
sub_10016389 endp




sub_10016413 proc near
push    esi
mov     esi, ebp
add     esi, 772h
call    sub_100161AE
pop     esi
retn
sub_10016413 endp




sub_10016423 proc near
push    eax
cmp     edi, ds:[ebp+6F8h]
jnz     short loc_10016436
mov     eax, ds:[ebp+700h]
jmp     short loc_1001644F

loc_10016436:
cmp     edi, ds:[ebp+704h]
jnz     short loc_10016448
mov     eax, ds:[ebp+70Ch]
jmp     short loc_1001644F

loc_10016448:
mov     eax, ds:[ebp+718h]

loc_1001644F:
mov     ds:[ebp+768h], edi
mov     ds:[ebp+7AAh], eax
pop     eax
retn
sub_10016423 endp




sub_1001645F proc near
pusha
mov     edi, ds:[ebp+764h]
mov     esi, ds:[ebp+7A6h]
mov     ax, [esi+4]
xor     ax, [esi]
add     ax, 6
mov     [edi+8], ax
inc     dword ptr ds:[ebp+6F4h]
mov     eax, ds:[ebp+6F4h]
mov     [esi+8], al
mov     eax, esi
call    sub_1001B4C4
call    sub_10016303
jnz     loc_10016594
mov     dword ptr ds:[ebp+7D4h], 7530h
mov     dword ptr ds:[ebp+6ECh], 0

loc_100164B6:
mov     dword ptr ds:[ebp+7D8h], 0
call    sub_10016413
jnz     loc_10016594
inc     dword ptr ds:[ebp+6F0h]

loc_100164D3:
mov     edi, ds:[ebp+6F8h]
cmp     byte ptr [edi+31h], 0FFh
jnz     short loc_100164FA
mov     edi, ds:[ebp+704h]
cmp     byte ptr [edi+31h], 0FFh
jnz     short loc_100164FA
mov     edi, ds:[ebp+710h]
cmp     byte ptr [edi+31h], 0FFh
jz      short loc_1001650C

loc_100164FA:
cmp     byte ptr [edi+31h], 0
jz      short loc_10016526
dec     dword ptr ds:[ebp+6F0h]
jmp     loc_10016594

loc_1001650C:
call    sub_10017523
jnb     short loc_100164D3
cmp     dword ptr ds:[ebp+6ECh], 3
jz      short loc_1001658D
inc     dword ptr ds:[ebp+6ECh]
jmp     short loc_100164B6

loc_10016526:
dec     dword ptr ds:[ebp+6F0h]
call    sub_10016423
push    edi
mov     edi, ds:[ebp+7AAh]
mov     ax, [edi]
or      ax, [edi+4]
pop     edi
jz      short loc_10016552
mov     eax, ds:[ebp+7AAh]
call    sub_1001B4C4
jnb     short loc_10016566

loc_10016552:
cmp     dword ptr ds:[ebp+6F0h], 0
jle     short loc_10016586
call    sub_100161E6
jmp     loc_100164D3

loc_10016566:
mov     eax, ds:[ebp+6F4h]
mov     edi, ds:[ebp+7AAh]
cmp     [edi+8], al
jz      short loc_10016583
call    sub_100161E6
jmp     loc_100164D3

loc_10016583:
clc
jmp     short loc_1001659F

loc_10016586:
mov     eax, 0CEh
jmp     short loc_10016599

loc_1001658D:
mov     eax, 0CAh
jmp     short loc_10016599

loc_10016594:
mov     eax, 0CBh

loc_10016599:
call    sub_100179A6
stc

loc_1001659F:
call    sub_100162C0
popa
retn
sub_1001645F endp




sub_100165A6 proc near
pusha
mov     edi, ds:[ebp+7A6h]
mov     ecx, 1Bh
xor     eax, eax
rep stosb
mov     ebx, ds:[ebp+764h]
call    sub_10016025
mov     esi, 0FFFFFFFFh
call    sub_100160A0
jnz     loc_100166A9
mov     esi, ds:[ebp+7AAh]
add     esi, 0
mov     edi, ds:[ebp+7A6h]
add     edi, 11h
mov     ecx, 6
rep movsb
mov     esi, ds:[ebp+7A6h]
mov     byte ptr [esi+18h], 1
mov     word ptr [esi], 1190h
mov     word ptr [ebx+8], 1Bh
mov     al, 1
call    sub_10016389
jnz     loc_100166A9
mov     dword ptr ds:[ebp+7D4h], 2710h
mov     dword ptr ds:[ebp+7D8h], 0
mov     al, 1
call    sub_10016212
jnz     short loc_100166A9

loc_10016630:
mov     edi, ds:[ebp+6F8h]
cmp     byte ptr [edi+31h], 0FFh
jnz     short loc_10016657
mov     edi, ds:[ebp+704h]
cmp     byte ptr [edi+31h], 0FFh
jnz     short loc_10016657
mov     edi, ds:[ebp+710h]
cmp     byte ptr [edi+31h], 0FFh
jz      short loc_1001665F

loc_10016657:
cmp     byte ptr [edi+31h], 0
jz      short loc_10016668
jmp     short loc_100166A9

loc_1001665F:
call    sub_10017523
jnb     short loc_10016630
jmp     short loc_100166A2

loc_10016668:
cmp     byte ptr [edi+1], 0FFh
jz      short loc_1001665F
cmp     byte ptr [edi+1], 0
jz      short loc_1001667A
cmp     byte ptr [edi+1], 6
jnz     short loc_1001668F

loc_1001667A:
call    sub_10016423
mov     edi, ds:[ebp+7AAh]
cmp     dword ptr [edi+7], 53495353h
jz      short loc_10016698

loc_1001668F:
mov     al, 1
call    sub_1001623C
jmp     short loc_10016630

loc_10016698:
clc
jmp     short loc_100166B4
db 0B8h
db 0CEh
db    0
db    0
db    0
db 0EBh
db  0Ch

loc_100166A2:
mov     eax, 0CAh
jmp     short loc_100166AE

loc_100166A9:
mov     eax, 0CBh

loc_100166AE:
call    sub_100179A6
stc

loc_100166B4:
call    sub_100162C0
popa
retn
sub_100165A6 endp




sub_100166BB proc near
push    eax
push    ebx
push    ecx
call    sub_100166FB
cmp     byte ptr ds:[ebp+0ADEh], 0
jz      short loc_100166D0
clc
jmp     short loc_100166D1

loc_100166D0:
stc

loc_100166D1:
pop     ecx
pop     ebx
pop     eax
retn
sub_100166BB endp




sub_100166D5 proc near
pusha
call    sub_100165A6
jnb     short loc_100166DF
jmp     short loc_100166F9

loc_100166DF:
mov     esi, ds:[ebp+7AAh]
add     esi, 0Fh
mov     edi, ebp
add     edi, 74Ch
mov     ecx, 6
rep movsb
clc

loc_100166F9:
popa
retn
sub_100166D5 endp




sub_100166FB proc near
pusha
cmp     byte ptr ds:[ebp+0ADEh], 0
jnz     short loc_10016769
call    sub_10016079
cmp     byte ptr ds:[ebp+0ADEh], 0
jnz     short loc_10016769
xor     ebx, ebx
mov     edi, ebp
add     edi, 0ADFh

loc_1001671F:
mov     ds:[ebp+770h], bl
mov     eax, ds:[ebp+7AAh]
call    sub_10016033
mov     esi, 0FFFFFFFFh
call    sub_100160A0
jnz     short loc_10016760
mov     esi, ds:[ebp+7AAh]
add     esi, 0
mov     ecx, 6

loc_1001674D:
lodsb
or      al, al
jnz     short loc_10016756
loop    loc_1001674D
jmp     short loc_10016760

loc_10016756:
mov     al, bl
stosb
inc     byte ptr ds:[ebp+0ADEh]

loc_10016760:
inc     ebx
cmp     ebx, 0FFh
jl      short loc_1001671F

loc_10016769:
mov     eax, ds:[ebp+792h]
mov     bl, ds:[ebp+eax+0ADFh]
mov     ds:[ebp+770h], bl
popa
retn
sub_100166FB endp




sub_10016781 proc near
push    esi
push    edi
push    eax
push    ebx
push    dword ptr ds:[ebp+7F8h]
push    dword ptr ds:[ebp+7FCh]
push    dword ptr ds:[ebp+7F4h]
call    dword ptr ds:[ebp+12Ch]
cmp     eax, 0FFFFFFFFh
jz      loc_10016877
mov     ds:[ebp+7E0h], eax
mov     edi, ebp
add     edi, 824h
push    edi
xor     eax, eax
mov     ecx, 10h
rep stosb
pop     edi
mov     eax, ds:[ebp+7F4h]
mov     [edi], ax
push    10h
push    edi
push    dword ptr ds:[ebp+7E0h]
call    dword ptr ds:[ebp+108h]
cmp     eax, 0FFFFFFFFh
jz      short loc_1001685E
mov     dword ptr ds:[ebp+834h], 10h
mov     eax, ebp
add     eax, 834h
push    eax
mov     eax, ebp
add     eax, 824h
push    eax
push    dword ptr ds:[ebp+7E0h]
call    dword ptr ds:[ebp+110h]
cmp     eax, 0FFFFFFFFh
jz      short loc_1001685E
mov     esi, ebp
add     esi, 824h
mov     edi, ebp
add     edi, 7AEh
mov     ecx, 0Eh
rep movsb
mov     dword ptr ds:[ebp+848h], 1
mov     eax, ebp
add     eax, 848h
push    eax
push    8004667Eh
push    dword ptr ds:[ebp+7E0h]
call    dword ptr ds:[ebp+118h]
cmp     eax, 0FFFFFFFFh
jz      short loc_1001685E
mov     edx, ds:[ebp+7E0h]
clc
jmp     short loc_10016878

loc_1001685E:
push    dword ptr ds:[ebp+7E0h]
call    dword ptr ds:[ebp+10Ch]
mov     dword ptr ds:[ebp+7E0h], 0

loc_10016877:
stc

loc_10016878:
pop     ebx
pop     eax
pop     edi
pop     esi
retn
sub_10016781 endp




sub_1001687D proc near
pusha
push    edx
call    dword ptr ds:[ebp+10Ch]
popa
retn
sub_1001687D endp




sub_10016888 proc near
pusha
push    10h
push    edi
push    0
push    dword ptr ds:[ebp+81Ch]
push    dword ptr ds:[ebp+7A6h]
push    dword ptr ds:[ebp+7E0h]
call    dword ptr ds:[ebp+124h]
cmp     eax, 0FFFFFFFFh
call    dword ptr ds:[ebp+104h]
jz      short loc_100168B9
clc
jmp     short loc_100168BA

loc_100168B9:
stc

loc_100168BA:
popa
retn
sub_10016888 endp




sub_100168BC proc near
pusha
mov     eax, ebp
add     eax, 834h
push    eax
mov     eax, ebp
add     eax, 824h
push    eax
push    0
push    dword ptr ds:[ebp+820h]
push    dword ptr ds:[ebp+7AAh]
push    edx
call    dword ptr ds:[ebp+11Ch]
cmp     eax, 0FFFFFFFFh
jz      short loc_100168ED
clc
jmp     short loc_100168EE

loc_100168ED:
stc

loc_100168EE:
popa
retn
sub_100168BC endp




sub_100168F0 proc near
pusha
push    4
mov     ds:[ebp+848h], eax
mov     eax, ebp
add     eax, 848h
push    eax
push    4000h
push    3E8h
push    edx
call    dword ptr ds:[ebp+128h]
cmp     eax, 0FFFFFFFFh
jz      short loc_1001691C
clc
jmp     short loc_1001691D

loc_1001691C:
stc

loc_1001691D:
popa
retn
sub_100168F0 endp




sub_1001691F proc near
pusha
push    4
mov     eax, ebp
add     eax, 7ECh
push    eax
push    20h ; ' '
push    0FFFFh
push    edx
call    dword ptr ds:[ebp+128h]
cmp     eax, 0FFFFFFFFh
jz      short loc_10016941
clc
jmp     short loc_10016942

loc_10016941:
stc

loc_10016942:
popa
retn
sub_1001691F endp




sub_10016944 proc near
pusha
xor     eax, eax
mov     ecx, 41h ; 'A'
mov     edi, ebp
add     edi, 84Ch
rep stosd
mov     dword ptr ds:[ebp+84Ch], 1
mov     ds:[ebp+850h], edx
mov     edi, ebp
add     edi, 814h
push    edi
push    eax
push    eax
mov     edi, ebp
add     edi, 84Ch
push    edi
push    eax
call    dword ptr ds:[ebp+120h]
cmp     eax, 0
jle     short loc_1001698C
clc
jmp     short loc_1001698D

loc_1001698C:
stc

loc_1001698D:
popa
retn
sub_10016944 endp




sub_1001698F proc near
push    eax

loc_10016990:
call    sub_10016944
jb      short loc_1001699E
call    sub_100168BC
jmp     short loc_10016990

loc_1001699E:
pop     eax
retn
sub_1001698F endp




sub_100169A0 proc near
pusha
mov     esi, ds:[ebp+7A6h]
movzx   eax, word ptr [esi+4]
add     eax, 6
mov     ds:[ebp+81Ch], eax
inc     dword ptr ds:[ebp+6F4h]
mov     eax, ds:[ebp+6F4h]
mov     [esi+8], al
mov     eax, esi
call    sub_1001B4C4
mov     dword ptr ds:[ebp+6ECh], 0
mov     edx, ds:[ebp+7E0h]
call    sub_1001698F

loc_100169E5:
mov     dword ptr ds:[ebp+7D8h], 0
mov     edi, ebp
add     edi, 838h
call    sub_10016888
jb      loc_10016A92
inc     dword ptr ds:[ebp+6F0h]

loc_10016A0A:
call    sub_10016944
jb      short loc_10016A21
call    sub_100168BC
jnb     short loc_10016A3B
dec     dword ptr ds:[ebp+6F0h]
jmp     short loc_10016A92

loc_10016A21:
call    sub_10017523
jnb     short loc_10016A0A
cmp     dword ptr ds:[ebp+6ECh], 3
jz      short loc_10016A8B
inc     dword ptr ds:[ebp+6ECh]
jmp     short loc_100169E5

loc_10016A3B:
dec     dword ptr ds:[ebp+6F0h]
mov     edi, ds:[ebp+7AAh]
mov     ax, [edi]
or      ax, [edi+4]
jz      short loc_10016A60
mov     eax, ds:[ebp+7AAh]
call    sub_1001B4C4
jnb     short loc_10016A6C

loc_10016A60:
cmp     dword ptr ds:[ebp+6F0h], 0
jle     short loc_10016A84
jmp     short loc_10016A0A

loc_10016A6C:
mov     eax, ds:[ebp+6F4h]
mov     edi, ds:[ebp+7AAh]
cmp     [edi+8], al
jz      short loc_10016A81
jmp     short loc_10016A0A

loc_10016A81:
clc
jmp     short loc_10016A9D

loc_10016A84:
mov     eax, 0CEh
jmp     short loc_10016A97

loc_10016A8B:
mov     eax, 0CAh
jmp     short loc_10016A97

loc_10016A92:
mov     eax, 0CBh

loc_10016A97:
call    sub_100179A6
stc

loc_10016A9D:
popa
retn
sub_100169A0 endp




sub_10016A9F proc near
push    esi
push    edi
push    eax
push    ecx
call    sub_10016781
jb      loc_10016B83
mov     ds:[ebp+7E0h], edx
mov     eax, 0
call    sub_100168F0
jb      loc_10016B83
call    sub_1001691F
jb      loc_10016B83
mov     dword ptr ds:[ebp+81Ch], 4
mov     eax, ds:[ebp+810h]
mov     edi, ds:[ebp+7A6h]
stosd
mov     edi, ebp
add     edi, 800h
push    edi
mov     eax, ds:[ebp+7F4h]
mov     [edi], ax
add     edi, 2
xor     eax, eax
mov     ecx, 4
rep stosb
mov     al, 0FFh
mov     ecx, 6
rep stosb
mov     ax, 5204h
stosw
pop     edi
mov     dword ptr ds:[ebp+6ECh], 0
mov     dword ptr ds:[ebp+7D4h], 0BB8h

loc_10016B2F:
mov     dword ptr ds:[ebp+7D8h], 0
call    sub_10016888
jb      short loc_10016B83

loc_10016B41:
call    sub_10016944
jb      short loc_10016B4F
call    sub_100168BC
jnb     short loc_10016B69

loc_10016B4F:
call    sub_10017523
jnb     short loc_10016B41
cmp     dword ptr ds:[ebp+6ECh], 3
jz      short loc_10016B83
inc     dword ptr ds:[ebp+6ECh]
jmp     short loc_10016B2F

loc_10016B69:
mov     edx, ds:[ebp+7E0h]
call    sub_1001687D
mov     dword ptr ds:[ebp+7E0h], 0
clc
jmp     short loc_10016B84

loc_10016B83:
stc

loc_10016B84:
pop     ecx
pop     eax
pop     edi
pop     esi
retn
sub_10016A9F endp




sub_10016B89 proc near
pusha
call    sub_10017B93
jb      loc_10016C8E
push    dword ptr ds:[ebp+157Ch]
mov     eax, 101h
push    eax
call    dword ptr ds:[ebp+0FCh]
or      eax, eax
jnz     loc_10016C8E
mov     dword ptr ds:[ebp+7F8h], 3E8h
mov     dword ptr ds:[ebp+7FCh], 2
mov     dword ptr ds:[ebp+7F4h], 6
mov     eax, ds:[ebp+7F4h]
mov     ds:[ebp+7AEh], ax
mov     ds:[ebp+7BEh], ax
mov     ds:[ebp+800h], ax
mov     ds:[ebp+838h], ax
call    sub_1001755E
mov     dword ptr ds:[ebp+7D4h], 7530h
call    sub_10017D23
jnb     short loc_10016C57
call    sub_10016A9F
jb      loc_10016CA3
mov     esi, ds:[ebp+7AAh]
add     esi, 34h ; '4'
mov     edi, ebp
add     edi, 7C0h
mov     ecx, 0Ah
rep movsb
mov     eax, 1190h
stosw
call    sub_10016781
jb      short loc_10016CAA
mov     ds:[ebp+7E0h], edx
mov     eax, 4
call    sub_100168F0
jb      short loc_10016CAA
jmp     short loc_10016C70

loc_10016C57:
mov     eax, ds:[ebp+3C6h]
cmp     eax, ds:[ebp+782h]
jz      short loc_10016C70
mov     ds:[ebp+782h], eax
jmp     short loc_10016C9C

loc_10016C70:
xor     eax, eax
mov     ecx, 9Ch
mov     edi, ebp
add     edi, 0BDEh
rep stosb
mov     dword ptr ds:[ebp+7A2h], 1
jmp     short loc_10016CC3

loc_10016C8E:
mov     eax, 0C8h
jmp     short loc_10016CB8
db 0B8h
db 0CCh
db    0
db    0
db    0
db 0EBh
db  1Ch

loc_10016C9C:
mov     eax, 0C9h
jmp     short loc_10016CB8

loc_10016CA3:
mov     eax, 0C9h
jmp     short loc_10016CAF

loc_10016CAA:
mov     eax, 0CBh

loc_10016CAF:
push    eax
call    dword ptr ds:[ebp+100h]
pop     eax

loc_10016CB8:
call    sub_100179A6
mov     eax, 0FFFFFFFFh
stc

loc_10016CC3:
mov     edi, esp
mov     ss:[edi+1Ch], eax
popa
retn
sub_10016B89 endp




sub_10016CCB proc near
pusha
push    eax
mov     edi, ds:[ebp+720h]
mov     ecx, 138h
xor     eax, eax
rep stosb
pop     eax
mov     edi, ds:[ebp+728h]
mov     byte ptr [edi+5], 4
add     edi, 6
mov     esi, ebp
add     esi, 7BEh
mov     ecx, 0Ch
rep movsb
mov     esi, ebp
add     esi, 7AEh
mov     ecx, 0Ah
rep movsb
stosw
mov     esi, ds:[ebp+720h]
mov     [esi+0Ah], ax
mov     word ptr [esi+22h], 2
mov     ebx, ds:[ebp+728h]
mov     [esi+24h], ebx
mov     word ptr [esi+28h], 1Eh
mov     ebx, ds:[ebp+7A6h]
mov     [esi+2Ah], ebx
mov     word ptr [esi+2Eh], 2Ah ; '*'
push    edi
push    esi
mov     edi, esi
add     edi, 1Ch
mov     esi, ebp
add     esi, 7CEh
mov     ecx, 6
rep movsb
pop     esi
pop     edi
mov     edi, ds:[ebp+6F8h]
mov     [edi+0Ah], ax
mov     word ptr [edi+22h], 2
mov     ebx, ds:[ebp+6FCh]
mov     [edi+24h], ebx
mov     word ptr [edi+28h], 1Eh
mov     ebx, ds:[ebp+700h]
mov     [edi+2Ah], ebx
mov     word ptr [edi+2Eh], 222h
mov     edi, ds:[ebp+704h]
mov     [edi+0Ah], ax
mov     word ptr [edi+22h], 2
mov     ebx, ds:[ebp+708h]
mov     [edi+24h], ebx
mov     word ptr [edi+28h], 1Eh
mov     ebx, ds:[ebp+70Ch]
mov     [edi+2Ah], ebx
mov     word ptr [edi+2Eh], 222h
mov     edi, ds:[ebp+710h]
mov     [edi+0Ah], ax
mov     word ptr [edi+22h], 2
mov     ebx, ds:[ebp+714h]
mov     [edi+24h], ebx
mov     word ptr [edi+28h], 1Eh
mov     ebx, ds:[ebp+718h]
mov     [edi+2Ah], ebx
mov     word ptr [edi+2Eh], 222h
popa
retn
sub_10016CCB endp




sub_10016DEA proc near
push    esi
push    ecx
push    edx
mov     esi, ds:[ebp+720h]
push    esi
call    dword ptr ds:[ebp+14Ch]
mov     esi, ds:[ebp+720h]
mov     ecx, 2710h

loc_10016E08:
cmp     byte ptr [esi+8], 0
jz      short loc_10016E12
loop    loc_10016E08
jmp     short loc_10016E1B

loc_10016E12:
cmp     byte ptr [esi+9], 0
jnz     short loc_10016E1B
clc
jmp     short loc_10016E1C

loc_10016E1B:
stc

loc_10016E1C:
pop     edx
pop     ecx
pop     esi
retn
sub_10016DEA endp




sub_10016E20 proc near
pushfw
push    esi
mov     esi, ds:[ebp+720h]
cmp     byte ptr [esi+8], 0
jz      short loc_10016E38
push    esi
call    dword ptr ds:[ebp+154h]

loc_10016E38:
mov     esi, ds:[ebp+710h]
cmp     byte ptr [esi+8], 0
jz      short loc_10016E4D
push    esi
call    dword ptr ds:[ebp+154h]

loc_10016E4D:
mov     esi, ds:[ebp+704h]
cmp     byte ptr [esi+8], 0
jz      short loc_10016E62
push    esi
call    dword ptr ds:[ebp+154h]

loc_10016E62:
mov     esi, ds:[ebp+6F8h]
cmp     byte ptr [esi+8], 0
jz      short loc_10016E77
push    esi
call    dword ptr ds:[ebp+154h]

loc_10016E77:
pop     esi
popfw
retn
sub_10016E20 endp




sub_10016E7B proc near
push    dword ptr ds:[ebp+710h]
call    dword ptr ds:[ebp+150h]
or      eax, eax
jnz     short loc_10016EB4
push    dword ptr ds:[ebp+704h]
call    dword ptr ds:[ebp+150h]
or      eax, eax
jnz     short loc_10016EB4
push    dword ptr ds:[ebp+6F8h]
call    dword ptr ds:[ebp+150h]
or      eax, eax
jnz     short loc_10016EB4
clc
jmp     short locret_10016EB5

loc_10016EB4:
stc

locret_10016EB5:
retn
sub_10016E7B endp




sub_10016EB6 proc near
push    edi
push    eax
push    ecx
mov     edi, ds:[ebp+72Ch]
xor     eax, eax
mov     ecx, 1Eh
rep stosb
push    dword ptr ds:[ebp+724h]
call    dword ptr ds:[ebp+150h]
or      eax, eax
jz      short loc_10016EDE
stc
jmp     short loc_10016EDF

loc_10016EDE:
clc

loc_10016EDF:
pop     ecx
pop     eax
pop     edi
retn
sub_10016EB6 endp




sub_10016EE3 proc near
push    eax
cmp     edi, ds:[ebp+6F8h]
jnz     short loc_10016F19
mov     eax, ds:[ebp+6F8h]
mov     ds:[ebp+724h], eax
mov     eax, ds:[ebp+6FCh]
mov     ds:[ebp+72Ch], eax
mov     eax, ds:[ebp+700h]
mov     ds:[ebp+7AAh], eax
jmp     short loc_10016F78

loc_10016F19:
cmp     edi, ds:[ebp+704h]
jnz     short loc_10016F4E
mov     eax, ds:[ebp+704h]
mov     ds:[ebp+724h], eax
mov     eax, ds:[ebp+708h]
mov     ds:[ebp+72Ch], eax
mov     eax, ds:[ebp+70Ch]
mov     ds:[ebp+7AAh], eax
jmp     short loc_10016F78

loc_10016F4E:
mov     eax, ds:[ebp+710h]
mov     ds:[ebp+724h], eax
mov     eax, ds:[ebp+714h]
mov     ds:[ebp+72Ch], eax
mov     eax, ds:[ebp+718h]
mov     ds:[ebp+7AAh], eax

loc_10016F78:
pop     eax
retn
sub_10016EE3 endp




sub_10016F7A proc near
pusha
mov     edi, ds:[ebp+720h]
mov     esi, ds:[ebp+7A6h]
movzx   eax, word ptr [esi+4]
xor     ax, [esi]
add     eax, 6
mov     [edi+2Eh], ax
inc     dword ptr ds:[ebp+6F4h]
mov     eax, ds:[ebp+6F4h]
mov     [esi+8], al
mov     eax, esi
call    sub_1001B4C4
call    sub_10016E7B
jb      loc_100170A3
mov     dword ptr ds:[ebp+6ECh], 0

loc_10016FC5:
mov     dword ptr ds:[ebp+7D8h], 0
call    sub_10016DEA
jb      loc_100170A3
inc     dword ptr ds:[ebp+6F0h]

loc_10016FE2:
mov     edi, ds:[ebp+6F8h]
cmp     byte ptr [edi+8], 0
jz      short loc_10017009
mov     edi, ds:[ebp+704h]
cmp     byte ptr [edi+8], 0
jz      short loc_10017009
mov     edi, ds:[ebp+710h]
cmp     byte ptr [edi+8], 0
jnz     short loc_1001701B

loc_10017009:
cmp     byte ptr [edi+9], 0
jz      short loc_10017035
dec     dword ptr ds:[ebp+6F0h]
jmp     loc_100170A3

loc_1001701B:
call    sub_10017523
jnb     short loc_10016FE2
cmp     dword ptr ds:[ebp+6ECh], 3
jz      short loc_1001709C
inc     dword ptr ds:[ebp+6ECh]
jmp     short loc_10016FC5

loc_10017035:
dec     dword ptr ds:[ebp+6F0h]
call    sub_10016EE3
push    edi
mov     edi, ds:[ebp+7AAh]
movzx   eax, word ptr [edi]
or      ax, [edi+4]
pop     edi
jz      short loc_10017061
mov     eax, ds:[ebp+7AAh]
call    sub_1001B4C4
jnb     short loc_10017075

loc_10017061:
cmp     dword ptr ds:[ebp+6F0h], 0
jle     short loc_10017095
call    sub_10016EB6
jmp     loc_10016FE2

loc_10017075:
mov     eax, ds:[ebp+6F4h]
mov     edi, ds:[ebp+7AAh]
cmp     [edi+8], al
jz      short loc_10017092
call    sub_10016EB6
jmp     loc_10016FE2

loc_10017092:
clc
jmp     short loc_100170AE

loc_10017095:
mov     eax, 0CEh
jmp     short loc_100170A8

loc_1001709C:
mov     eax, 0CAh
jmp     short loc_100170A8

loc_100170A3:
mov     eax, 0CBh

loc_100170A8:
call    sub_100179A6
stc

loc_100170AE:
call    sub_10016E20
popa
retn
sub_10016F7A endp




sub_100170B5 proc near
push    esi
push    edi
push    eax
push    ecx
call    dword ptr ds:[ebp+140h]
jb      loc_1001729C
mov     ds:[ebp+7E0h], eax
mov     dword ptr ds:[ebp+81Ch], 4
mov     eax, ds:[ebp+810h]
mov     edi, ds:[ebp+7A6h]
stosd
mov     edx, ds:[ebp+7E0h]
mov     esi, ds:[ebp+6F8h]
mov     [esi+0Ah], dx
mov     word ptr [esi+22h], 2
mov     eax, ds:[ebp+6FCh]
mov     [esi+24h], eax
mov     word ptr [esi+28h], 1Eh
mov     eax, ds:[ebp+700h]
mov     [esi+2Ah], eax
mov     word ptr [esi+2Eh], 222h
mov     esi, ds:[ebp+704h]
mov     [esi+0Ah], dx
mov     word ptr [esi+22h], 2
mov     eax, ds:[ebp+708h]
mov     [esi+24h], eax
mov     word ptr [esi+28h], 1Eh
mov     eax, ds:[ebp+70Ch]
mov     [esi+2Ah], eax
mov     word ptr [esi+2Eh], 222h
mov     esi, ds:[ebp+710h]
mov     [esi+0Ah], dx
mov     word ptr [esi+22h], 2
mov     eax, ds:[ebp+714h]
mov     [esi+24h], eax
mov     word ptr [esi+28h], 1Eh
mov     eax, ds:[ebp+718h]
mov     [esi+2Ah], eax
mov     word ptr [esi+2Eh], 222h
mov     esi, ds:[ebp+728h]
mov     byte ptr [esi+5], 0
mov     edi, esi
add     edi, 6
xor     eax, eax
mov     ecx, 4
rep stosb
mov     al, 0FFh
mov     ecx, 6
rep stosb
mov     ax, 5204h
stosw
push    edi
call    dword ptr ds:[ebp+158h]
mov     [esi+1Ch], dx
mov     edx, ds:[ebp+7E0h]
mov     esi, ds:[ebp+720h]
mov     [esi+0Ah], dx
mov     edi, esi
add     edi, 1Ch
mov     al, 0FFh
mov     ecx, 6
rep stosb
mov     word ptr [esi+22h], 2
mov     eax, ds:[ebp+728h]
mov     [esi+24h], eax
mov     word ptr [esi+28h], 1Eh
mov     eax, ds:[ebp+7A6h]
mov     [esi+2Ah], eax
mov     eax, ds:[ebp+81Ch]
mov     [esi+2Eh], ax
call    sub_10016E7B
jb      loc_10017292
mov     dword ptr ds:[ebp+6ECh], 0
mov     dword ptr ds:[ebp+7D4h], 0BB8h

loc_10017221:
mov     dword ptr ds:[ebp+7D8h], 0
call    sub_10016DEA
jb      short loc_1001729C

loc_10017233:
mov     edi, ds:[ebp+6F8h]
cmp     byte ptr [edi+8], 0
jz      short loc_1001725A
mov     edi, ds:[ebp+704h]
cmp     byte ptr [edi+8], 0
jz      short loc_1001725A
mov     edi, ds:[ebp+710h]
cmp     byte ptr [edi+8], 0
jnz     short loc_10017262

loc_1001725A:
cmp     byte ptr [edi+9], 0
jz      short loc_1001727C
jmp     short loc_10017292

loc_10017262:
call    sub_10017523
jnb     short loc_10017233
cmp     dword ptr ds:[ebp+6ECh], 3
jz      short loc_1001728B
inc     dword ptr ds:[ebp+6ECh]
jmp     short loc_10017221

loc_1001727C:
call    sub_10016EE3
clc
jmp     short loc_1001729D
db 0B8h
db 0CEh
db    0
db    0
db    0
db 0EBh
db  0Ch

loc_1001728B:
mov     eax, 0CAh
jmp     short loc_10017297

loc_10017292:
mov     eax, 0CBh

loc_10017297:
call    sub_100179A6

loc_1001729C:
stc

loc_1001729D:
call    sub_10016E20
pop     ecx
pop     eax
pop     edi
pop     esi
retn
sub_100170B5 endp




sub_100172A7 proc near
pusha
call    sub_10017C0D
jb      loc_1001741D
call    dword ptr ds:[ebp+13Ch]
cmp     eax, 0FFFFFFFFh
jz      loc_1001741D
mov     eax, 0C00h
push    eax
call    dword ptr ds:[ebp+134h]
or      eax, eax
jz      loc_10017424
mov     ds:[ebp+71Ch], eax
call    sub_1001755E
mov     dword ptr ds:[ebp+7D4h], 7530h
call    sub_10017D23
jnb     loc_10017393
call    sub_100170B5
jb      loc_10017432
mov     esi, ds:[ebp+7AAh]
add     esi, 34h ; '4'
mov     edi, ebp
add     edi, 7BEh
mov     ecx, 0Ah
rep movsb
mov     eax, 1190h
stosw
mov     eax, ds:[ebp+7DCh]
add     eax, 6
mov     edi, eax
mov     ecx, 0Ch
mov     esi, ebp
add     esi, 7BEh
rep movsb
push    dword ptr ds:[ebp+7DCh]
push    eax
call    dword ptr ds:[ebp+148h]
or      eax, eax
jnz     loc_10017432
mov     edi, ebp
add     edi, 7CEh
mov     esi, ds:[ebp+7DCh]
mov     ecx, 6
rep movsb
push    dword ptr ds:[ebp+7DCh]
call    dword ptr ds:[ebp+158h]
mov     esi, ds:[ebp+7DCh]
mov     ecx, 0Ah
mov     edi, ebp
add     edi, 7AEh
rep movsb
jmp     short loc_100173F3

loc_10017393:
mov     eax, ds:[ebp+3C6h]
cmp     eax, ds:[ebp+782h]
jz      short loc_100173AF
mov     ds:[ebp+782h], eax
jmp     loc_10017432

loc_100173AF:
mov     eax, ds:[ebp+7DCh]
add     eax, 6
mov     edi, eax
mov     ecx, 0Ch
mov     esi, ebp
add     esi, 7BEh
rep movsb
push    dword ptr ds:[ebp+7DCh]
push    eax
call    dword ptr ds:[ebp+148h]
or      eax, eax
jnz     short loc_10017432
mov     edi, ebp
add     edi, 7CEh
mov     esi, ds:[ebp+7DCh]
mov     ecx, 6
rep movsb

loc_100173F3:
mov     eax, ds:[ebp+7E0h]
call    sub_10016CCB
xor     eax, eax
mov     ecx, 9Ch
mov     edi, ebp
add     edi, 0BDEh
rep stosb
mov     dword ptr ds:[ebp+7A2h], 1
jmp     short loc_10017452

loc_1001741D:
mov     eax, 0C8h
jmp     short loc_10017447

loc_10017424:
mov     eax, 0CCh
jmp     short loc_10017447
db 0B8h
db  30h ; 0
db    1
db    0
db    0
db 0EBh
db  15h

loc_10017432:
mov     eax, 0C9h
jmp     short loc_1001743E
db 0B8h
db 0CBh
db    0
db    0
db    0

loc_1001743E:
push    eax
call    dword ptr ds:[ebp+138h]
pop     eax

loc_10017447:
call    sub_100179A6
mov     eax, 0FFFFFFFFh
stc

loc_10017452:
mov     edi, esp
mov     ss:[edi+1Ch], eax
popa
retn
sub_100172A7 endp




sub_1001745A proc near
pusha
mov     word ptr ds:[ebp+2A7h], 12Fh
cmp     dword ptr ds:[ebp+1578h], 0
jnz     short loc_100174BE
push    1000h
push    40h ; '@'
call    dword ptr ds:[ebp+0ECh]
or      eax, eax
jz      short loc_100174C1
mov     ds:[ebp+1578h], eax
push    eax
call    dword ptr ds:[ebp+0F4h]
or      eax, eax
jz      short loc_100174C1
mov     ds:[ebp+157Ch], eax
mov     ecx, 6
mov     edi, ebp
add     edi, 158Ch

loc_100174A8:
push    ecx
push    edi
push    40h ; '@'
push    40h ; '@'
call    dword ptr ds:[ebp+0ECh]
or      eax, eax
pop     edi
pop     ecx
jz      short loc_100174C1
stosd
loop    loc_100174A8

loc_100174BE:
clc
jmp     short loc_100174C2

loc_100174C1:
stc

loc_100174C2:
popa
retn
sub_1001745A endp




sub_100174C4 proc near
pushf
pusha
cmp     dword ptr ds:[ebp+1578h], 0
jz      short loc_10017520
push    dword ptr ds:[ebp+1578h]
call    dword ptr ds:[ebp+0F8h]
push    dword ptr ds:[ebp+1578h]
call    dword ptr ds:[ebp+0F0h]
xor     eax, eax
mov     ds:[ebp+1578h], eax
mov     ds:[ebp+157Ch], eax
mov     ecx, 6
mov     esi, ebp
add     esi, 158Ch

loc_10017509:
lodsd
push    ecx
push    esi
push    eax
push    eax
call    dword ptr ds:[ebp+0F8h]
call    dword ptr ds:[ebp+0F0h]
pop     esi
pop     ecx
loop    loc_10017509

loc_10017520:
popa
popf
retn
sub_100174C4 endp




sub_10017523 proc near
pusha
call    dword ptr ds:[ebp+0D8h]
mov     ecx, eax
cmp     dword ptr ds:[ebp+7D8h], 0
jnz     short loc_10017541
mov     ds:[ebp+7D8h], ecx
clc
jmp     short loc_1001755C

loc_10017541:
sub     ecx, ds:[ebp+7D8h]
cmp     ds:[ebp+7D4h], ecx
jb      short loc_1001755C
pushf
push    5
call    dword ptr ds:[ebp+0D4h]
popf

loc_1001755C:
popa
retn
sub_10017523 endp




sub_1001755E proc near
pusha
cmp     dword ptr ds:[ebp+7A2h], 1
jz      short loc_1001757A
xor     eax, eax
mov     edi, ebp
add     edi, 0BDEh
mov     ecx, 750h
rep stosb

loc_1001757A:
cmp     word ptr ds:[ebp+730h], 0
jnz     loc_10017694
cmp     dword ptr ds:[ebp+1588h], 1
jz      loc_1001763F
mov     eax, ds:[ebp+71Ch]
mov     ds:[ebp+720h], eax
add     eax, 30h ; '0'
mov     ds:[ebp+724h], eax
mov     ds:[ebp+6F8h], eax
add     eax, 30h ; '0'
mov     ds:[ebp+704h], eax
add     eax, 30h ; '0'
mov     ds:[ebp+710h], eax
add     eax, 30h ; '0'
mov     ds:[ebp+728h], eax
add     eax, 1Eh
mov     ds:[ebp+72Ch], eax
mov     ds:[ebp+6FCh], eax
add     eax, 1Eh
mov     ds:[ebp+708h], eax
add     eax, 1Eh
mov     ds:[ebp+714h], eax
add     eax, 1Eh
mov     ds:[ebp+7A6h], eax
add     eax, 222h
mov     ds:[ebp+7AAh], eax
mov     ds:[ebp+700h], eax
add     eax, 222h
mov     ds:[ebp+70Ch], eax
add     eax, 222h
mov     ds:[ebp+718h], eax
add     eax, 222h
mov     ds:[ebp+7DCh], eax
jmp     loc_10017760

loc_1001763F:
mov     eax, ds:[ebp+157Ch]
mov     ds:[ebp+7A6h], eax
add     eax, 222h
mov     ds:[ebp+7AAh], eax
mov     ds:[ebp+700h], eax
add     eax, 222h
mov     ds:[ebp+70Ch], eax
add     eax, 222h
mov     ds:[ebp+718h], eax
add     eax, 222h
mov     dword ptr ds:[ebp+820h], 222h
mov     ds:[ebp+7DCh], eax
jmp     loc_10017760

loc_10017694:
mov     eax, ds:[ebp+157Ch]
mov     ds:[ebp+7A6h], eax
add     eax, 200h
mov     ds:[ebp+7AAh], eax
mov     ds:[ebp+700h], eax
add     eax, 200h
mov     ds:[ebp+70Ch], eax
add     eax, 200h
mov     ds:[ebp+718h], eax
add     eax, 200h
mov     ds:[ebp+7DCh], eax
mov     esi, ebp
add     esi, 158Ch
lodsd
push    eax
call    dword ptr ds:[ebp+0F4h]
or      eax, eax
jz      short loc_10017763
mov     ds:[ebp+764h], eax
lodsd
push    eax
call    dword ptr ds:[ebp+0F4h]
or      eax, eax
jz      short loc_10017763
mov     ds:[ebp+76Ch], eax
lodsd
push    eax
call    dword ptr ds:[ebp+0F4h]
or      eax, eax
jz      short loc_10017763
mov     ds:[ebp+768h], eax
mov     ds:[ebp+6F8h], eax
lodsd
push    eax
call    dword ptr ds:[ebp+0F4h]
or      eax, eax
jz      short loc_10017763
mov     ds:[ebp+704h], eax
lodsd
push    eax
call    dword ptr ds:[ebp+0F4h]
or      eax, eax
jz      short loc_10017763
mov     ds:[ebp+710h], eax
lodsd
push    eax
call    dword ptr ds:[ebp+0F4h]
or      eax, eax
jz      short loc_10017763
mov     ds:[ebp+78Ah], eax

loc_10017760:
clc
jmp     short loc_10017764

loc_10017763:
stc

loc_10017764:
popa
retn
sub_1001755E endp




sub_10017766 proc near
pusha
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_1001777B
cmp     dword ptr ds:[ebp+1584h], 1
jnz     short loc_10017788

loc_1001777B:
call    sub_10017C87
jb      loc_1001784B
jmp     short loc_10017793

loc_10017788:
call    sub_10017C0D
jb      loc_1001784B

loc_10017793:
call    sub_1001755E
jb      loc_1001784B
call    sub_100166BB
jb      loc_1001784B
call    sub_10017D23
jnb     short loc_10017827
call    sub_100166D5
jb      loc_10017859
mov     esi, 0FFFFFFFFh
call    sub_100160A0
jnz     loc_10017852
mov     esi, ds:[ebp+7AAh]
cmp     word ptr [esi+28h], 4
jb      short loc_10017844
add     esi, 0
mov     edi, ebp
add     edi, 73Bh
mov     ecx, 6
rep movsb
xor     eax, eax
mov     ecx, 3
rep stosb
mov     esi, ebp
add     esi, 734h
mov     ecx, 80h

loc_10017801:
call    sub_10016158
jz      short loc_10017814
inc     word ptr ds:[ebp+742h]
loop    loc_10017801
jmp     short loc_10017844

loc_10017814:
mov     ebx, ds:[ebp+76Ch]
mov     al, [ebx+3]
mov     ds:[ebp+733h], al
jmp     short loc_10017840

loc_10017827:
mov     eax, ds:[ebp+3C6h]
cmp     eax, ds:[ebp+782h]
jz      short loc_10017840
mov     ds:[ebp+782h], eax
jmp     short loc_10017859

loc_10017840:
xor     eax, eax
jmp     short loc_10017877

loc_10017844:
mov     eax, 0CFh
jmp     short loc_1001786C

loc_1001784B:
mov     eax, 0C8h
jmp     short loc_1001786C

loc_10017852:
mov     eax, 0CCh
jmp     short loc_1001786C

loc_10017859:
mov     eax, 0C9h
jmp     short loc_1001786C
db 0B8h
db 0CAh
db    0
db    0
db    0
db 0EBh
db    5
db 0B8h
db 0CBh
db    0
db    0
db    0

loc_1001786C:
call    sub_100179A6
mov     eax, 0FFFFFFFFh
stc

loc_10017877:
mov     edi, esp
mov     ss:[edi+1Ch], eax
popa
retn
sub_10017766 endp




sub_1001787F proc near
mov     dword ptr ds:[ebp+7A2h], 0
mov     byte ptr ds:[ebp+0ADEh], 0
mov     dword ptr ds:[ebp+792h], 0
mov     dword ptr ds:[ebp+7E0h], 0
mov     dword ptr ds:[ebp+3B6h], 0
mov     dword ptr ds:[ebp+3BAh], 0
mov     byte ptr ds:[ebp+733h], 0
call    sub_1001745A
jb      locret_100179A5
mov     dword ptr ds:[ebp+782h], 0

loc_100178DC:
cmp     dword ptr ds:[ebp+782h], 0
jnz     short loc_10017903
mov     word ptr ds:[ebp+730h], 0FFh
call    sub_10017766
jb      short loc_10017926
mov     word ptr ds:[ebp+730h], 1
jmp     short loc_1001796C

loc_10017903:
mov     word ptr ds:[ebp+730h], 0
mov     dword ptr ds:[ebp+782h], 1
call    sub_10017A3F
jnb     short loc_1001796C
inc     dword ptr ds:[ebp+782h]

loc_10017926:
call    sub_10017A70
cmp     dword ptr ds:[ebp+782h], 0
jnz     short loc_10017956
mov     eax, ds:[ebp+792h]
inc     eax
cmp     al, ds:[ebp+0ADEh]
jge     short loc_1001794F
inc     dword ptr ds:[ebp+792h]
jmp     short loc_100178DC

loc_1001794F:
inc     dword ptr ds:[ebp+782h]

loc_10017956:
cmp     dword ptr ds:[ebp+782h], 2
jge     short loc_100179A4
mov     eax, ds:[ebp+782h]
jmp     loc_100178DC

loc_1001796C:
mov     dword ptr ds:[ebp+7A2h], 1
call    sub_100188E4
jnb     short loc_1001799C
mov     dword ptr ds:[ebp+7A2h], 0
cmp     dword ptr ds:[ebp+782h], 0
jz      short loc_10017926
inc     dword ptr ds:[ebp+782h]
jmp     short loc_10017926

loc_1001799C:
call    sub_100179C3
clc
jmp     short locret_100179A5

loc_100179A4:
stc

locret_100179A5:
retn
sub_1001787F endp




sub_100179A6 proc near
push    ebx
mov     ebx, ds:[ebp+782h]
shl     ebx, 2
mov     ds:[ebp+ebx+796h], eax
mov     ds:[ebp+2A7h], ax
pop     ebx
retn
sub_100179A6 endp




sub_100179C3 proc near
push    eax
mov     eax, 0
mov     ds:[ebp+796h], eax
mov     ds:[ebp+79Ah], eax
mov     ds:[ebp+79Eh], eax
pop     eax
retn
sub_100179C3 endp




sub_100179E0 proc near
cmp     word ptr ds:[ebp+730h], 1
jz      short locret_100179FC
cmp     dword ptr ds:[ebp+1588h], 1
jz      short locret_100179FC
call    sub_10016CCB
jmp     short $+2

locret_100179FC:
retn
sub_100179E0 endp




sub_100179FD proc near
cmp     word ptr ds:[ebp+730h], 1
jz      short loc_10017A20
cmp     dword ptr ds:[ebp+1588h], 1
jnz     short loc_10017A19
call    sub_100169A0
jmp     short locret_10017A25

loc_10017A19:
call    sub_10016F7A
jmp     short locret_10017A25

loc_10017A20:
call    sub_1001645F

locret_10017A25:
retn
sub_100179FD endp




sub_10017A26 proc near
cmp     dword ptr ds:[ebp+1588h], 1
jnz     short loc_10017A37
call    sub_100169A0
jmp     short locret_10017A3E

loc_10017A37:
call    sub_10016F7A
jmp     short $+2

locret_10017A3E:
retn
sub_10017A26 endp




sub_10017A3F proc near
cmp     dword ptr ds:[ebp+1588h], 1
jnz     short loc_10017A50
call    sub_10016B89
jmp     short locret_10017A55

loc_10017A50:
call    sub_100172A7

locret_10017A55:
retn
sub_10017A3F endp

db  3Eh ; >
db  83h
db 0BDh
db  88h
db  15h
db    0
db    0
db    1
db  75h ; u
db    7
db 0E8h
db  18h
db 0EEh
db 0FFh
db 0FFh
db 0EBh
db    8
db  52h ; R
db  3Eh ; >
db 0FFh
db  95h
db  44h ; D
db    1
db    0
db    0
db 0C3h



sub_10017A70 proc near
pusha
cmp     dword ptr ds:[ebp+3B6h], 1
jz      short loc_10017AD8
cmp     word ptr ds:[ebp+730h], 0
jnz     short loc_10017ADB
cmp     dword ptr ds:[ebp+1588h], 1
jz      short loc_10017AAC
mov     edx, ds:[ebp+7E0h]
or      edx, edx
jz      short loc_10017AA3
push    edx
call    dword ptr ds:[ebp+144h]

loc_10017AA3:
call    dword ptr ds:[ebp+138h]
jmp     short loc_10017AD8

loc_10017AAC:
mov     edx, ds:[ebp+7E0h]
or      edx, edx
jz      short loc_10017AC7
call    sub_1001687D
mov     dword ptr ds:[ebp+7E0h], 0

loc_10017AC7:
cmp     dword ptr ds:[ebp+100h], 0
jz      short loc_10017AD8
call    dword ptr ds:[ebp+100h]

loc_10017AD8:
clc
jmp     short loc_10017B17

loc_10017ADB:
cmp     byte ptr ds:[ebp+733h], 0
jz      short loc_10017AD8
mov     esi, ebp
add     esi, 734h
call    sub_10016186
jnz     short loc_10017B17
mov     dword ptr ds:[ebp+7D4h], 3A98h
mov     ebx, ds:[ebp+76Ch]
call    sub_1001626D
mov     byte ptr ds:[ebp+733h], 0
clc
jz      short loc_10017B17
stc

loc_10017B17:
popa
retn
sub_10017A70 endp




sub_10017B19 proc near
cmp     dword ptr ds:[ebp+1574h], 0
jz      short loc_10017B3C
push    dword ptr ds:[ebp+1574h]
call    dword ptr ds:[ebp+0E4h]
mov     dword ptr ds:[ebp+1574h], 0

loc_10017B3C:
cmp     dword ptr ds:[ebp+1580h], 0
jz      short loc_10017B5F
push    dword ptr ds:[ebp+1580h]
call    dword ptr ds:[ebp+0E4h]
mov     dword ptr ds:[ebp+1580h], 0

loc_10017B5F:
cmp     dword ptr ds:[ebp+1610h], 0
jz      short locret_10017B82
push    dword ptr ds:[ebp+1610h]
call    dword ptr ds:[ebp+0E4h]
mov     dword ptr ds:[ebp+1610h], 0

locret_10017B82:
retn
sub_10017B19 endp




sub_10017B83 proc near
push    edi
push    eax
push    ecx
xor     eax, eax
mov     ecx, 2
repe scasd
pop     ecx
pop     eax
pop     edi
retn
sub_10017B83 endp




sub_10017B93 proc near
pusha
cmp     dword ptr ds:[ebp+1574h], 0
jnz     short loc_10017BFA
mov     edi, ebp
add     edi, 0FCh
mov     esi, ebp
add     esi, 1330h
push    esi
call    dword ptr ds:[ebp+0E0h]
or      eax, eax
jz      short loc_10017BFF
mov     ds:[ebp+1574h], eax
call    sub_10017D01

loc_10017BC6:
cmp     byte ptr [esi], 0
jz      short loc_10017BFA
push    edi
mov     edi, ds:[ebp+157Ch]
call    sub_10017D16
pop     edi
push    dword ptr ds:[ebp+157Ch]
push    dword ptr ds:[ebp+1574h]
call    dword ptr ds:[ebp+0E8h]
or      eax, eax
jz      short loc_10017BFF
stosd
call    sub_10017D01
jmp     short loc_10017BC6

loc_10017BFA:
xor     eax, eax
clc
jmp     short loc_10017C05

loc_10017BFF:
mov     eax, 0FFFFFFFFh
stc

loc_10017C05:
mov     edi, esp
mov     ss:[edi+1Ch], eax
popa
retn
sub_10017B93 endp




sub_10017C0D proc near
pusha
cmp     dword ptr ds:[ebp+1580h], 0
jnz     short loc_10017C74
mov     edi, ebp
add     edi, 130h
mov     esi, ebp
add     esi, 13C0h
push    esi
call    dword ptr ds:[ebp+0E0h]
or      eax, eax
jz      short loc_10017C79
mov     ds:[ebp+1580h], eax
call    sub_10017D01

loc_10017C40:
cmp     byte ptr [esi], 0
jz      short loc_10017C74
push    edi
mov     edi, ds:[ebp+157Ch]
call    sub_10017D16
pop     edi
push    dword ptr ds:[ebp+157Ch]
push    dword ptr ds:[ebp+1580h]
call    dword ptr ds:[ebp+0E8h]
or      eax, eax
jz      short loc_10017C79
stosd
call    sub_10017D01
jmp     short loc_10017C40

loc_10017C74:
xor     eax, eax
clc
jmp     short loc_10017C7F

loc_10017C79:
mov     eax, 0FFFFFFFFh
stc

loc_10017C7F:
mov     edi, esp
mov     ss:[edi+1Ch], eax
popa
retn
sub_10017C0D endp




sub_10017C87 proc near
pusha
cmp     dword ptr ds:[ebp+1610h], 0
jnz     short loc_10017CEE
mov     edi, ebp
add     edi, 0DCh
mov     esi, ebp
add     esi, 1470h
push    esi
call    dword ptr ds:[ebp+0E0h]
or      eax, eax
jz      short loc_10017CF3
mov     ds:[ebp+1610h], eax
call    sub_10017D01

loc_10017CBA:
cmp     byte ptr [esi], 0
jz      short loc_10017CEE
push    edi
mov     edi, ds:[ebp+157Ch]
call    sub_10017D16
pop     edi
push    dword ptr ds:[ebp+157Ch]
push    dword ptr ds:[ebp+1610h]
call    dword ptr ds:[ebp+0E8h]
or      eax, eax
jz      short loc_10017CF3
stosd
call    sub_10017D01
jmp     short loc_10017CBA

loc_10017CEE:
xor     eax, eax
clc
jmp     short loc_10017CF9

loc_10017CF3:
mov     eax, 0FFFFFFFFh
stc

loc_10017CF9:
mov     edi, esp
mov     ss:[edi+1Ch], eax
popa
retn
sub_10017C87 endp




sub_10017D01 proc near
push    eax
push    ecx
xor     ecx, ecx

loc_10017D05:
inc     ecx
cmp     ecx, 8000h
jnb     short loc_10017D13
lodsb
or      al, al
jnz     short loc_10017D05

loc_10017D13:
pop     ecx
pop     eax
retn
sub_10017D01 endp




sub_10017D16 proc near
push    edi
push    esi
push    eax

loc_10017D19:
lodsb
stosb
or      al, al
jnz     short loc_10017D19
pop     eax
pop     esi
pop     edi
retn
sub_10017D16 endp




sub_10017D23 proc near
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_10017D34
call    sub_1001CE07
jmp     short locret_10017D39

loc_10017D34:
call    sub_1001D085

locret_10017D39:
retn
sub_10017D23 endp




sub_10017D3A proc near
pusha
mov     ebx, eax
call    sub_1001BBBB
stosd
mov     ax, ds:[ebp+1C7h]
stosw
mov     al, bl
stosb
xor     eax, eax
stosb
mov     ax, ds:[ebp+7E6h]
stosw
mov     esi, ebp
add     esi, 7BEh
mov     ecx, 10h
rep movsb
mov     esi, ebp
add     esi, 7AEh
mov     ecx, 10h
rep movsb
mov     ecx, 3
xor     eax, eax
rep stosb
mov     eax, ds:[ebp+7E0h]
stosd
mov     eax, ds
stosw
mov     eax, ebp
add     eax, 734h
stosd
popa
retn
sub_10017D3A endp




sub_10017D9A proc near
pusha
mov     ebx, eax
call    sub_1001BBBB
stosd
mov     ax, ds:[ebp+1C7h]
stosw
mov     al, bl
stosb
mov     ax, ds:[ebp+730h]
stosb
mov     ax, ds:[ebp+7E6h]
stosw
mov     esi, ebp
add     esi, 744h
mov     ecx, 10h
rep movsb
mov     esi, ebp
add     esi, 734h
mov     ecx, 10h
rep movsb
mov     al, ds:[ebp+733h]
stosb
xor     eax, eax
stosb
mov     al, ds:[ebp+770h]
stosb
xor     eax, eax
stosd
mov     eax, ds
stosw
mov     eax, ebp
add     eax, 734h
stosd
popa
retn
sub_10017D9A endp




sub_10017E05 proc near
pushf
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_10017E17
call    sub_1001CF5D
jmp     short loc_10017E1C

loc_10017E17:
call    sub_1001D1BE

loc_10017E1C:
popf
retn
sub_10017E05 endp




sub_10017E1E proc near
pushf
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_10017E30
call    sub_1001CFDD
jmp     short loc_10017E35

loc_10017E30:
call    sub_1001D263

loc_10017E35:
popf
retn
sub_10017E1E endp

db  3Eh ; >
db 0FFh
db  95h
db  8Ch
db    1
db    0
db    0
db  3Eh ; >
db  89h
db  85h
db 0C2h
db    3
db    0
db    0
db  3Eh ; >
db  80h
db 0BDh
db  51h ; Q
db  15h
db    0
db    0
db    1
db  75h ; u
db    7
db 0E8h
db    9
db  52h ; R
db    0
db    0
db 0EBh
db    5
db 0E8h
db 0CAh
db  54h ; T
db    0
db    0
db 0C3h



sub_10017E5C proc near
pusha
push    eax
push    eax
push    ecx
xor     eax, eax
mov     edi, ds:[ebp+7A6h]
mov     ecx, 222h
rep stosb
mov     edi, ds:[ebp+7AAh]
mov     ecx, 666h
rep stosb
pop     ecx
pop     eax
mov     edi, ds:[ebp+7A6h]
mov     word ptr [edi+4], 2Ah ; '*'
cmp     ah, 5
jz      short loc_10017EA8
cmp     ah, 4
jz      short loc_10017EA1
cmp     ah, 0Fh
jz      short loc_10017EA1
cmp     ah, 12h
jnz     short loc_10017EAC

loc_10017EA1:
add     word ptr [edi+4], 4
jmp     short loc_10017EAC

loc_10017EA8:
add     [edi+4], cx

loc_10017EAC:
mov     esi, ds:[ebp+7A6h]
mov     [esi+6], ah
mov     [esi+9], al
mov     ax, ds:[ebp+1C7h]
mov     [esi+0Ah], ax
call    sub_1001BBBB
mov     [esi+0Ch], eax
add     esi, 11h
mov     edi, esi
mov     esi, ebp
add     esi, 7AEh
mov     ecx, 0Ah
cmp     dword ptr ds:[ebp+1588h], 1
jnz     short loc_10017EEF
add     esi, 2
add     ecx, 2

loc_10017EEF:
rep movsb
cmp     dword ptr ds:[ebp+1588h], 1
jz      short loc_10017EFF
mov     eax, edx
stosw

loc_10017EFF:
pop     eax
cmp     dword ptr ds:[ebp+1588h], 1
jnz     short loc_10017F46
mov     edi, ebp
add     edi, 838h
cmp     al, 64h ; 'd'
jnb     short loc_10017F25
mov     esi, ebp
add     esi, 7BEh
mov     ecx, 10h
jmp     short loc_10017F42

loc_10017F25:
cmp     ebx, 0FFFFFFFFh
jz      short loc_10017F81
mov     esi, ebp
add     esi, 0BE0h
add     esi, ebx
mov     ecx, 0Ah
mov     eax, ds:[ebp+7F4h]
stosw

loc_10017F42:
rep movsb
jmp     short loc_10017F81

loc_10017F46:
cmp     al, 64h ; 'd'
jb      short loc_10017F81
cmp     ebx, 0FFFFFFFFh
jz      short loc_10017F81
mov     esi, ebp
add     esi, 0BE0h
add     esi, ebx
push    esi
mov     edi, ds:[ebp+728h]
add     edi, 6
mov     eax, edi
mov     ecx, 0Ah
rep movsb
pop     esi
mov     edi, ds:[ebp+720h]
add     edi, 1Ch
push    edi
push    eax
call    dword ptr ds:[ebp+148h]

loc_10017F81:
popa
retn
sub_10017E5C endp




sub_10017F83 proc near
pusha
cmp     dword ptr ds:[ebp+388h], 1
jnz     short loc_10017F92
mov     ah, 6
jmp     short loc_10017F94

loc_10017F92:
mov     ah, 1

loc_10017F94:
mov     al, ds:[ebp+1C3h]
mov     ecx, 4Ch ; 'L'
mov     edx, ds:[ebp+7E0h]
call    sub_100188CC
mov     edi, ds:[ebp+7A6h]
call    sub_1001B07C
add     [edi+4], ax
call    sub_10017A26
jb      loc_1001807E
mov     esi, ds:[ebp+7AAh]
cmp     byte ptr [esi+10h], 0
jz      short loc_10017FE3
xor     eax, eax
mov     al, [esi+10h]

loc_10017FD9:
call    sub_100179A6
jmp     loc_1001807E

loc_10017FE3:
mov     edi, esi
call    sub_1001B2AA
or      al, al
jnz     short loc_10017FD9
add     esi, 2Ah ; '*'
mov     ax, [esi+22h]
cmp     ax, [esi+20h]
jbe     short loc_10018007
mov     eax, 68h ; 'h'
call    sub_100179A6
jmp     short loc_1001807E

loc_10018007:
mov     ax, [esi+20h]
mov     ds:[ebp+7E4h], ax
mov     ax, [esi+26h]
mov     ds:[ebp+1CDh], ax
mov     ax, [esi+24h]
mov     ds:[ebp+1C5h], ax
mov     byte ptr ds:[ebp+1C4h], 4
and     eax, 3
cmp     eax, 3
jnz     short loc_10018046
add     byte ptr ds:[ebp+1C4h], 4

loc_10018046:
cmp     dword ptr ds:[ebp+1588h], 1
jnz     short loc_10018062
mov     esi, ebp
add     esi, 826h
mov     edi, ebp
add     edi, 7C0h
jmp     short loc_10018074

loc_10018062:
mov     esi, ds:[ebp+72Ch]
add     esi, 12h
mov     edi, ebp
add     edi, 7BEh

loc_10018074:
mov     ecx, 0Ah
rep movsb
clc
jmp     short loc_1001807F

loc_1001807E:
stc

loc_1001807F:
popa
retn
sub_10017F83 endp




sub_10018081 proc near
pusha
mov     ah, 1
mov     ecx, 4Ch ; 'L'
mov     ebx, 0FFFFFFFFh
call    sub_100188CC
mov     edi, ds:[ebp+7A6h]
call    sub_1001B07C
add     [edi+4], ax
call    sub_10017A26
jb      short loc_100180F9
mov     esi, ds:[ebp+7AAh]
cmp     byte ptr [esi+10h], 0
jz      short loc_100180C3
xor     eax, eax
mov     al, [esi+10h]

loc_100180BC:
call    sub_100179A6
jmp     short loc_100180F9

loc_100180C3:
mov     edi, esi
call    sub_1001B2AA
or      al, al
jnz     short loc_100180BC
add     esi, 2Ah ; '*'
mov     ax, [esi+22h]
cmp     ax, [esi+20h]
jbe     short loc_100180E7
mov     eax, 68h ; 'h'
call    sub_100179A6
jmp     short loc_100180F9

loc_100180E7:
dec     word ptr ds:[ebp+7E4h]
xor     eax, eax
call    sub_1001EE49
clc
jmp     short loc_100180FA

loc_100180F9:
stc

loc_100180FA:
popa
retn
sub_10018081 endp

db  60h ; `
db  25h ; %
db 0FFh
db    0
db    0
db    0
db  8Bh
db 0D0h
db  80h
db 0FAh
db  64h ; d
db  73h ; s
db    9
db  3Eh ; >
db  8Bh
db  95h
db 0E0h
db    7
db    0
db    0
db 0EBh
db  15h
db  83h
db 0EAh
db  64h ; d
db 0C1h
db 0E2h
db    2
db  8Bh
db 0DAh
db 0D1h
db 0E2h
db    3
db 0DAh
db  66h ; f
db  3Eh ; >
db  8Bh
db  94h
db  1Dh
db 0DEh
db  0Bh
db    0
db    0
db 0B4h
db    3
db 0B9h
db  24h ; $
db    0
db    0
db    0
db 0E8h
db  99h
db    7
db    0
db    0
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db 0E8h
db  69h ; i
db  30h ; 0
db    0
db    0
db  66h ; f
db    1
db  47h ; G
db    4
db 0E8h
db 0DEh
db 0F8h
db 0FFh
db 0FFh
db  72h ; r
db  47h ; G
db  3Eh ; >
db  8Bh
db 0B5h
db 0AAh
db    7
db    0
db    0
db  80h
db  7Eh ; ~
db  10h
db    0
db  74h ; t
db  0Ch
db  33h ; 3
db 0C0h
db  8Ah
db  46h ; F
db  10h
db 0E8h
db  45h ; E
db 0F8h
db 0FFh
db 0FFh
db 0EBh
db  2Eh ; .
db  8Bh
db 0FEh
db 0E8h
db  58h ; X
db  32h ; 2
db    0
db    0
db  0Ah
db 0C0h
db  75h ; u
db 0EEh
db  83h
db 0C6h
db  2Ah ; *
db  66h ; f
db  8Bh
db  46h ; F
db  22h ; "
db  66h ; f
db  3Bh ; ;
db  46h ; F
db  20h
db  76h ; v
db  0Ch
db 0B8h
db  68h ; h
db    0
db    0
db    0
db 0E8h
db  21h ; !
db 0F8h
db 0FFh
db 0FFh
db 0EBh
db  0Ah
db  33h ; 3
db 0C0h
db 0E8h
db 0BBh
db  6Ch ; l
db    0
db    0
db 0F8h
db 0EBh
db    1
db 0F9h
db  61h ; a
db 0C3h
db  60h ; `
db  50h ; P
db  51h ; Q
db 0B4h
db    4
db  3Eh ; >
db  8Ah
db  85h
db 0C3h
db    1
db    0
db    0
db 0D1h
db 0E1h
db  83h
db 0C1h
db    4
db  3Eh ; >
db  8Bh
db  95h
db 0E0h
db    7
db    0
db    0
db 0E8h
db  1Bh
db    7
db    0
db    0
db  59h ; Y
db  58h ; X
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db  83h
db 0C7h
db  2Ah ; *
db  66h ; f
db 0ABh
db  8Bh
db 0C1h
db  66h ; f
db 0ABh
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db 0E8h
db 0E4h
db  2Eh ; .
db    0
db    0
db  66h ; f
db    1
db  47h ; G
db    4
db 0E8h
db  4Eh ; N
db 0F8h
db 0FFh
db 0FFh
db  72h ; r
db  2Eh ; .
db  3Eh ; >
db  8Bh
db 0B5h
db 0AAh
db    7
db    0
db    0
db  80h
db  7Eh ; ~
db  10h
db    0
db  74h ; t
db  0Ch
db  33h ; 3
db 0C0h
db  8Ah
db  46h ; F
db  10h
db 0E8h
db 0B5h
db 0F7h
db 0FFh
db 0FFh
db 0EBh
db  15h
db  8Bh
db 0FEh
db 0E8h
db 0F3h
db  30h ; 0
db    0
db    0
db  0Ah
db 0C0h
db  75h ; u
db 0EEh
db  33h ; 3
db 0C0h
db 0E8h
db  44h ; D
db  6Ch ; l
db    0
db    0
db 0F8h
db 0EBh
db    1
db 0F9h
db  61h ; a
db 0C3h
db  60h ; `
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db 0E8h
db 0F4h
db  2Eh ; .
db    0
db    0
db  66h ; f
db    1
db  47h ; G
db    4
db 0E8h
db    5
db 0F8h
db 0FFh
db 0FFh
db  72h ; r
db  2Eh ; .
db  3Eh ; >
db  8Bh
db 0B5h
db 0AAh
db    7
db    0
db    0
db  80h
db  7Eh ; ~
db  10h
db    0
db  74h ; t
db  0Ch
db  33h ; 3
db 0C0h
db  8Ah
db  46h ; F
db  10h
db 0E8h
db  6Ch ; l
db 0F7h
db 0FFh
db 0FFh
db 0EBh
db  15h
db  8Bh
db 0FEh
db 0E8h
db  21h ; !
db  31h ; 1
db    0
db    0
db  0Ah
db 0C0h
db  75h ; u
db 0EEh
db  33h ; 3
db 0C0h
db 0E8h
db 0FBh
db  6Bh ; k
db    0
db    0
db 0F8h
db 0EBh
db    1
db 0F9h
db  61h ; a
db 0C3h



sub_10018254 proc near
pusha
push    eax
mov     eax, edx
call    sub_100179E0
pop     eax
mov     ah, 2
mov     ecx, 2Ah ; '*'
call    sub_100188CC
call    sub_10017A26
jb      short loc_1001829C
mov     esi, ds:[ebp+7AAh]
cmp     byte ptr [esi+10h], 0
jz      short loc_1001828A
xor     eax, eax
mov     al, [esi+10h]
call    sub_100179A6
jmp     short loc_1001829C

loc_1001828A:
inc     word ptr ds:[ebp+7E4h]
xor     eax, eax
call    sub_1001EE49
clc
jmp     short loc_1001829D

loc_1001829C:
stc

loc_1001829D:
popa
retn
sub_10018254 endp




sub_1001829F proc near
pusha
xor     eax, eax
mov     esi, ebp
add     esi, 0BDEh
mov     edi, esi
xor     ebx, ebx
mov     ecx, 9Ch

loc_100182B3:
push    ecx
lodsw
or      eax, eax
jz      short loc_100182E7
call    sub_100179E0
mov     edx, eax
mov     ah, 2
mov     ecx, 2Ah ; '*'
mov     al, bl
add     al, 64h ; 'd'
push    ebx
push    eax
shl     ebx, 2
mov     eax, ebx
shl     ebx, 1
add     ebx, eax
pop     eax
call    sub_100188CC
pop     ebx
call    sub_10017A26
xor     eax, eax
stosw

loc_100182E7:
pop     ecx
inc     ebx
add     esi, 0Ah
mov     edi, esi
loop    loc_100182B3
mov     eax, ds:[ebp+7E0h]
call    sub_100179E0
mov     edx, eax
mov     ah, 2
mov     al, ds:[ebp+1C3h]
mov     ecx, 2Ah ; '*'
call    sub_100188CC
call    sub_10017A26
mov     word ptr ds:[ebp+7E4h], 0
popa
retn
sub_1001829F endp

db  60h ; `
db 0B9h
db  0Ah
db    0
db    0
db    0
db  51h ; Q
db  3Eh ; >
db 0FFh
db  95h
db 0D8h
db    0
db    0
db    0
db  3Ch ; <
db  9Ch
db  59h ; Y
db  72h ; r
db    4
db 0E2h
db 0F1h
db  33h ; 3
db 0C0h
db  8Bh
db 0D0h
db  81h
db 0E2h
db 0FFh
db    0
db    0
db    0
db  75h ; u
db  10h
db  3Eh ; >
db  8Bh
db  85h
db 0E0h
db    7
db    0
db    0
db  3Eh ; >
db  8Ah
db  9Dh
db 0C3h
db    1
db    0
db    0
db 0EBh
db  1Dh
db  8Bh
db 0DAh
db  80h
db 0C3h
db  64h ; d
db 0C1h
db 0E2h
db    2
db  8Bh
db 0C2h
db 0D1h
db 0E2h
db    3
db 0D0h
db  8Bh
db 0F2h
db  3Eh ; >
db  0Fh
db 0B7h
db  84h
db  15h
db 0DEh
db  0Bh
db    0
db    0
db  0Bh
db 0C0h
db  74h ; t
db 0D3h
db 0E8h
db  6Bh ; k
db 0F6h
db 0FFh
db 0FFh
db  8Bh
db 0D0h
db 0B4h
db    3
db  8Ah
db 0C3h
db 0B9h
db  24h ; $
db    0
db    0
db    0
db  8Bh
db 0DEh
db 0E8h
db  45h ; E
db    5
db    0
db    0
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db 0E8h
db  15h
db  2Eh ; .
db    0
db    0
db  66h ; f
db    1
db  47h ; G
db    4
db 0E8h
db  8Ah
db 0F6h
db 0FFh
db 0FFh
db  72h ; r
db  47h ; G
db  3Eh ; >
db  8Bh
db 0B5h
db 0AAh
db    7
db    0
db    0
db  80h
db  7Eh ; ~
db  10h
db    0
db  74h ; t
db  0Ch
db  33h ; 3
db 0C0h
db  8Ah
db  46h ; F
db  10h
db 0E8h
db 0F1h
db 0F5h
db 0FFh
db 0FFh
db 0EBh
db  2Eh ; .
db  8Bh
db 0FEh
db 0E8h
db    4
db  30h ; 0
db    0
db    0
db  0Ah
db 0C0h
db  75h ; u
db 0EEh
db  83h
db 0C6h
db  2Ah ; *
db  66h ; f
db  8Bh
db  46h ; F
db  22h ; "
db  66h ; f
db  3Bh ; ;
db  46h ; F
db  20h
db  76h ; v
db  0Ch
db 0B8h
db  68h ; h
db    0
db    0
db    0
db 0E8h
db 0CDh
db 0F5h
db 0FFh
db 0FFh
db 0EBh
db  0Ah
db  33h ; 3
db 0C0h
db 0E8h
db  67h ; g
db  6Ah ; j
db    0
db    0
db 0F8h
db 0EBh
db    6
db 0B8h
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0F9h
db  8Bh
db 0FCh
db  36h ; 6
db  89h
db  47h ; G
db  1Ch
db  61h ; a
db 0C3h



sub_100183F3 proc near
pusha
push    eax
push    ecx
xor     eax, eax
mov     edi, ds:[ebp+7A6h]
mov     ecx, 200h
rep stosb
mov     edi, ds:[ebp+7AAh]
mov     ecx, 600h
rep stosb
pop     ecx
pop     eax
mov     edi, ds:[ebp+7A6h]
mov     word ptr [edi+4], 2Ah ; '*'
cmp     ah, 5
jz      short loc_10018449
cmp     ah, 4
jnz     short loc_1001843E
mov     esi, ds:[ebp+764h]
add     word ptr [esi+8], 4
add     word ptr [edi+4], 4

loc_1001843E:
jmp     short loc_10018458
db  3Eh ; >
db  8Bh
db 0B5h
db  68h ; h
db    7
db    0
db    0
db 0EBh
db  0Bh

loc_10018449:
mov     esi, ds:[ebp+764h]
add     [edi+4], cx
add     [esi+8], cx

loc_10018458:
mov     esi, ds:[ebp+7A6h]
mov     [esi+6], ah
mov     [esi+9], al
push    eax
movzx   eax, word ptr ds:[ebp+1C7h]
mov     [esi+0Ah], ax
call    sub_1001BBBB
mov     [esi+0Ch], eax
add     esi, 11h
mov     edi, esi
mov     esi, ebp
add     esi, 734h
mov     ecx, 10h
rep movsb
pop     eax
mov     esi, ebp
mov     edi, ebp
add     esi, 744h
add     edi, 772h
mov     ecx, 10h
rep movsb
cmp     al, 64h ; 'd'
jb      short loc_100184D7
and     eax, 0FFh
mov     edi, eax
sub     edi, 64h ; 'd'
shl     edi, 3
add     edi, 0BDEh
add     edi, ebp
call    sub_10017B83
jz      short loc_100184D7
mov     esi, edi
mov     edi, ebp
add     edi, 77Ah
mov     ecx, 8
rep movsb

loc_100184D7:
popa
retn
sub_100183F3 endp




sub_100184D9 proc near
pusha
cmp     dword ptr ds:[ebp+388h], 1
jnz     short loc_100184E8
mov     ah, 6
jmp     short loc_100184EA

loc_100184E8:
mov     ah, 1

loc_100184EA:
mov     al, ds:[ebp+1C3h]
mov     ecx, 4Ch ; 'L'
call    sub_100188CC
mov     edi, ds:[ebp+7A6h]
call    sub_1001B07C
add     [edi+4], ax
call    sub_1001645F
jb      loc_100185B1
mov     esi, ds:[ebp+7AAh]
cmp     byte ptr [esi+10h], 0
jz      short loc_10018532
xor     eax, eax
mov     al, [esi+10h]

loc_10018528:
call    sub_100179A6
jmp     loc_100185B1

loc_10018532:
mov     edi, esi
call    sub_1001B2AA
or      al, al
jnz     short loc_10018528
add     esi, 2Ah ; '*'
mov     ax, [esi+22h]
cmp     ax, [esi+20h]
jbe     short loc_10018556
mov     eax, 68h ; 'h'
call    sub_100179A6
jmp     short loc_100185B1

loc_10018556:
mov     ax, [esi+20h]
mov     ds:[ebp+7E4h], ax
mov     ax, [esi+26h]
mov     ds:[ebp+1CDh], ax
mov     ax, [esi+24h]
mov     ds:[ebp+1C5h], ax
mov     byte ptr ds:[ebp+1C4h], 4
and     eax, 3
cmp     eax, 3
jnz     short loc_10018595
add     byte ptr ds:[ebp+1C4h], 4

loc_10018595:
mov     esi, ds:[ebp+768h]
add     esi, 0Ah
mov     edi, ebp
add     edi, 744h
mov     ecx, 10h
rep movsb
clc
jmp     short loc_100185B2

loc_100185B1:
stc

loc_100185B2:
popa
retn
sub_100184D9 endp




sub_100185B4 proc near
pusha
mov     edx, eax
mov     ah, 1
mov     ecx, 4Ch ; 'L'
call    sub_100188CC
mov     edi, ds:[ebp+7A6h]
call    sub_1001B07C
add     [edi+4], ax
call    sub_1001645F
jb      short loc_1001864A
mov     esi, ds:[ebp+7AAh]
cmp     byte ptr [esi+10h], 0
jz      short loc_100185F3
xor     eax, eax
mov     al, [esi+10h]

loc_100185EC:
call    sub_100179A6
jmp     short loc_1001864A

loc_100185F3:
mov     edi, esi
call    sub_1001B2AA
or      al, al
jnz     short loc_100185EC
add     esi, 2Ah ; '*'
mov     ax, [esi+22h]
cmp     ax, [esi+20h]
jbe     short loc_10018617
mov     eax, 68h ; 'h'
call    sub_100179A6
jmp     short loc_1001864A

loc_10018617:
dec     word ptr ds:[ebp+7E4h]
mov     edi, edx
sub     edi, 64h ; 'd'
shl     edi, 3
add     edi, ebp
add     edi, 0BDEh
mov     esi, ds:[ebp+768h]
add     esi, 12h
mov     ecx, 8
rep movsb
xor     eax, eax
call    sub_1001EE49
clc
jmp     short loc_1001864B

loc_1001864A:
stc

loc_1001864B:
popa
retn
sub_100185B4 endp

db  60h ; `
db 0B4h
db    3
db 0B9h
db  24h ; $
db    0
db    0
db    0
db 0E8h
db  72h ; r
db    2
db    0
db    0
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db 0E8h
db  42h ; B
db  2Bh ; +
db    0
db    0
db  66h ; f
db    1
db  47h ; G
db    4
db 0E8h
db 0F0h
db 0DDh
db 0FFh
db 0FFh
db  72h ; r
db  47h ; G
db  3Eh ; >
db  8Bh
db 0B5h
db 0AAh
db    7
db    0
db    0
db  80h
db  7Eh ; ~
db  10h
db    0
db  74h ; t
db  0Ch
db  33h ; 3
db 0C0h
db  8Ah
db  46h ; F
db  10h
db 0E8h
db  1Eh
db 0F3h
db 0FFh
db 0FFh
db 0EBh
db  2Eh ; .
db  8Bh
db 0FEh
db 0E8h
db  31h ; 1
db  2Dh ; -
db    0
db    0
db  0Ah
db 0C0h
db  75h ; u
db 0EEh
db  83h
db 0C6h
db  2Ah ; *
db  66h ; f
db  8Bh
db  46h ; F
db  22h ; "
db  66h ; f
db  3Bh ; ;
db  46h ; F
db  20h
db  76h ; v
db  0Ch
db 0B8h
db  68h ; h
db    0
db    0
db    0
db 0E8h
db 0FAh
db 0F2h
db 0FFh
db 0FFh
db 0EBh
db  0Ah
db  33h ; 3
db 0C0h
db 0E8h
db  94h
db  67h ; g
db    0
db    0
db 0F8h
db 0EBh
db    1
db 0F9h
db  61h ; a
db 0C3h
db  60h ; `
db  50h ; P
db  51h ; Q
db 0B4h
db    4
db  3Eh ; >
db  8Ah
db  85h
db 0C3h
db    1
db    0
db    0
db 0D1h
db 0E1h
db  83h
db 0C1h
db    4
db 0E8h
db 0FBh
db    1
db    0
db    0
db  59h ; Y
db  58h ; X
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db  83h
db 0C7h
db  2Ah ; *
db  66h ; f
db 0ABh
db  8Bh
db 0C1h
db  66h ; f
db 0ABh
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db 0E8h
db 0C4h
db  29h ; )
db    0
db    0
db  66h ; f
db    1
db  47h ; G
db    4
db 0E8h
db  67h ; g
db 0DDh
db 0FFh
db 0FFh
db  72h ; r
db  2Eh ; .
db  3Eh ; >
db  8Bh
db 0B5h
db 0AAh
db    7
db    0
db    0
db  80h
db  7Eh ; ~
db  10h
db    0
db  74h ; t
db  0Ch
db  33h ; 3
db 0C0h
db  8Ah
db  46h ; F
db  10h
db 0E8h
db  95h
db 0F2h
db 0FFh
db 0FFh
db 0EBh
db  15h
db  8Bh
db 0FEh
db 0E8h
db 0D3h
db  2Bh ; +
db    0
db    0
db  0Ah
db 0C0h
db  75h ; u
db 0EEh
db  33h ; 3
db 0C0h
db 0E8h
db  24h ; $
db  67h ; g
db    0
db    0
db 0F8h
db 0EBh
db    1
db 0F9h
db  61h ; a
db 0C3h
db  60h ; `
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db 0E8h
db 0D4h
db  29h ; )
db    0
db    0
db  66h ; f
db    1
db  47h ; G
db    4
db 0E8h
db  1Eh
db 0DDh
db 0FFh
db 0FFh
db  72h ; r
db  2Eh ; .
db  3Eh ; >
db  8Bh
db 0B5h
db 0AAh
db    7
db    0
db    0
db  80h
db  7Eh ; ~
db  10h
db    0
db  74h ; t
db  0Ch
db  33h ; 3
db 0C0h
db  8Ah
db  46h ; F
db  10h
db 0E8h
db  4Ch ; L
db 0F2h
db 0FFh
db 0FFh
db 0EBh
db  15h
db  8Bh
db 0FEh
db 0E8h
db    1
db  2Ch ; ,
db    0
db    0
db  0Ah
db 0C0h
db  75h ; u
db 0EEh
db  33h ; 3
db 0C0h
db 0E8h
db 0DBh
db  66h ; f
db    0
db    0
db 0F8h
db 0EBh
db    1
db 0F9h
db  61h ; a
db 0C3h



sub_10018774 proc near
pusha
mov     ah, 2
mov     ecx, 2Ah ; '*'
call    sub_100188CC
call    sub_1001645F
jb      short loc_100187B3
mov     esi, ds:[ebp+7AAh]
cmp     byte ptr [esi+10h], 0
jz      short loc_100187A1
xor     eax, eax
mov     al, [esi+10h]
call    sub_100179A6
jmp     short loc_100187B3

loc_100187A1:
inc     word ptr ds:[ebp+7E4h]
xor     eax, eax
call    sub_1001EE49
clc
jmp     short loc_100187B4

loc_100187B3:
stc

loc_100187B4:
popa
retn
sub_10018774 endp




sub_100187B6 proc near
pusha
xor     eax, eax
mov     esi, ebp
add     esi, 0BDEh
xor     ebx, ebx
mov     ecx, 9Ch

loc_100187C8:
mov     edi, esi
push    ecx
call    sub_10017B83
jz      short loc_100187F1
mov     ah, 2
mov     ecx, 2Ah ; '*'
mov     al, bl
add     al, 64h ; 'd'
call    sub_100188CC
call    sub_1001645F
xor     eax, eax
mov     ecx, 4
rep stosw

loc_100187F1:
pop     ecx
inc     ebx
add     esi, 8
loop    loc_100187C8
mov     ah, 2
mov     al, ds:[ebp+1C3h]
mov     ecx, 2Ah ; '*'
call    sub_100188CC
call    sub_1001645F
popa
retn
sub_100187B6 endp

db  60h ; `
db 0B9h
db  0Ah
db    0
db    0
db    0
db  51h ; Q
db  3Eh ; >
db 0FFh
db  95h
db 0D8h
db    0
db    0
db    0
db  3Ch ; <
db  9Ch
db  59h ; Y
db  72h ; r
db    4
db 0E2h
db 0F1h
db  33h ; 3
db 0C0h
db  8Bh
db 0D0h
db  81h
db 0E2h
db 0FFh
db    0
db    0
db    0
db  75h ; u
db    9
db  3Eh ; >
db  8Ah
db  85h
db 0C3h
db    1
db    0
db    0
db 0EBh
db  18h
db  8Bh
db 0FAh
db  8Bh
db 0C2h
db    4
db  64h ; d
db 0C1h
db 0E7h
db    3
db  81h
db 0C7h
db 0DEh
db  0Bh
db    0
db    0
db    3
db 0FDh
db 0E8h
db  31h ; 1
db 0F3h
db 0FFh
db 0FFh
db  74h ; t
db 0DFh
db 0B4h
db    3
db 0B9h
db  24h ; $
db    0
db    0
db    0
db 0E8h
db  6Ch ; l
db    0
db    0
db    0
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db 0E8h
db  3Ch ; <
db  29h ; )
db    0
db    0
db  66h ; f
db    1
db  47h ; G
db    4
db 0E8h
db 0EAh
db 0DBh
db 0FFh
db 0FFh
db  72h ; r
db  47h ; G
db  3Eh ; >
db  8Bh
db 0B5h
db 0AAh
db    7
db    0
db    0
db  80h
db  7Eh ; ~
db  10h
db    0
db  74h ; t
db  0Ch
db  33h ; 3
db 0C0h
db  8Ah
db  46h ; F
db  10h
db 0E8h
db  18h
db 0F1h
db 0FFh
db 0FFh
db 0EBh
db  2Eh ; .
db  8Bh
db 0FEh
db 0E8h
db  2Bh ; +
db  2Bh ; +
db    0
db    0
db  0Ah
db 0C0h
db  75h ; u
db 0EEh
db  83h
db 0C6h
db  2Ah ; *
db  66h ; f
db  8Bh
db  46h ; F
db  22h ; "
db  66h ; f
db  3Bh ; ;
db  46h ; F
db  20h
db  76h ; v
db  0Ch
db 0B8h
db  68h ; h
db    0
db    0
db    0
db 0E8h
db 0F4h
db 0F0h
db 0FFh
db 0FFh
db 0EBh
db  0Ah
db  33h ; 3
db 0C0h
db 0E8h
db  8Eh
db  65h ; e
db    0
db    0
db 0F8h
db 0EBh
db    6
db 0B8h
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0F9h
db  8Bh
db 0FCh
db  36h ; 6
db  89h
db  47h ; G
db  1Ch
db  61h ; a
db 0C3h



sub_100188CC proc near
cmp     word ptr ds:[ebp+730h], 1
jnz     short loc_100188DE
call    sub_100183F3
jmp     short locret_100188E3

loc_100188DE:
call    sub_10017E5C

locret_100188E3:
retn
sub_100188CC endp




sub_100188E4 proc near
cmp     word ptr ds:[ebp+730h], 1
jnz     short loc_100188F6
call    sub_100184D9
jmp     short loc_100188FB

loc_100188F6:
call    sub_10017F83

loc_100188FB:
jb      short locret_10018909
mov     al, ds:[ebp+1C3h]
call    sub_10017E05

locret_10018909:
retn
sub_100188E4 endp




sub_1001890A proc near
cmp     word ptr ds:[ebp+730h], 1
jnz     short loc_1001891C
call    sub_100185B4
jmp     short locret_10018921

loc_1001891C:
call    sub_10018081

locret_10018921:
retn
sub_1001890A endp

db  66h ; f
db  3Eh ; >
db  83h
db 0BDh
db  30h ; 0
db    7
db    0
db    0
db    1
db  75h ; u
db    7
db 0E8h
db  1Bh
db 0FDh
db 0FFh
db 0FFh
db 0EBh
db    5
db 0E8h
db 0C3h
db 0F7h
db 0FFh
db 0FFh
db 0C3h
db  66h ; f
db  3Eh ; >
db  83h
db 0BDh
db  30h ; 0
db    7
db    0
db    0
db    1
db  75h ; u
db    7
db 0E8h
db  71h ; q
db 0FDh
db 0FFh
db 0FFh
db 0EBh
db    5
db 0E8h
db  43h ; C
db 0F8h
db 0FFh
db 0FFh
db 0C3h
db  60h ; `
db  50h ; P
db  51h ; Q
db 0B4h
db    5
db  3Eh ; >
db  8Ah
db  85h
db 0C3h
db    1
db    0
db    0
db 0D1h
db 0E1h
db  83h
db 0C1h
db    4
db  3Eh ; >
db  8Bh
db  95h
db 0E0h
db    7
db    0
db    0
db 0E8h
db  5Dh ; ]
db 0FFh
db 0FFh
db 0FFh
db  59h ; Y
db  58h ; X
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db  83h
db 0C7h
db  2Ah ; *
db  66h ; f
db 0ABh
db  8Bh
db 0C1h
db  66h ; f
db 0ABh
db  61h ; a
db 0C3h
db  66h ; f
db  3Eh ; >
db  83h
db 0BDh
db  30h ; 0
db    7
db    0
db    0
db    1
db  75h ; u
db    7
db 0E8h
db  98h
db 0FDh
db 0FFh
db 0FFh
db 0EBh
db    5
db 0E8h
db  71h ; q
db 0F8h
db 0FFh
db 0FFh
db 0C3h



sub_1001899B proc near
cmp     word ptr ds:[ebp+730h], 1
jnz     short loc_100189AD
call    sub_10018774
jmp     short locret_100189B2

loc_100189AD:
call    sub_10018254

locret_100189B2:
retn
sub_1001899B endp




sub_100189B3 proc near
cmp     dword ptr ds:[ebp+3B6h], 1
jz      short loc_100189D4
cmp     word ptr ds:[ebp+730h], 1
jnz     short loc_100189CF
call    sub_100187B6
jmp     short loc_100189D4

loc_100189CF:
call    sub_1001829F

loc_100189D4:
mov     al, ds:[ebp+1C3h]
call    sub_10017E1E
retn
sub_100189B3 endp

unk_100189E1 db  66h ; f
db  3Eh ; >
db  83h
db 0BDh
db  30h ; 0
db    7
db    0
db    0
db    1
db  75h ; u
db    7
db 0E8h
db  21h ; !
db 0FEh
db 0FFh
db 0FFh
db 0EBh
db    5
db 0E8h
db  2Ah ; *
db 0F9h
db 0FFh
db 0FFh
db 0C3h



sub_100189F9 proc near
pusha
push    ebx
push    ecx
mov     ecx, 4
mov     ah, 0Fh
or      al, al
jz      short loc_10018A09
mov     ah, 12h

loc_10018A09:
mov     al, ds:[ebp+1C3h]
call    sub_100188CC
pop     ecx
pop     ebx
mov     edi, ds:[ebp+7A6h]
add     edi, 2Ah ; '*'
mov     eax, ebx
stosw
mov     eax, ecx
stosw
call    sub_100179FD
jb      short loc_10018A4C
mov     esi, ds:[ebp+7AAh]
cmp     byte ptr [esi+10h], 0
jz      short loc_10018A49
xor     eax, eax
mov     al, [esi+10h]
call    sub_100179A6
jmp     short loc_10018A4C

loc_10018A49:
clc
jmp     short loc_10018A4D

loc_10018A4C:
stc

loc_10018A4D:
popa
retn
sub_100189F9 endp

db    6
db  60h ; `
db 0B4h
db    3
db  3Eh ; >
db  8Ah
db  85h
db 0C3h
db    1
db    0
db    0
db 0B9h
db  24h ; $
db    0
db    0
db    0
db 0E8h
db  68h ; h
db 0FEh
db 0FFh
db 0FFh
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db 0E8h
db  95h
db  27h ; '
db    0
db    0
db  66h ; f
db    1
db  47h ; G
db    4
db 0E8h
db  84h
db 0EFh
db 0FFh
db 0FFh
db  72h ; r
db  30h ; 0
db  3Eh ; >
db  8Bh
db 0B5h
db 0AAh
db    7
db    0
db    0
db  80h
db  7Eh ; ~
db  10h
db    0
db  74h ; t
db  0Ch
db  33h ; 3
db 0C0h
db  8Ah
db  46h ; F
db  10h
db 0E8h
db  14h
db 0EFh
db 0FFh
db 0FFh
db 0EBh
db  17h
db  8Bh
db 0FEh
db 0E8h
db  6Ah ; j
db  29h ; )
db    0
db    0
db  0Ah
db 0C0h
db  75h ; u
db  0Ch
db  33h ; 3
db 0C0h
db 0E8h
db 0A3h
db  63h ; c
db    0
db    0
db  8Bh
db 0C2h
db 0F8h
db 0EBh
db    6
db 0B8h
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0F9h
db  8Bh
db 0FCh
db  36h ; 6
db  89h
db  47h ; G
db  1Ch
db  61h ; a
db    7
db 0C3h
db    6
db  60h ; `
db 0B4h
db    3
db  3Eh ; >
db  8Ah
db  85h
db 0C3h
db    1
db    0
db    0
db 0B9h
db  24h ; $
db    0
db    0
db    0
db 0E8h
db 0FDh
db 0FDh
db 0FFh
db 0FFh
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db 0E8h
db  7Dh ; }
db  27h ; '
db    0
db    0
db  66h ; f
db    1
db  47h ; G
db    4
db 0E8h
db  19h
db 0EFh
db 0FFh
db 0FFh
db  72h ; r
db  30h ; 0
db  3Eh ; >
db  8Bh
db 0B5h
db 0AAh
db    7
db    0
db    0
db  80h
db  7Eh ; ~
db  10h
db    0
db  74h ; t
db  0Ch
db  33h ; 3
db 0C0h
db  8Ah
db  46h ; F
db  10h
db 0E8h
db 0A9h
db 0EEh
db 0FFh
db 0FFh
db 0EBh
db  17h
db  8Bh
db 0FEh
db 0E8h
db  4Ah ; J
db  29h ; )
db    0
db    0
db  0Ah
db 0C0h
db  75h ; u
db  0Ch
db  33h ; 3
db 0C0h
db 0E8h
db  38h ; 8
db  63h ; c
db    0
db    0
db  8Bh
db 0C2h
db 0F8h
db 0EBh
db    6
db 0B8h
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0F9h
db  8Bh
db 0FCh
db  36h ; 6
db  89h
db  47h ; G
db  1Ch
db  61h ; a
db    7
db 0C3h
db    6
db  60h ; `
db 0B4h
db    3
db  3Eh ; >
db  8Ah
db  85h
db 0C3h
db    1
db    0
db    0
db 0B9h
db  24h ; $
db    0
db    0
db    0
db 0E8h
db  92h
db 0FDh
db 0FFh
db 0FFh
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db 0E8h
db  3Ah ; :
db  27h ; '
db    0
db    0
db  66h ; f
db    1
db  47h ; G
db    4
db 0E8h
db 0AEh
db 0EEh
db 0FFh
db 0FFh
db  72h ; r
db  30h ; 0
db  3Eh ; >
db  8Bh
db 0B5h
db 0AAh
db    7
db    0
db    0
db  80h
db  7Eh ; ~
db  10h
db    0
db  74h ; t
db  0Ch
db  33h ; 3
db 0C0h
db  8Ah
db  46h ; F
db  10h
db 0E8h
db  3Eh ; >
db 0EEh
db 0FFh
db 0FFh
db 0EBh
db  17h
db  8Bh
db 0FEh
db 0E8h
db  19h
db  29h ; )
db    0
db    0
db  0Ah
db 0C0h
db  75h ; u
db  0Ch
db  33h ; 3
db 0C0h
db 0E8h
db 0CDh
db  62h ; b
db    0
db    0
db  8Bh
db 0C2h
db 0F8h
db 0EBh
db    6
db 0B8h
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0F9h
db  8Bh
db 0FCh
db  36h ; 6
db  89h
db  47h ; G
db  1Ch
db  61h ; a
db    7
db 0C3h



sub_10018B90 proc near
push    eax
push    ecx
push    edx
push    esi
push    edi
push    8
push    dword ptr ds:[ebp+505h]
call    dword ptr ds:[ebp+168h]
or      eax, eax
pop     edi
pop     esi
pop     edx
pop     ecx
pop     eax
retn
sub_10018B90 endp




sub_10018BAD proc near
push    ebx
push    ecx
push    edx
push    edi
push    esi
mov     eax, ebx
and     ebx, 0F0h
cmp     ebx, 0
jnz     short loc_10018BCE
mov     word ptr ds:[ebp+650h], 6Eh ; 'n'
jmp     loc_10018C72

loc_10018BCE:
cmp     ebx, 20h ; ' '
jnz     short loc_10018BE2
mov     word ptr ds:[ebp+650h], 96h
jmp     loc_10018C72

loc_10018BE2:
cmp     ebx, 40h ; '@'
jnz     short loc_10018BF3
mov     word ptr ds:[ebp+650h], 12Ch
jmp     short loc_10018C72

loc_10018BF3:
cmp     ebx, 60h ; '`'
jnz     short loc_10018C04
mov     word ptr ds:[ebp+650h], 258h
jmp     short loc_10018C72

loc_10018C04:
cmp     ebx, 80h
jnz     short loc_10018C18
mov     word ptr ds:[ebp+650h], 4B0h
jmp     short loc_10018C72

loc_10018C18:
cmp     ebx, 0A0h
jnz     short loc_10018C2C
mov     word ptr ds:[ebp+650h], 960h
jmp     short loc_10018C72

loc_10018C2C:
cmp     ebx, 0C0h
jnz     short loc_10018C40
mov     word ptr ds:[ebp+650h], 12C0h
jmp     short loc_10018C72

loc_10018C40:
cmp     ebx, 0E0h
jnz     short loc_10018C54
mov     word ptr ds:[ebp+650h], 2580h
jmp     short loc_10018C72

loc_10018C54:
cmp     ebx, 0F0h
jnz     short loc_10018C68
mov     word ptr ds:[ebp+650h], 4B00h
jmp     short loc_10018C72

loc_10018C68:
mov     eax, 0FFFFFFFDh
jmp     loc_10018D0D

loc_10018C72:
and     eax, 0Fh
mov     ds:[ebp+652h], al
mov     eax, ebp
add     eax, 682h
mov     esi, eax
push    eax
push    dword ptr ds:[ebp+505h]
call    dword ptr ds:[ebp+164h]
or      eax, eax
jz      short loc_10018D08
movzx   eax, word ptr ds:[ebp+650h]
mov     [esi+4], eax
mov     byte ptr [esi+12h], 8
mov     byte ptr [esi+13h], 0
mov     byte ptr [esi+14h], 2
and     dword ptr [esi+8], 0FFFFFDFFh
and     dword ptr [esi+8], 0FFFFF7FFh
or      dword ptr [esi+8], 1000h
and     dword ptr [esi+8], 0FFFFFEFFh
or      dword ptr [esi+8], 1
and     dword ptr [esi+8], 0FFFFFFFBh
and     dword ptr [esi+8], 0FFFFFFF7h
or      dword ptr [esi+8], 10h
mov     eax, ebp
add     eax, 682h
push    eax
push    dword ptr ds:[ebp+505h]
call    dword ptr ds:[ebp+16Ch]
or      eax, eax
jz      short loc_10018D08
xor     eax, eax
jmp     short loc_10018D0D

loc_10018D08:
mov     eax, 0FFFFFFFFh

loc_10018D0D:
pop     esi
pop     edi
pop     edx
pop     ecx
pop     ebx
retn
sub_10018BAD endp




sub_10018D13 proc near
push    ebx
push    ecx
push    edi
push    esi
cmp     dword ptr ds:[ebp+505h], 0FFFFFFFFh
jz      loc_10018DD8
cmp     dword ptr ds:[ebp+505h], 0
jnz     short loc_10018DA1
mov     word ptr ds:[ebp+2EFh], 0
add     al, 31h ; '1'
mov     ds:[ebp+6B5h], al
xor     edx, edx
push    edx
push    80000080h
push    3
push    edx
push    edx
push    0C0000000h
mov     eax, ebp
add     eax, 6B2h
push    eax
call    dword ptr ds:[ebp+98h]
mov     ds:[ebp+505h], eax
cmp     eax, 0FFFFFFFFh
jz      short loc_10018DDD
mov     esi, ebp
add     esi, 69Eh
xor     eax, eax
mov     [esi+4], eax
mov     dword ptr [esi+8], 1388h
mov     [esi+0Ch], eax
mov     dword ptr [esi+10h], 0BB8h
mov     [esi], eax
push    esi
push    dword ptr ds:[ebp+505h]
call    dword ptr ds:[ebp+170h]
or      eax, eax
jz      short loc_10018DD8

loc_10018DA1:
mov     ebx, 47h ; 'G'
call    sub_10018BAD
or      eax, eax
jnz     short loc_10018DDD
mov     al, 0FFh
call    sub_10018EFE
or      eax, eax
jnz     short loc_10018DDD
xor     eax, eax
call    sub_10018EFE
or      eax, eax
jnz     short loc_10018DDD
call    sub_10018F62
mov     eax, ecx
mov     ebx, 0E7h
call    sub_10018BAD
jmp     short loc_10018DDD

loc_10018DD8:
mov     eax, 0FFFFFFFFh

loc_10018DDD:
pop     esi
pop     edi
pop     ecx
pop     ebx
retn
sub_10018D13 endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_2]



sub_10018DE3 proc near
push    ebx
push    ecx
push    edx
push    esi
push    edi
cmp     dword ptr ds:[ebp+505h], 0FFFFFFFFh
jz      short loc_10018E46
push    4
push    dword ptr ds:[ebp+505h]
call    dword ptr ds:[ebp+160h]
or      eax, eax
jz      short loc_10018E46
push    6
push    dword ptr ds:[ebp+505h]
call    dword ptr ds:[ebp+160h]
or      eax, eax
jz      short loc_10018E46
cmp     dword ptr ds:[ebp+672h], 0
jnz     short loc_10018E2B
call    sub_1001C538
jmp     short loc_10018E30

loc_10018E2B:
call    sub_10018FE8

loc_10018E30:
push    dword ptr ds:[ebp+505h]
call    dword ptr ds:[ebp+0A0h]
or      eax, eax
jz      short loc_10018E46
xor     eax, eax
jmp     short loc_10018E4B

loc_10018E46:
mov     eax, 0FFFFFFFFh

loc_10018E4B:
mov     dword ptr ds:[ebp+505h], 0
pop     edi
pop     esi
pop     edx
pop     ecx
pop     ebx
retn
sub_10018DE3 endp




sub_10018E5C proc near
push    eax
push    edx
push    esi
push    edi
push    3
push    dword ptr ds:[ebp+505h]
call    dword ptr ds:[ebp+160h]
or      eax, eax
jz      short loc_10018EA2
push    5
push    dword ptr ds:[ebp+505h]
call    dword ptr ds:[ebp+160h]
or      eax, eax
jz      short loc_10018EA2
cmp     dword ptr ds:[ebp+672h], 0
jnz     short loc_10018E99
call    sub_1001C538
jmp     short loc_10018E9E

loc_10018E99:
call    sub_10018FE8

loc_10018E9E:
xor     eax, eax
jmp     short loc_10018EA7

loc_10018EA2:
mov     eax, 0FFFFFFFFh

loc_10018EA7:
pop     edi
pop     esi
pop     edx
pop     eax
retn
sub_10018E5C endp




sub_10018EAC proc near
push    esi
push    edi
push    ebx
push    ecx
push    edx
push    dword ptr ds:[ebp+676h]
push    0
mov     eax, ebp
add     eax, 676h
push    eax
push    1
push    edi
push    dword ptr ds:[ebp+505h]
call    dword ptr ds:[ebp+178h]
or      eax, eax
jz      short loc_10018EE5
cmp     dword ptr ds:[ebp+676h], 1
jnz     short loc_10018EE5
xor     eax, eax
jmp     short loc_10018EF1

loc_10018EE5:
call    dword ptr ds:[ebp+174h]
mov     eax, 0FFFFFFFFh

loc_10018EF1:
pop     dword ptr ds:[ebp+676h]
pop     edx
pop     ecx
pop     ebx
pop     edi
pop     esi
retn
sub_10018EAC endp




sub_10018EFE proc near
push    ebx
push    ecx
push    edx
push    esi
push    edi
push    dword ptr ds:[ebp+676h]
mov     ds:[ebp+35Ch], al
push    0
mov     eax, ebp
add     eax, 676h
push    eax
push    1
mov     eax, ebp
add     eax, 35Ch
push    eax
push    dword ptr ds:[ebp+505h]
call    dword ptr ds:[ebp+17Ch]
call    dword ptr ds:[ebp+174h]
cmp     dword ptr ds:[ebp+676h], 1
jnz     short loc_10018F48
xor     eax, eax
jmp     short loc_10018F54

loc_10018F48:
call    dword ptr ds:[ebp+174h]
mov     eax, 0FFFFFFFFh

loc_10018F54:
pop     dword ptr ds:[ebp+676h]
pop     edi
pop     esi
pop     edx
pop     ecx
pop     ebx
retn
sub_10018EFE endp

; [00000001 BYTES: COLLAPSED FUNCTION nullsub_3]



sub_10018F62 proc near
push    eax
push    ecx
push    edx
push    dword ptr ds:[ebp+64Ch]
push    dword ptr ds:[ebp+66Eh]
call    sub_10018F94

loc_10018F78:
call    sub_10018FB2
cmp     ecx, 64h ; 'd'
jb      short loc_10018F78
pop     dword ptr ds:[ebp+66Eh]
pop     dword ptr ds:[ebp+64Ch]
pop     edx
pop     ecx
pop     eax
retn
sub_10018F62 endp




sub_10018F94 proc near
push    eax
push    ecx
push    edx
xor     eax, eax
mov     ds:[ebp+66Eh], eax
call    dword ptr ds:[ebp+0D8h]
mov     ds:[ebp+64Ch], eax
pop     edx
pop     ecx
pop     eax
retn
sub_10018F94 endp




sub_10018FB2 proc near
call    dword ptr ds:[ebp+0D8h]
mov     ecx, eax
sub     ecx, ds:[ebp+64Ch]
retn
sub_10018FB2 endp




sub_10018FC3 proc near
push    eax
push    ecx
push    edx
call    sub_10018F94

loc_10018FCB:
call    sub_10018FB2
cmp     ecx, 1
jb      short loc_10018FCB
call    sub_10018F94

loc_10018FDA:
call    sub_10018FB2
cmp     ecx, 1
jb      short loc_10018FDA
pop     edx
pop     ecx
pop     eax
retn
sub_10018FC3 endp




sub_10018FE8 proc near
push    eax
push    ecx
push    edx
push    dword ptr ds:[ebp+64Ch]
call    sub_10018F94

loc_10018FF7:
call    sub_10018FB2
cmp     ecx, 1
jb      short loc_10018FF7
call    sub_10018F94

loc_10019006:
call    sub_10018FB2
cmp     ecx, 37h ; '7'
jb      short loc_10019006
pop     dword ptr ds:[ebp+64Ch]
pop     edx
pop     ecx
pop     eax
retn
sub_10018FE8 endp




sub_1001901B proc near
push    eax
push    ecx
push    edx
push    dword ptr ds:[ebp+64Ch]
call    sub_10018F94

loc_1001902A:
mov     edx, ds:[ebp+509h]
in      al, dx
call    sub_10018F62
add     edx, 5
in      al, dx
mov     ds:[ebp+504h], al
test    al, 1
jz      short loc_10019053
call    sub_10018FB2
cmp     ecx, 3E8h
jb      short loc_1001902A

loc_10019053:
pop     dword ptr ds:[ebp+64Ch]
pop     edx
pop     ecx
pop     eax
retn
sub_1001901B endp

db  52h ; R
db  3Eh ; >
db 0FFh
db 0B5h
db  4Ch ; L
db    6
db    0
db    0
db  3Eh ; >
db  8Bh
db  95h
db    9
db    5
db    0
db    0
db  83h
db 0C2h
db    2
db 0B0h
db    6
db 0EEh
db 0E8h
db 0C0h
db  34h ; 4
db    0
db    0
db  33h ; 3
db 0C0h
db 0EEh
db 0E8h
db  14h
db 0FFh
db 0FFh
db 0FFh
db  3Eh ; >
db  8Bh
db  95h
db    9
db    5
db    0
db    0
db  83h
db 0C2h
db    5
db 0ECh
db  24h ; $
db  60h ; `
db  3Ch ; <
db  60h ; `
db  74h ; t
db  14h
db 0E8h
db  1Ch
db 0FFh
db 0FFh
db 0FFh
db  81h
db 0FAh
db 0E8h
db    3
db    0
db    0
db  72h ; r
db 0E2h
db 0B8h
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0EBh
db    2
db  33h ; 3
db 0C0h
db  3Eh ; >
db  8Fh
db  85h
db  4Ch ; L
db    6
db    0
db    0
db  5Ah ; Z
db 0C3h



sub_100190B0 proc near
push    ebx
push    ecx
push    edx
push    edi
mov     ds:[ebp+505h], eax
call    sub_10019700
or      eax, eax
jnz     short loc_100190CE
mov     eax, 0FFFFFFFFh
jmp     loc_10019232

loc_100190CE:
mov     ds:[ebp+509h], eax
mov     eax, ebx
and     ebx, 0F0h
cmp     ebx, 0
jnz     short loc_100190F1
mov     word ptr ds:[ebp+650h], 410h
jmp     loc_10019195

loc_100190F1:
cmp     ebx, 20h ; ' '
jnz     short loc_10019105
mov     word ptr ds:[ebp+650h], 300h
jmp     loc_10019195

loc_10019105:
cmp     ebx, 40h ; '@'
jnz     short loc_10019116
mov     word ptr ds:[ebp+650h], 180h
jmp     short loc_10019195

loc_10019116:
cmp     ebx, 60h ; '`'
jnz     short loc_10019127
mov     word ptr ds:[ebp+650h], 0C0h
jmp     short loc_10019195

loc_10019127:
cmp     ebx, 80h
jnz     short loc_1001913B
mov     word ptr ds:[ebp+650h], 60h ; '`'
jmp     short loc_10019195

loc_1001913B:
cmp     ebx, 0A0h
jnz     short loc_1001914F
mov     word ptr ds:[ebp+650h], 30h ; '0'
jmp     short loc_10019195

loc_1001914F:
cmp     ebx, 0C0h
jnz     short loc_10019163
mov     word ptr ds:[ebp+650h], 18h
jmp     short loc_10019195

loc_10019163:
cmp     ebx, 0E0h
jnz     short loc_10019177
mov     word ptr ds:[ebp+650h], 0Ch
jmp     short loc_10019195

loc_10019177:
cmp     ebx, 0F0h
jnz     short loc_1001918B
mov     word ptr ds:[ebp+650h], 6
jmp     short loc_10019195

loc_1001918B:
mov     eax, 0FFFFFFFDh
jmp     loc_10019232

loc_10019195:
and     eax, 0Fh
mov     ds:[ebp+652h], al
call    sub_10018F94

loc_100191A7:
mov     edx, ds:[ebp+509h]
add     edx, 5
in      al, dx
mov     ds:[ebp+504h], al
test    al, 40h
jnz     short loc_100191CA
call    sub_10018FB2
cmp     ecx, 3E8h
jb      short loc_100191A7

loc_100191CA:
call    sub_1001959B
mov     edx, ds:[ebp+509h]
add     edx, 3
mov     al, 80h
out     dx, al
call    sub_1001C538
movzx   eax, word ptr ds:[ebp+650h]
mov     edx, ds:[ebp+509h]
inc     edx
xchg    al, ah
out     dx, al
call    sub_1001C538
xchg    al, ah
dec     edx
out     dx, al
call    sub_1001C538
mov     al, ds:[ebp+652h]
or      al, 4
mov     edx, ds:[ebp+509h]
add     edx, 3
out     dx, al
call    sub_1001C538
xor     eax, eax
mov     edx, ds:[ebp+509h]
inc     edx
out     dx, al
call    sub_1001C538
call    sub_10019640
xor     eax, eax

loc_10019232:
pop     edi
pop     edx
pop     ecx
pop     ebx
retn
sub_100190B0 endp




sub_10019237 proc near
push    ebx
push    ecx
mov     ecx, eax
mov     word ptr ds:[ebp+2EFh], 0
cmp     dword ptr ds:[ebp+672h], 0
jnz     short loc_10019256
call    sub_1001C538
jmp     short loc_1001925B

loc_10019256:
call    sub_10018FC3

loc_1001925B:
mov     ebx, 47h ; 'G'
call    sub_100195BC
or      eax, eax
jnz     short loc_1001928B
mov     al, 0FFh
call    sub_10019682
or      eax, eax
jnz     short loc_1001928B
xor     eax, eax
call    sub_10019682
or      eax, eax
jnz     short loc_1001928B
mov     eax, ecx
mov     ebx, 0E7h
call    sub_100195BC

loc_1001928B:
pop     ecx
pop     ebx
retn
sub_10019237 endp




sub_1001928E proc near
push    eax
push    ebx
push    ecx
push    edx
push    esi
push    edi
call    sub_10019700
or      eax, eax
jnz     short loc_100192A7
mov     eax, 0FFFFFFFFh
jmp     loc_10019359

loc_100192A7:
mov     esi, eax
mov     ecx, 8
xor     ebx, ebx

loc_100192B0:
mov     edx, esi
add     edx, ebx
in      al, dx
call    sub_1001C538
mov     ds:[ebp+ebx+511h], al
inc     ebx
loop    loc_100192B0
mov     edx, esi
add     edx, 3
in      al, dx
call    sub_1001C538
mov     ds:[ebp+50Fh], al
or      al, 80h
out     dx, al
call    sub_1001C538
mov     edx, esi
in      al, dx
call    sub_1001C538
mov     ds:[ebp+50Dh], al
inc     edx
in      al, dx
call    sub_1001C538
mov     ds:[ebp+50Eh], al
inc     edx
inc     edx
mov     al, ds:[ebp+50Fh]
out     dx, al
call    sub_1001C538
inc     edx
in      al, dx
mov     ds:[ebp+510h], al
call    sub_1001C538
mov     al, ds:[ebp+513h]
and     al, 0C0h
jz      short loc_10019332
cmp     al, 40h ; '@'
jz      short loc_1001933C
mov     byte ptr ds:[ebp+513h], 0C7h
jmp     short loc_10019344

loc_10019332:
mov     byte ptr ds:[ebp+513h], 0
jmp     short loc_10019344

loc_1001933C:
mov     byte ptr ds:[ebp+513h], 0CFh

loc_10019344:
mov     al, 6
mov     edx, esi
add     edx, 2
out     dx, al
call    sub_1001C538
xor     al, al
out     dx, al
call    sub_1001C538

loc_10019359:
pop     edi
pop     esi
pop     edx
pop     ecx
pop     ebx
pop     eax
retn
sub_1001928E endp




sub_10019360 proc near
push    ebx
push    ecx
push    edx
push    esi
push    edi
call    sub_10019700
or      eax, eax
jnz     short loc_10019378
mov     eax, 0FFFFFFFFh
jmp     loc_10019413

loc_10019378:
mov     esi, eax
call    sub_1001959B
mov     edx, esi
add     edx, 3
mov     al, ds:[ebp+50Fh]
or      al, 80h
out     dx, al
call    sub_1001C538
mov     edx, esi
mov     al, ds:[ebp+50Dh]
out     dx, al
call    sub_1001C538
inc     edx
mov     al, ds:[ebp+50Eh]
out     dx, al
call    sub_1001C538
inc     edx
inc     edx
mov     al, ds:[ebp+50Fh]
out     dx, al
call    sub_1001C538
inc     edx
mov     al, ds:[ebp+510h]
out     dx, al
cmp     dword ptr ds:[ebp+672h], 0
jnz     short loc_100193D9
call    sub_1001C538
jmp     short loc_100193DE

loc_100193D9:
call    sub_10018FE8

loc_100193DE:
mov     ecx, 4
mov     ebx, 1

loc_100193E8:
mov     edx, esi
add     edx, ebx
mov     al, ds:[ebp+ebx+511h]
out     dx, al
call    sub_1001C538
inc     ebx
loop    loc_100193E8
add     ebx, 2
add     edx, 3
mov     al, ds:[ebp+ebx+511h]
out     dx, al
call    sub_1001C538
xor     eax, eax

loc_10019413:
pop     edi
pop     esi
pop     edx
pop     ecx
pop     ebx
retn
sub_10019360 endp




sub_10019419 proc near
push    eax
push    edx
mov     edx, ds:[ebp+509h]
add     edx, 4
in      al, dx
call    sub_1001C538
or      al, 3
out     dx, al
cmp     dword ptr ds:[ebp+672h], 0
jnz     short loc_1001943F
call    sub_1001C538
jmp     short loc_10019444

loc_1001943F:
call    sub_10018FE8

loc_10019444:
pop     edx
pop     eax
retn
sub_10019419 endp




sub_10019447 proc near
push    edi
push    ebx
push    ecx
push    edx
cmp     dword ptr ds:[ebp+509h], 0
jnz     short loc_1001945C
mov     eax, 0FFFFFFFFh
jmp     short loc_100194B4

loc_1001945C:
call    sub_10018F94

loc_10019461:
cmp     byte ptr ds:[ebp+501h], 0
jz      short loc_10019470
call    sub_10018F62

loc_10019470:
mov     edx, ds:[ebp+509h]
add     edx, 5
in      al, dx
mov     ds:[ebp+504h], al
test    al, 1
jnz     short loc_10019493
call    sub_10018FB2
cmp     ecx, 0BB8h
jb      short loc_10019461

loc_10019493:
test    byte ptr ds:[ebp+504h], 1
jz      short loc_100194AF
mov     edx, ds:[ebp+509h]
in      al, dx
call    sub_1001C538
stosb
xor     eax, eax
jmp     short loc_100194B4

loc_100194AF:
mov     eax, 0FFFFFFFFh

loc_100194B4:
pop     edx
pop     ecx
pop     ebx
pop     edi
retn
sub_10019447 endp




sub_100194B9 proc near
push    ebx
push    ecx
push    edx
cmp     dword ptr ds:[ebp+509h], 0
jnz     short loc_100194D0
mov     eax, 0FFFFFFFFh
jmp     loc_10019578

loc_100194D0:
mov     ebx, eax
call    sub_10018F94

loc_100194D7:
mov     edx, ds:[ebp+509h]
add     edx, 5
in      al, dx
mov     ds:[ebp+504h], al
test    al, 20h
jnz     short loc_100194FA
call    sub_10018FB2
cmp     ecx, 3E8h
jb      short loc_100194D7

loc_100194FA:
test    byte ptr ds:[ebp+504h], 20h
jnz     short loc_10019506
jmp     short loc_10019573

loc_10019506:
mov     edx, ds:[ebp+509h]
mov     eax, ebx
out     dx, al
call    sub_1001C538
call    sub_10018F94

loc_1001951A:
mov     edx, ds:[ebp+509h]
add     edx, 5
in      al, dx
mov     ds:[ebp+504h], al
test    al, 20h
jnz     short loc_1001953D
call    sub_10018FB2
cmp     ecx, 3E8h
jb      short loc_1001951A

loc_1001953D:
call    sub_10018F94

loc_10019542:
mov     edx, ds:[ebp+509h]
add     edx, 5
in      al, dx
mov     ds:[ebp+504h], al
test    al, 40h
jnz     short loc_10019565
call    sub_10018FB2
cmp     ecx, 3E8h
jb      short loc_10019542

loc_10019565:
test    byte ptr ds:[ebp+504h], 20h
jz      short loc_10019573
xor     eax, eax
jmp     short loc_10019578

loc_10019573:
mov     eax, 0FFFFFFFFh

loc_10019578:
pop     edx
pop     ecx
pop     ebx
retn
sub_100194B9 endp




sub_1001957C proc near
push    eax
push    edx
call    sub_10019700
mov     edx, eax
or      edx, edx
jz      short loc_10019598
add     edx, 4
in      al, dx
jmp     short $+2

loc_1001958F:
test    al, 1
jnz     short loc_10019598
or      al, 1
out     dx, al
jmp     short $+2

loc_10019598:
pop     edx
pop     eax
retn
sub_1001957C endp




sub_1001959B proc near
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_100195B6
cmp     dword ptr ds:[ebp+6E8h], 1
jz      short loc_100195B6
call    sub_1001901B
jmp     short locret_100195BB

loc_100195B6:
call    sub_10018B90

locret_100195BB:
retn
sub_1001959B endp




sub_100195BC proc near
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_100195D7
cmp     dword ptr ds:[ebp+6E8h], 1
jz      short loc_100195D7
call    sub_100190B0
jmp     short locret_100195DC

loc_100195D7:
call    sub_10018BAD

locret_100195DC:
retn
sub_100195BC endp




sub_100195DD proc near
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_100195F8
cmp     dword ptr ds:[ebp+6E8h], 1
jz      short loc_100195F8
call    sub_10019237
jmp     short locret_100195FD

loc_100195F8:
call    sub_10018D13

locret_100195FD:
retn
sub_100195DD endp




sub_100195FE proc near
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_10019619
cmp     dword ptr ds:[ebp+6E8h], 1
jz      short loc_10019619
call    sub_1001928E
jmp     short locret_1001961E

loc_10019619:
call    nullsub_2

locret_1001961E:
retn
sub_100195FE endp




sub_1001961F proc near
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_1001963A
cmp     dword ptr ds:[ebp+6E8h], 1
jz      short loc_1001963A
call    sub_10019360
jmp     short locret_1001963F

loc_1001963A:
call    sub_10018DE3

locret_1001963F:
retn
sub_1001961F endp




sub_10019640 proc near
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_1001965B
cmp     dword ptr ds:[ebp+6E8h], 1
jz      short loc_1001965B
call    sub_10019419
jmp     short locret_10019660

loc_1001965B:
call    sub_10018E5C

locret_10019660:
retn
sub_10019640 endp




sub_10019661 proc near
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_1001967C
cmp     dword ptr ds:[ebp+6E8h], 1
jz      short loc_1001967C
call    sub_10019447
jmp     short locret_10019681

loc_1001967C:
call    sub_10018EAC

locret_10019681:
retn
sub_10019661 endp




sub_10019682 proc near
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_1001969D
cmp     dword ptr ds:[ebp+6E8h], 1
jz      short loc_1001969D
call    sub_100194B9
jmp     short locret_100196A2

loc_1001969D:
call    sub_10018EFE

locret_100196A2:
retn
sub_10019682 endp




sub_100196A3 proc near
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_100196BE
cmp     dword ptr ds:[ebp+6E8h], 1
jz      short loc_100196BE
call    sub_1001957C
jmp     short locret_100196C3

loc_100196BE:
call    nullsub_3

locret_100196C3:
retn
sub_100196A3 endp




sub_100196C4 proc near
push    esi
push    edi
push    ecx
mov     esi, ebp
add     esi, 4E7h
mov     edi, ebp
add     edi, 35Ch
mov     ecx, 8
rep movsb
pop     ecx
pop     edi
pop     esi
retn
sub_100196C4 endp




sub_100196E2 proc near
push    esi
push    edi
push    ecx
mov     esi, ebp
add     esi, 35Ch
mov     edi, ebp
add     edi, 4E7h
mov     ecx, 8
rep movsb
pop     ecx
pop     edi
pop     esi
retn
sub_100196E2 endp




sub_10019700 proc near
cmp     dword ptr ds:[ebp+6DCh], 1
jnz     short loc_10019713
mov     eax, ds:[ebp+6E0h]
jmp     short locret_1001971E

loc_10019713:
shl     eax, 1
movzx   eax, word ptr ds:[ebp+eax+67Ah]

locret_1001971E:
retn
sub_10019700 endp




sub_1001971F proc near
push    ebx
push    ecx
push    esi
push    edi
mov     ecx, eax
jecxz   short loc_10019765
xor     ebx, ebx

loc_10019729:
mov     al, [esi]
call    sub_10019682
or      eax, eax
jnz     short loc_10019765
cmp     byte ptr ds:[ebp+4D2h], 1
jnz     short loc_1001975D
mov     edi, ebp
add     edi, 51Eh
add     edi, ds:[ebp+51Ah]
inc     dword ptr ds:[ebp+51Ah]
call    sub_10019661
or      eax, eax
jnz     short loc_10019765

loc_1001975D:
inc     ebx
inc     esi
loop    loc_10019729
xor     eax, eax
jmp     short loc_1001976A

loc_10019765:
mov     eax, 0FFFFFFFFh

loc_1001976A:
pop     edi
pop     esi
pop     ecx
pop     ebx
retn
sub_1001971F endp




sub_1001976F proc near
push    ecx
call    sub_100196C4
mov     word ptr ds:[ebp+66Ch], 0
call    sub_10019871
mov     word ptr ds:[ebp+2EFh], 1
or      eax, eax
jnz     loc_1001986A
mov     byte ptr ds:[ebp+4BAh], 41h ; 'A'
mov     byte ptr ds:[ebp+4BBh], 41h ; 'A'
mov     esi, ebp
add     esi, 4BAh
mov     ecx, 2
call    sub_10019A70
or      eax, eax
jnz     loc_1001986A
mov     byte ptr ds:[ebp+4D1h], 0
mov     edi, ebp
add     edi, 4BAh
call    sub_10019ABF
or      eax, eax
jnz     loc_1001986A
call    sub_1001B6D4
call    sub_1001A33B
call    sub_10019682
or      eax, eax
jnz     short loc_1001986A
mov     eax, 0FFFFFFFFh
cmp     byte ptr ds:[ebp+4BAh], 4Dh ; 'M'
jnz     short loc_1001986A
xor     eax, eax
mov     ds:[ebp+4E9h], al
mov     ds:[ebp+4EAh], al
mov     ds:[ebp+4EBh], al
mov     ds:[ebp+4ECh], al
mov     ds:[ebp+4EDh], al
mov     ds:[ebp+4EEh], al
mov     ds:[ebp+4D1h], al
mov     byte ptr ds:[ebp+501h], 1
mov     edi, ebp
add     edi, 4BAh
call    sub_10019ABF
mov     byte ptr ds:[ebp+501h], 0
or      eax, eax
jnz     short loc_1001986A
sub     eax, eax
cmp     byte ptr ds:[ebp+4BAh], 52h ; 'R'
jz      short loc_1001986A
dec     eax
jmp     short loc_1001986A
db  3Eh ; >
db 0C6h
db  85h
db  69h ; i
db    6
db    0
db    0
db  4Ch ; L

loc_1001986A:
call    sub_100196E2
pop     ecx
retn
sub_1001976F endp




sub_10019871 proc near
push    edx
push    ecx
push    ebx
xor     eax, eax
mov     ds:[ebp+4E9h], al
mov     ds:[ebp+4EAh], al
mov     ds:[ebp+4EBh], al
mov     ds:[ebp+4ECh], al
mov     ds:[ebp+4EDh], al
mov     ds:[ebp+4EEh], al
call    sub_1001BC61
mov     al, dh
call    sub_1001B6D4
mov     ds:[ebp+4B8h], al
mov     ds:[ebp+4E7h], al
call    sub_1001B6D4
mov     ds:[ebp+4B9h], al
mov     ds:[ebp+4E8h], al
mov     byte ptr ds:[ebp+4D2h], 0
mov     byte ptr ds:[ebp+4D3h], 0
cmp     word ptr ds:[ebp+2EFh], 0
jnz     short loc_10019907
mov     ecx, 8
mov     esi, ebp
add     esi, 4B0h
call    sub_10019A70
or      eax, eax
jnz     loc_100199A2
call    sub_1001959B

loc_10019907:
mov     word ptr ds:[ebp+2EFh], 1
mov     byte ptr ds:[ebp+4D2h], 1
mov     ecx, 2
mov     esi, ebp
add     esi, 4B8h
call    sub_10019A70
or      eax, eax
jnz     short loc_100199A2
mov     al, ds:[ebp+4B8h]
mov     ds:[ebp+4E9h], al
mov     ds:[ebp+4ECh], al
mov     al, ds:[ebp+4B9h]
mov     ds:[ebp+4EAh], al
mov     ds:[ebp+4EDh], al
mov     byte ptr ds:[ebp+4D1h], 0
mov     byte ptr ds:[ebp+4D3h], 1
mov     byte ptr ds:[ebp+4BAh], 0
mov     edi, ebp
add     edi, 4BAh
mov     ecx, 1
call    sub_10019ABF
or      eax, eax
jnz     short loc_100199A2
mov     bl, ds:[ebp+4BAh]
cmp     bl, 51h ; 'Q'
jz      short loc_100199A2
cmp     bl, 54h ; 'T'
jz      short loc_100199A2
cmp     bl, 55h ; 'U'
jz      short loc_100199A2
mov     eax, 0FFFFFFFFh

loc_100199A2:
pop     ebx
pop     ecx
pop     edx
retn
sub_10019871 endp




sub_100199A6 proc near
push    ecx
mov     word ptr ds:[ebp+66Ch], 1
mov     byte ptr ds:[ebp+4BAh], 41h ; 'A'
mov     byte ptr ds:[ebp+4BBh], 41h ; 'A'
mov     esi, ebp
add     esi, 4BAh
mov     ecx, 2
call    sub_10019A70
or      eax, eax
jnz     short loc_10019A12
movzx   eax, word ptr ds:[ebp+64Ah]
mov     ds:[ebp+35Ch], al
mov     byte ptr ds:[ebp+4D1h], 0
mov     edi, ebp
add     edi, 35Dh
call    sub_10019ABF
or      eax, eax
jnz     short loc_10019A12
call    sub_1001B6D4
call    sub_1001A33B
call    sub_10019682
or      eax, eax
jnz     short $+2

loc_10019A12:
pop     ecx
retn
sub_100199A6 endp




sub_10019A14 proc near
push    eax
pushf
mov     byte ptr ds:[ebp+669h], 4Dh ; 'M'
mov     al, ds:[ebp+35Ch]
call    sub_1001A351
mov     al, ds:[ebp+35Dh]
call    sub_1001A351
cmp     al, 4Dh ; 'M'
jz      short loc_10019A42
mov     byte ptr ds:[ebp+669h], 4Ch ; 'L'

loc_10019A42:
popf
pop     eax
retn
sub_10019A14 endp




sub_10019A45 proc near
movzx   eax, word ptr ds:[ebp+653h]
call    sub_100195DD
movzx   eax, word ptr ds:[ebp+653h]
call    sub_1001961F
mov     dword ptr ds:[ebp+6CCh], 0
call    sub_1001A26D
retn
sub_10019A45 endp




sub_10019A70 proc near
push    ecx
push    esi
push    edi
jecxz   short loc_10019AB6

loc_10019A75:
mov     al, [esi]
cmp     byte ptr ds:[ebp+4D3h], 1
jnz     short loc_10019A86
call    sub_1001A33B

loc_10019A86:
call    sub_10019682
or      eax, eax
jnz     short loc_10019AB6
cmp     byte ptr ds:[ebp+4D2h], 1
jnz     short loc_10019AAF
cmp     ecx, 1
jbe     short loc_10019AAF
mov     edi, ebp
add     edi, 64Ah
call    sub_10019ABF
or      eax, eax
jnz     short loc_10019AB6

loc_10019AAF:
inc     esi
loop    loc_10019A75
xor     eax, eax
jmp     short loc_10019ABB

loc_10019AB6:
mov     eax, 0FFFFFFFFh

loc_10019ABB:
pop     edi
pop     esi
pop     ecx
retn
sub_10019A70 endp




sub_10019ABF proc near
call    sub_10019661
or      eax, eax
jnz     short loc_10019AE0
cmp     word ptr ds:[ebp+66Ch], 1
jz      short loc_10019ADC
mov     al, [edi]
call    sub_1001A351
mov     [edi], al

loc_10019ADC:
xor     eax, eax
jmp     short locret_10019AE5

loc_10019AE0:
mov     eax, 0FFFFFFFFh

locret_10019AE5:
retn
sub_10019ABF endp




sub_10019AE6 proc near
push    ebx
push    ecx
push    edx
push    esi
push    edi
mov     ds:[ebp+2E8h], ax
mov     dword ptr ds:[ebp+51Ah], 0
push    ecx
push    edi
xor     eax, eax
mov     ecx, 12Ch
mov     edi, ebp
add     edi, 51Eh
rep stosb
pop     edi
pop     ecx
mov     dword ptr ds:[ebp+676h], 0
mov     byte ptr ds:[ebp+4D2h], 0
push    esi
push    edi
push    ecx
mov     edi, ebp
add     edi, 4B0h
mov     ecx, 8
cld
repe cmpsb
pop     ecx
pop     edi
pop     esi
jnz     short loc_10019B60
mov     dword ptr ds:[ebp+676h], 8
mov     eax, 8
call    sub_1001971F
or      eax, eax
jnz     loc_10019C03
call    sub_1001959B

loc_10019B60:
mov     byte ptr ds:[ebp+4D2h], 1
mov     eax, 5
push    esi
add     esi, ds:[ebp+676h]
call    sub_1001971F
pop     esi
or      eax, eax
jnz     loc_10019C03
or      edx, edx
jnz     short loc_10019B8E
mov     edx, 0F7h
jmp     short loc_10019BAB

loc_10019B8E:
cmp     edx, 1
jnz     short loc_10019B9A
mov     edx, 0E7h
jmp     short loc_10019BAB

loc_10019B9A:
cmp     edx, 3
jnz     short loc_10019BA6
mov     edx, 0C7h
jmp     short loc_10019BAB

loc_10019BA6:
mov     edx, 0A7h

loc_10019BAB:
movzx   eax, word ptr ds:[ebp+2E8h]
push    ebx
mov     ebx, edx
call    sub_100195BC
pop     ebx
or      eax, eax
jnz     short loc_10019C03
sub     ecx, ds:[ebp+676h]
sub     ecx, 5
add     esi, ds:[ebp+676h]
add     esi, 5
mov     eax, ecx
call    sub_1001971F
or      eax, eax
jnz     short loc_10019C03
mov     esi, ebp
add     esi, 51Eh
mov     ecx, ds:[ebp+51Ah]
jecxz   short loc_10019BF2
rep movsb

loc_10019BF2:
mov     eax, ds:[ebp+51Ah]
mov     [ebx], ax
mov     eax, 0
jmp     short loc_10019C08

loc_10019C03:
mov     eax, 0FFFFFFFEh

loc_10019C08:
pop     edi
pop     esi
pop     edx
pop     ecx
pop     ebx
retn
sub_10019AE6 endp




sub_10019C0E proc near
push    ebx
push    ecx
push    edx
push    esi
push    edi
movzx   ecx, word ptr ds:[ebp+4D4h]
xor     edx, edx
mov     dl, [esi]
inc     esi
dec     ecx
movzx   eax, word ptr ds:[ebp+653h]
call    sub_10019AE6
pop     edi
pop     esi
pop     edx
pop     ecx
pop     ebx
retn
sub_10019C0E endp




sub_10019C34 proc near
push    ebx
mov     ebx, ebp
add     ebx, 0BDEh
mov     ds:[ebp+7A6h], ebx
add     ebx, 222h
mov     ds:[ebp+7AAh], ebx
add     ebx, 222h
mov     ds:[ebp+7DCh], ebx
pop     ebx
retn
sub_10019C34 endp




sub_10019C60 proc near
pusha
push    eax
push    ecx
xor     eax, eax
mov     edi, ds:[ebp+7A6h]
mov     ecx, 222h
rep stosb
mov     edi, ds:[ebp+7AAh]
mov     ecx, 222h
rep stosb
pop     ecx
pop     eax
mov     esi, ds:[ebp+7A6h]
mov     word ptr [esi+4], 2Ah ; '*'
cmp     ah, 5
jz      short loc_10019CA1
cmp     ah, 4
jnz     short loc_10019CA5
add     word ptr [esi+4], 4
jmp     short loc_10019CA5

loc_10019CA1:
add     [esi+4], cx

loc_10019CA5:
mov     [esi+6], ah
mov     [esi+9], al
movzx   eax, word ptr ds:[ebp+1C7h]
mov     [esi+0Ah], ax
call    sub_1001BBBB
mov     [esi+0Ch], eax
mov     edi, ds:[ebp+7AAh]
mov     [edi+0Ch], eax
popa
retn
sub_10019C60 endp




sub_10019CCB proc near
movzx   eax, word ptr [esi+26h]
mov     ds:[ebp+1CDh], ax
movzx   eax, word ptr [esi+24h]
mov     ds:[ebp+1C5h], ax
mov     byte ptr ds:[ebp+1C4h], 4
and     eax, 3
cmp     eax, 3
jnz     short locret_10019CFE
add     byte ptr ds:[ebp+1C4h], 4

locret_10019CFE:
retn
sub_10019CCB endp

db 0B8h
db  2Ah ; *
db    0
db    0
db    0
db  3Eh ; >
db  89h
db  85h
db  5Dh ; ]
db    6
db    0
db    0
db  3Eh ; >
db  89h
db  85h
db  61h ; a
db    6
db    0
db    0
db  3Eh ; >
db  83h
db  85h
db  61h ; a
db    6
db    0
db    0
db  24h ; $
db 0B4h
db    3
db  3Eh ; >
db  8Ah
db  85h
db 0C3h
db    1
db    0
db    0
db 0B9h
db  24h ; $
db    0
db    0
db    0
db 0E8h
db  33h ; 3
db 0FFh
db 0FFh
db 0FFh
db 0C3h



sub_10019D2E proc near
pusha
mov     eax, 2Ah ; '*'
mov     ds:[ebp+65Dh], eax
mov     ds:[ebp+661h], eax
add     dword ptr ds:[ebp+661h], 4Ch ; 'L'
mov     ah, 1
mov     al, ds:[ebp+1C3h]
mov     ecx, 4Ch ; 'L'
call    sub_10019C60
mov     edi, ds:[ebp+7A6h]
call    sub_1001B1D4
add     [edi+4], ax
call    sub_1001A08D
jb      short loc_10019DAB
mov     edi, ds:[ebp+7AAh]
mov     eax, ds:[ebp+661h]
add     eax, ds:[ebp+665h]
mov     [edi+4], ax
call    sub_1001B2AA
or      al, al
jnz     short loc_10019DAB
xor     eax, eax
mov     ecx, 8
mov     edi, ebp
add     edi, 3F6h
rep stosw
clc
jmp     short loc_10019DB4

loc_10019DAB:
mov     ds:[ebp+2A7h], ax
stc

loc_10019DB4:
mov     edi, esp
mov     ss:[edi+1Ch], eax
call    sub_10019A14
popa
retn
sub_10019D2E endp

unk_10019DC1 db  60h ; `
db 0E8h
db  38h ; 8
db 0FFh
db 0FFh
db 0FFh
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db 0E8h
db    1
db  14h
db    0
db    0
db  66h ; f
db    1
db  47h ; G
db    4
db 0E8h
db 0B1h
db    2
db    0
db    0
db  72h ; r
db  2Ch ; ,
db  3Eh ; >
db  8Bh
db 0BDh
db 0AAh
db    7
db    0
db    0
db  3Eh ; >
db  8Bh
db  85h
db  61h ; a
db    6
db    0
db    0
db  3Eh ; >
db    3
db  85h
db  65h ; e
db    6
db    0
db    0
db  66h ; f
db  89h
db  47h ; G
db    4
db 0E8h
db 0C6h
db  15h
db    0
db    0
db  0Ah
db 0C0h
db  75h ; u
db  0Ah
db  33h ; 3
db 0C0h
db 0E8h
db  42h ; B
db  50h ; P
db    0
db    0
db 0F8h
db 0EBh
db    6
db 0B8h
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0F9h
db  8Bh
db 0FCh
db  36h ; 6
db  89h
db  47h ; G
db  1Ch
db  61h ; a
db 0C3h
db  60h ; `
db  50h ; P
db  51h ; Q
db 0B8h
db  2Ah ; *
db    0
db    0
db    0
db  83h
db 0C0h
db    4
db  3Eh ; >
db  89h
db  85h
db  5Dh ; ]
db    6
db    0
db    0
db  3Eh ; >
db  89h
db  85h
db  61h ; a
db    6
db    0
db    0
db 0D1h
db 0E1h
db  3Eh ; >
db    1
db  8Dh
db  61h ; a
db    6
db    0
db    0
db 0B4h
db    4
db  3Eh ; >
db  8Ah
db  85h
db 0C3h
db    1
db    0
db    0
db 0B9h
db    4
db    0
db    0
db    0
db 0E8h
db  13h
db 0FEh
db 0FFh
db 0FFh
db  59h ; Y
db  58h ; X
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db  83h
db 0C7h
db  2Ah ; *
db  50h ; P
db  66h ; f
db 0ABh
db  8Bh
db 0C1h
db  66h ; f
db 0ABh
db  58h ; X
db  3Eh ; >
db  8Bh
db 0BDh
db 0AAh
db    7
db    0
db    0
db  83h
db 0C7h
db  2Ah ; *
db  66h ; f
db 0ABh
db  8Bh
db 0C1h
db  66h ; f
db 0ABh
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db 0E8h
db  36h ; 6
db  12h
db    0
db    0
db  66h ; f
db    1
db  47h ; G
db    4
db 0E8h
db    7
db    2
db    0
db    0
db  72h ; r
db  2Ch ; ,
db  3Eh ; >
db  8Bh
db 0BDh
db 0AAh
db    7
db    0
db    0
db  3Eh ; >
db  8Bh
db  85h
db  61h ; a
db    6
db    0
db    0
db  3Eh ; >
db    3
db  85h
db  65h ; e
db    6
db    0
db    0
db  66h ; f
db  89h
db  47h ; G
db    4
db 0E8h
db  47h ; G
db  14h
db    0
db    0
db  0Ah
db 0C0h
db  75h ; u
db  0Ah
db  33h ; 3
db 0C0h
db 0E8h
db  98h
db  4Fh ; O
db    0
db    0
db 0F8h
db 0EBh
db    1
db 0F9h
db  61h ; a
db 0C3h
db  60h ; `
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db 0E8h
db  48h ; H
db  12h
db    0
db    0
db  66h ; f
db    1
db  47h ; G
db    4
db 0E8h
db 0C0h
db    1
db    0
db    0
db  72h ; r
db  2Ch ; ,
db  3Eh ; >
db  8Bh
db 0BDh
db 0AAh
db    7
db    0
db    0
db  3Eh ; >
db  8Bh
db  85h
db  61h ; a
db    6
db    0
db    0
db  3Eh ; >
db    3
db  85h
db  65h ; e
db    6
db    0
db    0
db  66h ; f
db  89h
db  47h ; G
db    4
db 0E8h
db  77h ; w
db  14h
db    0
db    0
db  0Ah
db 0C0h
db  75h ; u
db  0Ah
db  33h ; 3
db 0C0h
db 0E8h
db  51h ; Q
db  4Fh ; O
db    0
db    0
db 0F8h
db 0EBh
db    1
db 0F9h
db  61h ; a
db 0C3h
db  60h ; `
db  50h ; P
db  51h ; Q
db 0B8h
db  2Ah ; *
db    0
db    0
db    0
db  83h
db 0C0h
db    4
db  3Eh ; >
db  89h
db  85h
db  5Dh ; ]
db    6
db    0
db    0
db  3Eh ; >
db  89h
db  85h
db  61h ; a
db    6
db    0
db    0
db 0B4h
db    5
db  3Eh ; >
db  8Ah
db  85h
db 0C3h
db    1
db    0
db    0
db 0D1h
db 0E1h
db  83h
db 0C1h
db    4
db 0E8h
db  36h ; 6
db 0FDh
db 0FFh
db 0FFh
db  59h ; Y
db  58h ; X
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db  83h
db 0C7h
db  2Ah ; *
db  50h ; P
db  66h ; f
db 0ABh
db  8Bh
db 0C1h
db  66h ; f
db 0ABh
db  58h ; X
db  3Eh ; >
db  8Bh
db 0BDh
db 0AAh
db    7
db    0
db    0
db  83h
db 0C7h
db  2Ah ; *
db  66h ; f
db 0ABh
db  8Bh
db 0C1h
db  66h ; f
db 0ABh
db  61h ; a
db 0C3h
db    6
db  60h ; `
db 0E8h
db 0A8h
db 0FDh
db 0FFh
db 0FFh
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db 0E8h
db 0A2h
db  12h
db    0
db    0
db  66h ; f
db    1
db  47h ; G
db    4
db 0E8h
db  21h ; !
db    1
db    0
db    0
db  72h ; r
db  2Eh ; .
db  3Eh ; >
db  8Bh
db 0BDh
db 0AAh
db    7
db    0
db    0
db  3Eh ; >
db  8Bh
db  85h
db  61h ; a
db    6
db    0
db    0
db  3Eh ; >
db    3
db  85h
db  65h ; e
db    6
db    0
db    0
db  66h ; f
db  89h
db  47h ; G
db    4
db 0E8h
db  79h ; y
db  14h
db    0
db    0
db  0Ah
db 0C0h
db  75h ; u
db  0Ch
db  33h ; 3
db 0C0h
db 0E8h
db 0B2h
db  4Eh ; N
db    0
db    0
db  8Bh
db 0C2h
db 0F8h
db 0EBh
db    6
db 0B8h
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0F9h
db  8Bh
db 0FCh
db  36h ; 6
db  89h
db  47h ; G
db  1Ch
db  61h ; a
db    7
db 0C3h
db    6
db  60h ; `
db 0E8h
db  4Dh ; M
db 0FDh
db 0FFh
db 0FFh
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db 0E8h
db  9Ah
db  12h
db    0
db    0
db  66h ; f
db    1
db  47h ; G
db    4
db 0E8h
db 0C6h
db    0
db    0
db    0
db  72h ; r
db  2Eh ; .
db  3Eh ; >
db  8Bh
db 0BDh
db 0AAh
db    7
db    0
db    0
db  3Eh ; >
db  8Bh
db  85h
db  61h ; a
db    6
db    0
db    0
db  3Eh ; >
db    3
db  85h
db  65h ; e
db    6
db    0
db    0
db  66h ; f
db  89h
db  47h ; G
db    4
db 0E8h
db  69h ; i
db  14h
db    0
db    0
db  0Ah
db 0C0h
db  75h ; u
db  0Ch
db  33h ; 3
db 0C0h
db 0E8h
db  57h ; W
db  4Eh ; N
db    0
db    0
db  8Bh
db 0C2h
db 0F8h
db 0EBh
db    6
db 0B8h
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0F9h
db  8Bh
db 0FCh
db  36h ; 6
db  89h
db  47h ; G
db  1Ch
db  61h ; a
db    7
db 0C3h
db    6
db  60h ; `
db 0E8h
db 0F2h
db 0FCh
db 0FFh
db 0FFh
db  3Eh ; >
db  8Bh
db 0BDh
db 0A6h
db    7
db    0
db    0
db 0E8h
db  67h ; g
db  12h
db    0
db    0
db  66h ; f
db    1
db  47h ; G
db    4
db 0E8h
db  6Bh ; k
db    0
db    0
db    0
db  72h ; r
db  2Eh ; .
db  3Eh ; >
db  8Bh
db 0BDh
db 0AAh
db    7
db    0
db    0
db  3Eh ; >
db  8Bh
db  85h
db  61h ; a
db    6
db    0
db    0
db  3Eh ; >
db    3
db  85h
db  65h ; e
db    6
db    0
db    0
db  66h ; f
db  89h
db  47h ; G
db    4
db 0E8h
db  48h ; H
db  14h
db    0
db    0
db  0Ah
db 0C0h
db  75h ; u
db  0Ch
db  33h ; 3
db 0C0h
db 0E8h
db 0FCh
db  4Dh ; M
db    0
db    0
db  8Bh
db 0C2h
db 0F8h
db 0EBh
db    6
db 0B8h
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0F9h
db  8Bh
db 0FCh
db  36h ; 6
db  89h
db  47h ; G
db  1Ch
db  61h ; a
db    7
db 0C3h



sub_1001A061 proc near
push    ecx
movzx   ecx, word ptr ds:[ebp+502h]
cmp     ecx, 8
ja      short loc_1001A080
jcxz    loc_1001A07D

loc_1001A072:
call    sub_1001976F
or      eax, eax
jnz     short loc_1001A080
loop    loc_1001A072

loc_1001A07D:
clc
jmp     short loc_1001A08B

loc_1001A080:
mov     word ptr ds:[ebp+502h], 8
stc

loc_1001A08B:
pop     ecx
retn
sub_1001A061 endp




sub_1001A08D proc near
pusha
call    sub_1001A1C5
movzx   eax, word ptr ds:[ebp+653h]
call    sub_100196A3
movzx   eax, word ptr ds:[ebp+653h]
call    sub_100195FE
movzx   eax, word ptr ds:[ebp+653h]
call    sub_100195DD
or      eax, eax
jnz     short loc_1001A120
call    sub_1001A061
jb      short loc_1001A120
mov     esi, ds:[ebp+7A6h]
add     esi, ds:[ebp+65Dh]
mov     ebx, ebp
add     ebx, 665h
mov     edi, ds:[ebp+7AAh]
add     edi, ds:[ebp+661h]
call    sub_10019C0E
or      eax, eax
jnz     short loc_1001A120
mov     eax, ds:[ebp+665h]
or      eax, eax
jz      short loc_1001A120
cmp     eax, 10h
jb      short loc_1001A120
cmp     eax, 11Ah
ja      short loc_1001A120
cmp     byte ptr ds:[ebp+1C2h], 1
jz      short loc_1001A118
call    sub_100199A6

loc_1001A118:
call    sub_10019A45
clc
jmp     short loc_1001A133

loc_1001A120:
call    sub_10019A45
mov     eax, 65h ; 'e'
mov     ds:[ebp+2A7h], ax
stc

loc_1001A133:
mov     edi, esp
mov     ss:[edi+1Ch], eax
popa
retn
sub_1001A08D endp




sub_1001A13B proc near
pusha
mov     dword ptr ds:[ebp+505h], 0
xor     ebx, ebx
cmp     ds:[ebp+6E0h], ebx
jnz     short loc_1001A15E
mov     ebx, ds:[ebp+655h]
or      ebx, ebx
jz      short loc_1001A165
dec     ebx

loc_1001A15E:
mov     ecx, 1
jmp     short loc_1001A16C

loc_1001A165:
mov     ecx, 4
xor     ebx, ebx

loc_1001A16C:
mov     ds:[ebp+653h], bx
mov     eax, ebx
call    sub_10019700
or      eax, eax
jz      short loc_1001A1AD
mov     word ptr ds:[ebp+502h], 0

loc_1001A189:
call    sub_10019D2E
jnb     short loc_1001A1B3
cmp     byte ptr ds:[ebp+669h], 4Dh ; 'M'
jnz     short loc_1001A1AD
inc     word ptr ds:[ebp+502h]
cmp     word ptr ds:[ebp+502h], 8
jb      short loc_1001A189

loc_1001A1AD:
inc     ebx
loop    loc_1001A16C
stc
jmp     short loc_1001A1C3

loc_1001A1B3:
mov     esi, ds:[ebp+7AAh]
add     esi, 2Ah ; '*'
call    sub_10019CCB
clc

loc_1001A1C3:
popa
retn
sub_1001A13B endp




sub_1001A1C5 proc near
push    eax
push    ebx
push    ecx
push    edx
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_1001A236
cmp     dword ptr ds:[ebp+6E8h], 1
jz      short loc_1001A236
cmp     dword ptr ds:[ebp+6DCh], 0
jnz     short loc_1001A241
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_1001A220
cmp     dword ptr ds:[ebp+6E8h], 0
jnz     short loc_1001A220
mov     edx, 9944h
xor     eax, eax
in      ax, dx
cmp     eax, edx
jnz     short loc_1001A220
xor     eax, eax
in      al, dx
cmp     al, 33h ; '3'
jnz     short loc_1001A220
inc     edx
in      al, dx
cmp     al, 88h
jnz     short loc_1001A220
pushf
mov     edx, 9942h
in      ax, dx
mov     edx, eax
popf

loc_1001A220:
jnz     short loc_1001A236
mov     dword ptr ds:[ebp+6DCh], 1
mov     ds:[ebp+6E0h], edx
jmp     short loc_1001A241

loc_1001A236:
mov     dword ptr ds:[ebp+6DCh], 0FFFFFFFFh

loc_1001A241:
cmp     dword ptr ds:[ebp+6DCh], 1
jnz     short loc_1001A268
cmp     dword ptr ds:[ebp+6E4h], 1
jz      short loc_1001A268
mov     edx, 9942h
xor     eax, eax
out     dx, al
mov     dword ptr ds:[ebp+6E4h], 1

loc_1001A268:
pop     edx
pop     ecx
pop     ebx
pop     eax
retn
sub_1001A1C5 endp




sub_1001A26D proc near
push    eax
push    ebx
push    ecx
push    edx
cmp     dword ptr ds:[ebp+6E4h], 1
jnz     short loc_1001A286
mov     edx, 9942h
mov     eax, 1
out     dx, al

loc_1001A286:
pop     edx
pop     ecx
pop     ebx
pop     eax
retn
sub_1001A26D endp




sub_1001A28B proc near
push    edx
push    ecx
xor     edx, edx
mov     ecx, 8

loc_1001A294:
shr     al, 1
jnb     short loc_1001A299
inc     edx

loc_1001A299:
loop    loc_1001A294
shr     edx, 1
jnb     short loc_1001A2A6
mov     eax, 1
jmp     short loc_1001A2A8

loc_1001A2A6:
xor     eax, eax

loc_1001A2A8:
pop     ecx
pop     edx
retn
sub_1001A28B endp




sub_1001A2AB proc near
push    ebx
push    eax
rol     byte ptr ds:[ebp+4EAh], 1
mov     al, ds:[ebp+4E9h]
and     al, 0B1h
call    sub_1001A28B
mov     bl, ds:[ebp+4E9h]
shl     bl, 1
or      al, bl
mov     ds:[ebp+4E9h], al
mov     al, ds:[ebp+4EAh]
xor     al, ds:[ebp+4E9h]
xor     al, ds:[ebp+4EBh]
mov     ds:[ebp+4EAh], al
pop     eax
pop     ebx
retn
sub_1001A2AB endp




sub_1001A2F3 proc near
push    ebx
push    eax
rol     byte ptr ds:[ebp+4EDh], 1
mov     al, ds:[ebp+4ECh]
and     al, 0B1h
call    sub_1001A28B
mov     bl, ds:[ebp+4ECh]
shl     bl, 1
or      al, bl
mov     ds:[ebp+4ECh], al
mov     al, ds:[ebp+4EDh]
xor     al, ds:[ebp+4ECh]
xor     al, ds:[ebp+4EEh]
mov     ds:[ebp+4EDh], al
pop     eax
pop     ebx
retn
sub_1001A2F3 endp




sub_1001A33B proc near
push    ecx
mov     ds:[ebp+4EBh], al
xor     al, ds:[ebp+4EAh]
call    sub_1001A2AB
pop     ecx
retn
sub_1001A33B endp




sub_1001A351 proc near
push    ecx
xor     al, ds:[ebp+4EDh]
mov     ds:[ebp+4EEh], al
call    sub_1001A2F3
mov     al, ds:[ebp+4EEh]
pop     ecx
retn
sub_1001A351 endp




sub_1001A36E proc near
mov     [edi], al
inc     edi
inc     word ptr ds:[ebp+4D4h]
retn
sub_1001A36E endp




sub_1001A37A proc near
push    ecx
push    eax
cmp     byte ptr ds:[ebp+4D1h], 1
jnz     short loc_1001A397

loc_1001A386:
call    sub_1001B6D4
call    sub_1001A33B
call    sub_1001A36E
loop    loc_1001A386

loc_1001A397:
pop     eax
pop     ecx
retn
sub_1001A37A endp




sub_1001A39A proc near
push    ecx
push    ebx
push    eax
cmp     byte ptr ds:[ebp+4D1h], 1
jnz     short loc_1001A3E0

loc_1001A3A7:
cmp     byte ptr ds:[ebp+4F8h], 8
jl      short loc_1001A3B9
mov     byte ptr ds:[ebp+4F8h], 0

loc_1001A3B9:
mov     ebx, ebp
add     ebx, 4F0h
movzx   eax, byte ptr ds:[ebp+4F8h]
add     ebx, eax
mov     al, [ebx]
inc     byte ptr ds:[ebp+4F8h]
call    sub_1001A33B
call    sub_1001A36E
loop    loc_1001A3A7

loc_1001A3E0:
pop     eax
pop     ebx
pop     ecx
retn
sub_1001A39A endp




sub_1001A3E4 proc near
push    edx
push    ecx
push    eax
or      ecx, ecx
jz      short loc_1001A425
mov     byte ptr ds:[ebp+4D1h], 0

loc_1001A3F3:
lodsb
cmp     byte ptr ds:[ebp+4D3h], 1
jnz     short loc_1001A403
call    sub_1001A33B

loc_1001A403:
call    sub_1001A36E
cmp     byte ptr ds:[ebp+4D2h], 1
jnz     short loc_1001A423
mov     eax, ecx
dec     eax
jz      short loc_1001A423
push    ecx
mov     ecx, 1
call    sub_1001A37A
pop     ecx

loc_1001A423:
loop    loc_1001A3F3

loc_1001A425:
pop     eax
pop     ecx
pop     edx
retn
sub_1001A3E4 endp




sub_1001A429 proc near
push    edi
push    esi
mov     esi, edi
inc     esi
mov     edi, ds:[ebp+4DDh]
add     edi, ds:[ebp+4FDh]
rep movsb
pop     esi
pop     edi
retn
sub_1001A429 endp

db  53h ; S
db  50h ; P
db  3Eh ; >
db  8Bh
db  9Dh
db 0DDh
db    4
db    0
db    0
db  3Eh ; >
db    3
db  9Dh
db 0FDh
db    4
db    0
db    0
db  8Ah
db  67h ; g
db    2
db  8Ah
db  47h ; G
db    1
db  66h ; f
db  89h
db    3
db  58h ; X
db  5Bh ; [
db 0C3h



sub_1001A45D proc near
cld
mov     word ptr ds:[ebp+4D4h], 0
mov     al, [edi+9]
mov     ds:[ebp+4CEh], al
mov     al, [edi+0Ah]
mov     ds:[ebp+4CFh], al
mov     al, [edi+0Bh]
mov     ds:[ebp+4D0h], al
retn
sub_1001A45D endp




sub_1001A487 proc near
mov     al, [edi+0Ch]
mov     ds:[ebp+4BAh], al
mov     al, [edi+0Dh]
mov     ds:[ebp+4BBh], al
mov     al, [edi+0Eh]
mov     ds:[ebp+4BCh], al
mov     al, [edi+0Fh]
mov     ds:[ebp+4BDh], al
retn
sub_1001A487 endp




sub_1001A4B0 proc near
push    esi
push    edx
push    ecx
push    eax
mov     byte ptr ds:[ebp+4E9h], 0
mov     byte ptr ds:[ebp+4EAh], 0
mov     byte ptr ds:[ebp+4EBh], 0
mov     byte ptr ds:[ebp+4ECh], 0
mov     byte ptr ds:[ebp+4EDh], 0
mov     byte ptr ds:[ebp+4EEh], 0
call    sub_1001BC61
mov     al, dh
call    sub_1001B6D4
mov     ds:[ebp+4B8h], al
mov     ds:[ebp+4E7h], al
call    sub_1001B6D4
mov     ds:[ebp+4B9h], al
mov     ds:[ebp+4E8h], al
mov     byte ptr ds:[ebp+4D2h], 0
mov     byte ptr ds:[ebp+4D3h], 0
cmp     dword ptr ds:[ebp+659h], 1
jnz     short loc_1001A536
cmp     word ptr ds:[ebp+502h], 0
jnz     short loc_1001A548

loc_1001A536:
mov     ecx, 8
mov     esi, ebp
add     esi, 4B0h
call    sub_1001A3E4

loc_1001A548:
mov     byte ptr ds:[ebp+4D2h], 1
mov     ecx, 2
mov     esi, ebp
add     esi, 4B8h
call    sub_1001A3E4
mov     al, ds:[ebp+4B8h]
mov     ds:[ebp+4E9h], al
mov     ds:[ebp+4ECh], al
mov     al, ds:[ebp+4B9h]
mov     ds:[ebp+4EAh], al
mov     ds:[ebp+4EDh], al
mov     byte ptr ds:[ebp+4D1h], 0
mov     byte ptr ds:[ebp+4D3h], 1
mov     ecx, 1
call    sub_1001A37A
pop     eax
pop     ecx
pop     edx
pop     esi
retn
sub_1001A4B0 endp




sub_1001A5AB proc near
push    esi
push    ecx
push    eax
mov     byte ptr ds:[ebp+4BAh], 0A1h
mov     al, ds:[ebp+4EFh]
mov     ds:[ebp+4BBh], al
mov     ecx, 2
mov     esi, ebp
add     esi, 4BAh
call    sub_1001A3E4
mov     byte ptr ds:[ebp+4D1h], 0
mov     ecx, 1
call    sub_1001A37A
call    sub_1001B6D4
call    sub_1001A33B
call    sub_1001A36E
mov     byte ptr ds:[ebp+4D1h], 0
mov     ecx, 1
call    sub_1001A37A
pop     eax
pop     ecx
pop     esi
retn
sub_1001A5AB endp




sub_1001A60D proc near
push    esi
push    ecx
push    ebx
push    eax
cmp     byte ptr ds:[ebp+4F8h], 8
jl      short loc_1001A623
mov     byte ptr ds:[ebp+4F8h], 0

loc_1001A623:
mov     ebx, ebp
add     ebx, 4F0h
movzx   eax, byte ptr ds:[ebp+4F8h]
add     ebx, eax
mov     al, [ebx]
mov     ds:[ebp+4BAh], al
inc     byte ptr ds:[ebp+4F8h]
mov     esi, ebp
add     esi, 4BAh
mov     ecx, 1
call    sub_1001A3E4
mov     byte ptr ds:[ebp+4D1h], 0
mov     ecx, 1
call    sub_1001A37A
pop     eax
pop     ebx
pop     ecx
pop     esi
retn
sub_1001A60D endp




sub_1001A66E proc near
push    esi
push    ecx
push    eax
mov     byte ptr ds:[ebp+4BAh], 23h ; '#'
mov     al, ds:[ebp+4CEh]
mov     ds:[ebp+4BBh], al
mov     al, ds:[ebp+4CFh]
mov     ds:[ebp+4BCh], al
mov     al, ds:[ebp+4D0h]
mov     ds:[ebp+4BDh], al
mov     ecx, 4
mov     esi, ebp
add     esi, 4BAh
call    sub_1001A3E4
mov     byte ptr ds:[ebp+4D1h], 0
mov     ecx, 1
call    sub_1001A37A
mov     al, 20h ; ' '
call    sub_1001A33B
call    sub_1001A36E
mov     byte ptr ds:[ebp+4D1h], 1
mov     ecx, 10h
call    sub_1001A39A
mov     byte ptr ds:[ebp+4D1h], 0
mov     ecx, 1
call    sub_1001A39A
pop     eax
pop     ecx
pop     esi
retn
sub_1001A66E endp




sub_1001A6FB proc near
push    esi
push    ecx
push    eax
push    eax
and     al, 0Fh
mov     ds:[ebp+4E5h], al
mov     byte ptr ds:[ebp+4BAh], 81h
pop     eax
shr     al, 4
mov     ds:[ebp+4BBh], al
mov     ecx, 2
mov     esi, ebp
add     esi, 4BAh
call    sub_1001A3E4
mov     byte ptr ds:[ebp+4D1h], 0
mov     ecx, 1
call    sub_1001A37A
mov     al, 0E0h
call    sub_1001A33B
call    sub_1001A36E
cmp     byte ptr ds:[ebp+4E5h], 1
jnz     short loc_1001A757
jmp     short loc_1001A76D

loc_1001A757:
mov     byte ptr ds:[ebp+4D1h], 1
movzx   ecx, byte ptr ds:[ebp+4E5h]
dec     ecx
call    sub_1001A39A

loc_1001A76D:
mov     byte ptr ds:[ebp+4D1h], 0
mov     ecx, 1
call    sub_1001A39A
pop     eax
pop     ecx
pop     esi
retn
sub_1001A6FB endp




sub_1001A783 proc near
push    esi
push    ecx
push    eax
mov     byte ptr ds:[ebp+4BAh], 21h ; '!'
mov     byte ptr ds:[ebp+4BBh], 21h ; '!'
mov     ecx, 2
mov     esi, ebp
add     esi, 4BAh
call    sub_1001A3E4
mov     byte ptr ds:[ebp+4D1h], 0
mov     ecx, 1
call    sub_1001A37A
call    sub_1001B6D4
call    sub_1001A33B
call    sub_1001A36E
mov     byte ptr ds:[ebp+4D1h], 1
mov     ecx, 0Fh
call    sub_1001A37A
mov     byte ptr ds:[ebp+4D1h], 0
mov     ecx, 1
call    sub_1001A37A
pop     eax
pop     ecx
pop     esi
retn
sub_1001A783 endp




sub_1001A7F1 proc near
push    esi
push    ecx
push    eax
mov     byte ptr ds:[ebp+4BAh], 0E1h
call    sub_1001B6D4
mov     ds:[ebp+4BBh], al
mov     esi, ebp
add     esi, 4BAh
mov     ecx, 2
call    sub_1001A3E4
mov     byte ptr ds:[ebp+4D1h], 0
mov     ecx, 1
call    sub_1001A37A
mov     al, 60h ; '`'
call    sub_1001A33B
call    sub_1001A36E
mov     byte ptr ds:[ebp+4D1h], 1
mov     ecx, 5
call    sub_1001A39A
mov     byte ptr ds:[ebp+4D1h], 0
mov     ecx, 1
call    sub_1001A39A
pop     eax
pop     ecx
pop     esi
retn
sub_1001A7F1 endp

db  56h ; V
db  51h ; Q
db  50h ; P
db  3Eh ; >
db 0C6h
db  85h
db 0BAh
db    4
db    0
db    0
db 0C1h
db  3Eh ; >
db  8Ah
db  85h
db 0D6h
db    4
db    0
db    0
db  3Eh ; >
db  88h
db  85h
db 0BBh
db    4
db    0
db    0
db  8Bh
db 0F5h
db  81h
db 0C6h
db 0BAh
db    4
db    0
db    0
db 0B9h
db    2
db    0
db    0
db    0
db 0E8h
db  59h ; Y
db 0FBh
db 0FFh
db 0FFh
db  3Eh ; >
db 0C6h
db  85h
db 0D1h
db    4
db    0
db    0
db    0
db 0B9h
db    1
db    0
db    0
db    0
db 0E8h
db 0DDh
db 0FAh
db 0FFh
db 0FFh
db 0E8h
db  32h ; 2
db  0Eh
db    0
db    0
db 0E8h
db  94h
db 0FAh
db 0FFh
db 0FFh
db 0E8h
db 0C2h
db 0FAh
db 0FFh
db 0FFh
db  3Eh ; >
db 0C6h
db  85h
db 0D1h
db    4
db    0
db    0
db    1
db 0B9h
db    1
db    0
db    0
db    0
db 0E8h
db 0BCh
db 0FAh
db 0FFh
db 0FFh
db  3Eh ; >
db 0C6h
db  85h
db 0D1h
db    4
db    0
db    0
db    0
db 0B9h
db    1
db    0
db    0
db    0
db 0E8h
db 0AAh
db 0FAh
db 0FFh
db 0FFh
db  58h ; X
db  59h ; Y
db  5Eh ; ^
db 0C3h
db  56h ; V
db  51h ; Q
db  50h ; P
db  3Eh ; >
db 0C6h
db  85h
db 0BAh
db    4
db    0
db    0
db  43h ; C
db  3Eh ; >
db  8Ah
db  85h
db 0D6h
db    4
db    0
db    0
db  3Eh ; >
db  88h
db  85h
db 0BBh
db    4
db    0
db    0
db  57h ; W
db  3Eh ; >
db  8Bh
db 0BDh
db 0D9h
db    4
db    0
db    0
db  66h ; f
db  8Bh
db    7
db  83h
db 0C7h
db    2
db  3Eh ; >
db  89h
db 0BDh
db 0D9h
db    4
db    0
db    0
db  5Fh ; _
db  3Eh ; >
db  88h
db  85h
db 0BCh
db    4
db    0
db    0
db  3Eh ; >
db  88h
db 0A5h
db 0BDh
db    4
db    0
db    0
db  8Bh
db 0F5h
db  81h
db 0C6h
db 0BAh
db    4
db    0
db    0
db 0B9h
db    4
db    0
db    0
db    0
db 0E8h
db 0C1h
db 0FAh
db 0FFh
db 0FFh
db  3Eh ; >
db 0C6h
db  85h
db 0D1h
db    4
db    0
db    0
db    0
db 0B9h
db    1
db    0
db    0
db    0
db 0E8h
db  45h ; E
db 0FAh
db 0FFh
db 0FFh
db  58h ; X
db  59h ; Y
db  5Eh ; ^
db 0C3h
db  56h ; V
db  51h ; Q
db  50h ; P
db  3Eh ; >
db 0C6h
db  85h
db 0BAh
db    4
db    0
db    0
db  43h ; C
db  3Eh ; >
db  8Ah
db  85h
db 0CEh
db    4
db    0
db    0
db  3Eh ; >
db  88h
db  85h
db 0BBh
db    4
db    0
db    0
db  3Eh ; >
db  8Ah
db  85h
db 0CFh
db    4
db    0
db    0
db  3Eh ; >
db  88h
db  85h
db 0BCh
db    4
db    0
db    0
db  3Eh ; >
db  8Ah
db  85h
db 0D0h
db    4
db    0
db    0
db  3Eh ; >
db  88h
db  85h
db 0BDh
db    4
db    0
db    0
db 0B9h
db    4
db    0
db    0
db    0
db  3Eh ; >
db  80h
db 0BDh
db 0FBh
db    4
db    0
db    0
db    2
db  76h ; v
db  19h
db  3Eh ; >
db 0C6h
db  85h
db 0BAh
db    4
db    0
db    0
db  45h ; E
db  3Eh ; >
db  88h
db  95h
db 0BEh
db    4
db    0
db    0
db  3Eh ; >
db  88h
db 0B5h
db 0BFh
db    4
db    0
db    0
db  83h
db 0C1h
db    2
db  8Bh
db 0F5h
db  81h
db 0C6h
db 0BAh
db    4
db    0
db    0
db 0E8h
db  41h ; A
db 0FAh
db 0FFh
db 0FFh
db  3Eh ; >
db 0C6h
db  85h
db 0D1h
db    4
db    0
db    0
db    0
db 0B9h
db    1
db    0
db    0
db    0
db 0E8h
db 0C5h
db 0F9h
db 0FFh
db 0FFh
db 0E8h
db  1Ah
db  0Dh
db    0
db    0
db 0E8h
db  7Ch ; |
db 0F9h
db 0FFh
db 0FFh
db 0E8h
db 0AAh
db 0F9h
db 0FFh
db 0FFh
db  3Eh ; >
db 0C6h
db  85h
db 0D1h
db    4
db    0
db    0
db    1
db 0B9h
db    1
db    0
db    0
db    0
db 0E8h
db 0C4h
db 0F9h
db 0FFh
db 0FFh
db  3Eh ; >
db 0C6h
db  85h
db 0D1h
db    4
db    0
db    0
db    0
db 0B9h
db    1
db    0
db    0
db    0
db 0E8h
db 0B2h
db 0F9h
db 0FFh
db 0FFh
db  58h ; X
db  59h ; Y
db  5Eh ; ^
db 0C3h
db  56h ; V
db  51h ; Q
db  50h ; P
db  3Eh ; >
db 0C6h
db  85h
db 0BAh
db    4
db    0
db    0
db    4
db 0B9h
db    5
db    0
db    0
db    0
db  3Eh ; >
db  88h
db  95h
db 0BBh
db    4
db    0
db    0
db  3Eh ; >
db  88h
db 0B5h
db 0BCh
db    4
db    0
db    0
db  8Bh
db 0F5h
db  81h
db 0C6h
db 0BAh
db    4
db    0
db    0
db 0E8h
db 0CDh
db 0F9h
db 0FFh
db 0FFh
db  3Eh ; >
db 0C6h
db  85h
db 0D1h
db    4
db    0
db    0
db    0
db 0B9h
db    1
db    0
db    0
db    0
db 0E8h
db  51h ; Q
db 0F9h
db 0FFh
db 0FFh
db 0E8h
db 0A6h
db  0Ch
db    0
db    0
db 0E8h
db    8
db 0F9h
db 0FFh
db 0FFh
db 0E8h
db  36h ; 6
db 0F9h
db 0FFh
db 0FFh
db  3Eh ; >
db 0C6h
db  85h
db 0D1h
db    4
db    0
db    0
db    1
db 0B9h
db    3
db    0
db    0
db    0
db 0E8h
db  50h ; P
db 0F9h
db 0FFh
db 0FFh
db  3Eh ; >
db 0C6h
db  85h
db 0D1h
db    4
db    0
db    0
db    0
db 0B9h
db    1
db    0
db    0
db    0
db 0E8h
db  3Eh ; >
db 0F9h
db 0FFh
db 0FFh
db  58h ; X
db  59h ; Y
db  5Eh ; ^
db 0C3h
db  56h ; V
db  51h ; Q
db  50h ; P
db  3Eh ; >
db 0C6h
db  85h
db 0BAh
db    4
db    0
db    0
db    1
db  3Eh ; >
db 0C6h
db  85h
db 0BBh
db    4
db    0
db    0
db    1
db 0B9h
db    2
db    0
db    0
db    0
db  8Bh
db 0F5h
db  81h
db 0C6h
db 0BAh
db    4
db    0
db    0
db 0E8h
db  5Fh ; _
db 0F9h
db 0FFh
db 0FFh
db  3Eh ; >
db 0C6h
db  85h
db 0D1h
db    4
db    0
db    0
db    0
db 0B9h
db    1
db    0
db    0
db    0
db 0E8h
db 0E3h
db 0F8h
db 0FFh
db 0FFh
db 0E8h
db  38h ; 8
db  0Ch
db    0
db    0
db 0E8h
db  9Ah
db 0F8h
db 0FFh
db 0FFh
db 0E8h
db 0C8h
db 0F8h
db 0FFh
db 0FFh
db  3Eh ; >
db 0C6h
db  85h
db 0D1h
db    4
db    0
db    0
db    1
db 0B9h
db    4
db    0
db    0
db    0
db 0E8h
db 0E2h
db 0F8h
db 0FFh
db 0FFh
db  3Eh ; >
db 0C6h
db  85h
db 0D1h
db    4
db    0
db    0
db    0
db 0B9h
db    1
db    0
db    0
db    0
db 0E8h
db 0D0h
db 0F8h
db 0FFh
db 0FFh
db  58h ; X
db  59h ; Y
db  5Eh ; ^
db 0C3h



sub_1001AACE proc near
push    eax
mov     byte ptr ds:[ebp+4F9h], 0
call    sub_1001BC61
mov     al, dh
call    sub_1001B6D4
cmp     al, 3Ch ; '<'
jb      short loc_1001AAEB
xor     eax, eax
jmp     short loc_1001AAF7

loc_1001AAEB:
cmp     al, 1Eh
jb      short loc_1001AAF3
mov     al, 1
jmp     short loc_1001AAF7

loc_1001AAF3:
mov     al, 3
jmp     short $+2

loc_1001AAF7:
mov     ds:[ebp+4EFh], al
call    sub_1001A36E
call    sub_1001A4B0
call    sub_1001A5AB
call    sub_1001B6D4
cmp     al, 80h
jb      short loc_1001AB23
or      byte ptr ds:[ebp+4F9h], 1
call    sub_1001A60D

loc_1001AB23:
call    sub_1001A66E
call    sub_1001B6D4
cmp     al, 80h
jb      short loc_1001AB3E
or      byte ptr ds:[ebp+4F9h], 2
call    sub_1001A60D

loc_1001AB3E:
mov     al, 0B4h
call    sub_1001A6FB
call    sub_1001B6D4
cmp     al, 80h
jb      short loc_1001AB5B
or      byte ptr ds:[ebp+4F9h], 4
call    sub_1001A60D

loc_1001AB5B:
pop     eax
retn
sub_1001AACE endp




sub_1001AB5D proc near
push    edi
push    ecx
mov     byte ptr ds:[ebp+4ECh], 0
mov     byte ptr ds:[ebp+4EDh], 0
mov     al, [edi]
call    sub_1001A351
mov     [edi], al
inc     edi
mov     al, ds:[ebp+4E7h]
mov     ds:[ebp+4ECh], al
mov     al, ds:[ebp+4E8h]
mov     ds:[ebp+4EDh], al
movzx   ecx, word ptr ds:[ebp+4D4h]
dec     ecx

loc_1001AB9E:
mov     al, [edi]
call    sub_1001A351
mov     [edi], al
inc     edi
loop    loc_1001AB9E
pop     ecx
pop     edi
retn
sub_1001AB5D endp




sub_1001ABAD proc near
push    ecx
push    ebx
cld
mov     byte ptr ds:[ebp+4FAh], 0
add     edi, 1
cmp     byte ptr [edi], 51h ; 'Q'
mov     byte ptr ds:[ebp+4FBh], 1
jz      short loc_1001ABF4
cmp     byte ptr [edi], 54h ; 'T'
mov     byte ptr ds:[ebp+4FBh], 2
jz      short loc_1001ABF4
cmp     byte ptr [edi], 55h ; 'U'
mov     byte ptr ds:[ebp+4FBh], 3
jz      short loc_1001ABF4
mov     byte ptr ds:[ebp+4FBh], 0FFh
mov     eax, 65h ; 'e'
jmp     loc_1001AD13

loc_1001ABF4:
add     edi, 2
cmp     byte ptr [edi], 52h ; 'R'
jz      short loc_1001AC06
mov     eax, 65h ; 'e'
jmp     loc_1001AD13

loc_1001AC06:
inc     edi
test    byte ptr ds:[ebp+4F9h], 1
jz      short loc_1001AC12
inc     edi

loc_1001AC12:
add     edi, 4
cmp     byte ptr [edi], 43h ; 'C'
jnz     short loc_1001AC21
mov     eax, 15h
jmp     short loc_1001AC2B

loc_1001AC21:
cmp     byte ptr [edi], 54h ; 'T'
jnz     short loc_1001AC39
mov     eax, 1Eh

loc_1001AC2B:
inc     edi
mov     byte ptr ds:[ebp+4FAh], 1
jmp     loc_1001AD13

loc_1001AC39:
mov     byte ptr ds:[ebp+4FCh], 6
cmp     byte ptr [edi], 53h ; 'S'
jz      short loc_1001AC6A
mov     byte ptr ds:[ebp+4FCh], 8
cmp     byte ptr [edi], 4Dh ; 'M'
jz      short loc_1001AC6A
mov     byte ptr ds:[ebp+4FCh], 10h
cmp     byte ptr [edi], 4Ch ; 'L'
jz      short loc_1001AC6A
mov     eax, 64h ; 'd'
jmp     loc_1001AD13

loc_1001AC6A:
cmp     byte ptr ds:[ebp+4E6h], 0
jnz     short loc_1001AC76
jmp     short loc_1001AC93

loc_1001AC76:
cld
push    edi
push    esi
mov     esi, edi
inc     esi
mov     edi, ds:[ebp+4DDh]
add     edi, 10h
xor     ecx, ecx
mov     cl, ds:[ebp+4FCh]
rep movsb
pop     esi
pop     edi

loc_1001AC93:
add     edi, 11h
cmp     byte ptr ds:[ebp+4FAh], 1
jnz     short loc_1001ACA1
dec     edi

loc_1001ACA1:
test    byte ptr ds:[ebp+4F9h], 2
jz      short loc_1001ACAC
inc     edi

loc_1001ACAC:
add     edi, 2
cmp     byte ptr [edi], 52h ; 'R'
jz      short loc_1001ACC0
cmp     byte ptr [edi], 51h ; 'Q'
jz      short loc_1001AD03
mov     eax, 64h ; 'd'
jmp     short loc_1001AD13

loc_1001ACC0:
cld
push    edi
push    esi
push    eax
inc     edi
mov     al, [edi]
cmp     al, ds:[ebp+4BAh]
jnz     short loc_1001ACF9
mov     al, [edi+1]
cmp     al, ds:[ebp+4BBh]
jnz     short loc_1001ACF9
mov     al, [edi+2]
cmp     al, ds:[ebp+4BCh]
jnz     short loc_1001ACF9
mov     al, [edi+3]
cmp     al, ds:[ebp+4BDh]
jnz     short loc_1001ACF9
pop     eax
pop     esi
pop     edi
jmp     short loc_1001AD03

loc_1001ACF9:
pop     eax
pop     esi
pop     edi
mov     eax, 64h ; 'd'
jmp     short loc_1001AD13

loc_1001AD03:
add     edi, 4
test    byte ptr ds:[ebp+4F9h], 4
jz      short loc_1001AD11
inc     edi

loc_1001AD11:
xor     eax, eax

loc_1001AD13:
pop     ebx
pop     ecx
retn
sub_1001ABAD endp




sub_1001AD16 proc near
push    edi
push    esi
push    edx
push    ecx
push    ebx
call    sub_1001ABAD
or      eax, eax
jnz     loc_1001AE81
add     edi, 2
cmp     byte ptr [edi], 52h ; 'R'
jz      short loc_1001AD3A
mov     eax, 65h ; 'e'
jmp     loc_1001AE81

loc_1001AD3A:
mov     dword ptr ds:[ebp+4FDh], 0
mov     ecx, 10h
call    sub_1001A429
add     edi, 10h
add     edi, 2
cmp     byte ptr [edi], 52h ; 'R'
jz      short loc_1001AD73
cmp     byte ptr [edi], 51h ; 'Q'
jnz     short loc_1001AD69
mov     eax, 65h ; 'e'
jmp     loc_1001AE81

loc_1001AD69:
mov     eax, 65h ; 'e'
jmp     loc_1001AE81

loc_1001AD73:
push    edi
push    esi
mov     esi, edi
add     esi, 5
mov     edi, ds:[ebp+4DDh]
add     edi, 24h ; '$'
mov     ds:[ebp+4E1h], edi
mov     ax, [esi]
mov     [edi], ax
pop     esi
pop     edi
mov     ebx, ds:[ebp+4E1h]
mov     al, [ebx+1]
and     al, 80h
jz      loc_1001AE3C
xor     eax, eax
mov     al, [edi+1]
shl     eax, 1
sub     eax, 6
sub     eax, 10h
mov     ebx, ds:[ebp+4E1h]
mov     dl, [ebx]
and     dl, 3
cmp     dl, 1
jnz     short loc_1001ADC8
sub     eax, 6
jmp     short loc_1001ADD5

loc_1001ADC8:
cmp     dl, 2
jnz     short loc_1001ADD2
sub     eax, 8
jmp     short loc_1001ADD5

loc_1001ADD2:
sub     eax, 10h

loc_1001ADD5:
mov     cl, [ebx]
test    cl, 4
jz      short loc_1001ADDF
sub     eax, 4

loc_1001ADDF:
test    cl, 8
jz      short loc_1001ADE7
sub     eax, 4

loc_1001ADE7:
test    cl, 10h
jz      short loc_1001ADEF
sub     eax, 2

loc_1001ADEF:
test    cl, 20h
jz      short loc_1001ADF7
sub     eax, 2

loc_1001ADF7:
test    cl, 40h
jz      short loc_1001ADFF
sub     eax, 2

loc_1001ADFF:
test    cl, 80h
jz      short loc_1001AE07
sub     eax, 2

loc_1001AE07:
mov     cl, [ebx+1]
test    cl, 1
jz      short loc_1001AE12
sub     eax, 2

loc_1001AE12:
test    cl, 2
jz      short loc_1001AE1A
sub     eax, 2

loc_1001AE1A:
test    cl, 4
jz      short loc_1001AE22
sub     eax, 4

loc_1001AE22:
test    cl, 8
jz      short loc_1001AE2A
sub     eax, 4

loc_1001AE2A:
test    cl, 10h
jz      short loc_1001AE32
sub     eax, 4

loc_1001AE32:
test    cl, 20h
jz      short loc_1001AE3E
sub     eax, 4
jmp     short loc_1001AE3E

loc_1001AE3C:
xor     eax, eax

loc_1001AE3E:
shr     eax, 1
mov     ebx, ds:[ebp+4DDh]
add     ebx, 26h ; '&'
mov     [ebx], ax
add     edi, 6
cmp     dword ptr ds:[ebp+659h], 1
jz      short loc_1001AE7F
add     edi, 2
cmp     byte ptr [edi], 52h ; 'R'
jz      short loc_1001AE69
mov     eax, 64h ; 'd'
jmp     short loc_1001AE81

loc_1001AE69:
mov     ebx, ds:[ebp+4DDh]
add     ebx, 20h ; ' '
mov     ah, [edi+2]
mov     al, [edi+1]
mov     [ebx], ax
add     edi, 2

loc_1001AE7F:
xor     eax, eax

loc_1001AE81:
pop     ebx
pop     ecx
pop     edx
pop     esi
pop     edi
retn
sub_1001AD16 endp

db  57h ; W
db  56h ; V
db  51h ; Q
db  53h ; S
db 0E8h
db  1Dh
db 0FDh
db 0FFh
db 0FFh
db  0Bh
db 0C0h
db  75h ; u
db  36h ; 6
db  3Eh ; >
db  0Fh
db 0B7h
db  8Dh
db 0D7h
db    4
db    0
db    0
db  83h
db 0C7h
db    2
db  80h
db  3Fh ; ?
db  52h ; R
db  74h ; t
db    7
db 0B8h
db  66h ; f
db    0
db    0
db    0
db 0EBh
db  1Fh
db  3Eh ; >
db  8Bh
db  9Dh
db 0DDh
db    4
db    0
db    0
db  8Ah
db  67h ; g
db    2
db  8Ah
db  47h ; G
db    1
db  66h ; f
db  89h
db    3
db  3Eh ; >
db  83h
db  85h
db 0DDh
db    4
db    0
db    0
db    2
db  83h
db 0C7h
db    2
db 0E2h
db 0D4h
db  33h ; 3
db 0C0h
db  5Bh ; [
db  59h ; Y
db  5Eh ; ^
db  5Fh ; _
db 0C3h
db  57h ; W
db  56h ; V
db  51h ; Q
db  53h ; S
db 0E8h
db 0D5h
db 0FCh
db 0FFh
db 0FFh
db  0Bh
db 0C0h
db  75h ; u
db  1Bh
db  3Eh ; >
db  0Fh
db 0B7h
db  8Dh
db 0D7h
db    4
db    0
db    0
db  83h
db 0C7h
db    4
db  80h
db  3Fh ; ?
db  57h ; W
db  74h ; t
db    7
db 0B8h
db  67h ; g
db    0
db    0
db    0
db 0EBh
db    4
db 0E2h
db 0EFh
db  33h ; 3
db 0C0h
db  5Bh ; [
db  59h ; Y
db  5Eh ; ^
db  5Fh ; _
db 0C3h
db  57h ; W
db  56h ; V
db  51h ; Q
db  53h ; S
db 0E8h
db 0A8h
db 0FCh
db 0FFh
db 0FFh
db  0Bh
db 0C0h
db  75h ; u
db  5Bh ; [
db  83h
db 0C7h
db    2
db  80h
db  3Fh ; ?
db  52h ; R
db  74h ; t
db    7
db 0B8h
db  65h ; e
db    0
db    0
db    0
db 0EBh
db  4Ch ; L
db  57h ; W
db  56h ; V
db  8Bh
db 0F7h
db  46h ; F
db  3Eh ; >
db  8Bh
db 0BDh
db 0DDh
db    4
db    0
db    0
db  83h
db 0C7h
db    0
db 0B9h
db  10h
db    0
db    0
db    0
db 0F3h
db 0A4h
db  5Eh ; ^
db  5Fh ; _
db  3Eh ; >
db  83h
db 0BDh
db  59h ; Y
db    6
db    0
db    0
db    1
db  74h ; t
db  28h ; (
db  83h
db 0C7h
db  10h
db  83h
db 0C7h
db    2
db  80h
db  3Fh ; ?
db  52h ; R
db  74h ; t
db    7
db 0B8h
db  64h ; d
db    0
db    0
db    0
db 0EBh
db  18h
db  3Eh ; >
db  8Bh
db  9Dh
db 0DDh
db    4
db    0
db    0
db  83h
db 0C3h
db  20h
db  8Ah
db  67h ; g
db    2
db  8Ah
db  47h ; G
db    1
db  66h ; f
db  89h
db    3
db  83h
db 0C7h
db    2
db  33h ; 3
db 0C0h
db  5Bh ; [
db  59h ; Y
db  5Eh ; ^
db  5Fh ; _
db 0C3h
db  57h ; W
db  56h ; V
db  51h ; Q
db  53h ; S
db  52h ; R
db 0E8h
db  3Ah ; :
db 0FCh
db 0FFh
db 0FFh
db  5Ah ; Z
db  0Bh
db 0C0h
db  75h ; u
db  49h ; I
db  83h
db 0C7h
db    2
db  0Bh
db 0D2h
db  74h ; t
db  10h
db  83h
db 0C7h
db    2
db  3Eh ; >
db  80h
db 0BDh
db 0FBh
db    4
db    0
db    0
db    2
db  76h ; v
db    3
db  83h
db 0C7h
db    2
db  80h
db  3Fh ; ?
db  52h ; R
db  74h ; t
db  27h ; '
db  80h
db  3Fh ; ?
db  45h ; E
db  75h ; u
db    7
db 0B8h
db  14h
db    0
db    0
db    0
db 0EBh
db  11h
db  80h
db  3Fh ; ?
db  4Eh ; N
db  75h ; u
db    7
db 0B8h
db  16h
db    0
db    0
db    0
db 0EBh
db    5
db 0B8h
db  17h
db    0
db    0
db    0
db  66h ; f
db  3Eh ; >
db  89h
db  85h
db 0A7h
db    2
db    0
db    0
db 0EBh
db    6
db  0Fh
db 0B7h
db  57h ; W
db    1
db  33h ; 3
db 0C0h
db  5Bh ; [
db  59h ; Y
db  5Eh ; ^
db  5Fh ; _
db 0C3h
db  57h ; W
db  56h ; V
db  53h ; S
db  52h ; R
db 0E8h
db 0DEh
db 0FBh
db 0FFh
db 0FFh
db  5Ah ; Z
db  0Bh
db 0C0h
db  75h ; u
db  3Dh ; =
db  0Bh
db 0D2h
db  74h ; t
db    5
db  83h
db 0C7h
db    5
db 0EBh
db    3
db  83h
db 0C7h
db    2
db  80h
db  3Fh ; ?
db  52h ; R
db  74h ; t
db  27h ; '
db  80h
db  3Fh ; ?
db  45h ; E
db  75h ; u
db    7
db 0B8h
db  14h
db    0
db    0
db    0
db 0EBh
db  11h
db  80h
db  3Fh ; ?
db  4Eh ; N
db  75h ; u
db    7
db 0B8h
db  16h
db    0
db    0
db    0
db 0EBh
db    5
db 0B8h
db  17h
db    0
db    0
db    0
db  66h ; f
db  3Eh ; >
db  89h
db  85h
db 0A7h
db    2
db    0
db    0
db 0EBh
db    5
db  8Bh
db  57h ; W
db    1
db  33h ; 3
db 0C0h
db  5Bh ; [
db  5Eh ; ^
db  5Fh ; _
db 0C3h
db  57h ; W
db  56h ; V
db  53h ; S
db  52h ; R
db 0E8h
db  8Fh
db 0FBh
db 0FFh
db 0FFh
db  5Ah ; Z
db  0Bh
db 0C0h
db  75h ; u
db  14h
db  83h
db 0C7h
db    2
db  80h
db  3Fh ; ?
db  54h ; T
db  74h ; t
db    7
db 0B8h
db  17h
db    0
db    0
db    0
db 0EBh
db    5
db  8Bh
db  57h ; W
db    2
db  33h ; 3
db 0C0h
db  66h ; f
db  3Eh ; >
db  89h
db  85h
db 0A7h
db    2
db    0
db    0
db  5Bh ; [
db  5Eh ; ^
db  5Fh ; _
db 0C3h
db  57h ; W
db  56h ; V
db  53h ; S
db  52h ; R
db 0E8h
db  61h ; a
db 0FBh
db 0FFh
db 0FFh
db  5Ah ; Z
db  0Bh
db 0C0h
db  75h ; u
db  1Fh
db  83h
db 0C7h
db    2
db  80h
db  3Fh ; ?
db  52h ; R
db  74h ; t
db  12h
db  80h
db  3Fh ; ?
db  45h ; E
db  75h ; u
db    6
db  66h ; f
db 0B8h
db  0Bh
db    0
db 0EBh
db    5
db 0B8h
db  17h
db    0
db    0
db    0
db 0EBh
db    5
db  8Bh
db  57h ; W
db    1
db  33h ; 3
db 0C0h
db  66h ; f
db  3Eh ; >
db  89h
db  85h
db 0A7h
db    2
db    0
db    0
db  5Bh ; [
db  5Eh ; ^
db  5Fh ; _
db 0C3h



sub_1001B07C proc near
push    edi
push    ebx
push    ecx
push    edx
call    sub_1001A45D
add     edi, 2Ah ; '*'
call    sub_1001AACE
call    sub_1001A783
call    sub_1001A7F1
mov     eax, 42h ; 'B'
call    sub_1001A6FB
call    sub_1001A60D
movzx   eax, word ptr ds:[ebp+4D4h]
pop     edx
pop     ecx
pop     ebx
pop     edi
retn
sub_1001B07C endp

db  57h ; W
db 0E8h
db 0A4h
db 0F3h
db 0FFh
db 0FFh
db  83h
db 0C7h
db  2Ah ; *
db  0Fh
db 0B7h
db  47h ; G
db    2
db  66h ; f
db  3Eh ; >
db  89h
db  85h
db 0D7h
db    4
db    0
db    0
db  66h ; f
db  3Dh ; =
db    0
db    0
db  75h ; u
db    7
db 0B8h
db  66h ; f
db    0
db    0
db    0
db 0EBh
db  35h ; 5
db  0Fh
db 0B7h
db    7
db  3Eh ; >
db  88h
db  85h
db 0D6h
db    4
db    0
db    0
db  83h
db 0C7h
db    4
db 0E8h
db 0E7h
db 0F9h
db 0FFh
db 0FFh
db  3Eh ; >
db  0Fh
db 0B7h
db  8Dh
db 0D7h
db    4
db    0
db    0
db 0E8h
db  6Ch ; l
db 0F7h
db 0FFh
db 0FFh
db  3Eh ; >
db 0FEh
db  85h
db 0D6h
db    4
db    0
db    0
db 0E2h
db 0F2h
db 0E8h
db  0Bh
db 0F5h
db 0FFh
db 0FFh
db  3Eh ; >
db  0Fh
db 0B7h
db  85h
db 0D4h
db    4
db    0
db    0
db  5Fh ; _
db 0C3h
db  57h ; W
db  56h ; V
db 0E8h
db  4Ah ; J
db 0F3h
db 0FFh
db 0FFh
db  83h
db 0C7h
db  2Ah ; *
db  66h ; f
db  8Bh
db  47h ; G
db    2
db  66h ; f
db  3Eh ; >
db  89h
db  85h
db 0D7h
db    4
db    0
db    0
db  66h ; f
db  8Bh
db    7
db  3Eh ; >
db  88h
db  85h
db 0D6h
db    4
db    0
db    0
db  83h
db 0C7h
db    4
db  3Eh ; >
db  89h
db 0BDh
db 0D9h
db    4
db    0
db    0
db  3Eh ; >
db  89h
db 0BDh
db 0DDh
db    4
db    0
db    0
db  3Eh ; >
db  0Fh
db 0B7h
db  85h
db 0D7h
db    4
db    0
db    0
db 0D1h
db 0E0h
db    3
db 0F8h
db 0E8h
db  80h
db 0F9h
db 0FFh
db 0FFh
db  3Eh ; >
db  0Fh
db 0B7h
db  8Dh
db 0D7h
db    4
db    0
db    0
db 0E8h
db  79h ; y
db 0F7h
db 0FFh
db 0FFh
db  3Eh ; >
db 0FEh
db  85h
db 0D6h
db    4
db    0
db    0
db 0E2h
db 0F2h
db 0E8h
db 0A4h
db 0F4h
db 0FFh
db 0FFh
db  3Eh ; >
db  8Bh
db 0BDh
db 0DDh
db    4
db    0
db    0
db  3Eh ; >
db  8Bh
db 0B5h
db 0DDh
db    4
db    0
db    0
db  3Eh ; >
db  0Fh
db 0B7h
db  85h
db 0D7h
db    4
db    0
db    0
db 0D1h
db 0E0h
db    3
db 0F0h
db  3Eh ; >
db  0Fh
db 0B7h
db  8Dh
db 0D4h
db    4
db    0
db    0
db 0F3h
db 0A4h
db  3Eh ; >
db  0Fh
db 0B7h
db  85h
db 0D4h
db    4
db    0
db    0
db  66h ; f
db  3Eh ; >
db  2Bh ; +
db  85h
db 0D7h
db    4
db    0
db    0
db  66h ; f
db  3Eh ; >
db  2Bh ; +
db  85h
db 0D7h
db    4
db    0
db    0
db  5Eh ; ^
db  5Fh ; _
db 0C3h
db  57h ; W
db  51h ; Q
db 0FCh
db 0E8h
db 0ADh
db 0F2h
db 0FFh
db 0FFh
db  83h
db 0C7h
db  2Ah ; *
db 0E8h
db  16h
db 0F9h
db 0FFh
db 0FFh
db 0E8h
db 0C6h
db 0F5h
db 0FFh
db 0FFh
db 0B0h
db  42h ; B
db 0E8h
db  37h ; 7
db 0F5h
db 0FFh
db 0FFh
db 0E8h
db  44h ; D
db 0F4h
db 0FFh
db 0FFh
db  3Eh ; >
db  0Fh
db 0B7h
db  85h
db 0D4h
db    4
db    0
db    0
db  59h ; Y
db  5Fh ; _
db 0C3h



sub_1001B1D4 proc near
push    edi
call    sub_1001A45D
add     edi, 2Ah ; '*'
call    sub_1001AACE
call    sub_1001A783
call    sub_1001A7F1
mov     eax, 62h ; 'b'
call    sub_1001A6FB
call    sub_1001A60D
movzx   eax, word ptr ds:[ebp+4D4h]
pop     edi
retn
sub_1001B1D4 endp

db  57h ; W
db  51h ; Q
db  52h ; R
db 0E8h
db  50h ; P
db 0F2h
db 0FFh
db 0FFh
db  83h
db 0C7h
db  2Ah ; *
db  52h ; R
db 0E8h
db 0B8h
db 0F8h
db 0FFh
db 0FFh
db  5Ah ; Z
db  3Eh ; >
db  83h
db 0BDh
db 0B8h
db    6
db    0
db    0
db    1
db  74h ; t
db  14h
db  0Bh
db 0D2h
db  75h ; u
db    9
db 0B0h
db  52h ; R
db 0E8h
db 0CFh
db 0F4h
db 0FFh
db 0FFh
db 0EBh
db  19h
db 0E8h
db    6
db 0F7h
db 0FFh
db 0FFh
db 0EBh
db  12h
db  0Bh
db 0D2h
db  75h ; u
db    9
db 0B0h
db 0A4h
db 0E8h
db 0BBh
db 0F4h
db 0FFh
db 0FFh
db 0EBh
db    5
db 0E8h
db 0A5h
db 0F7h
db 0FFh
db 0FFh
db 0E8h
db 0C1h
db 0F3h
db 0FFh
db 0FFh
db  3Eh ; >
db  0Fh
db 0B7h
db  85h
db 0D4h
db    4
db    0
db    0
db  5Ah ; Z
db  59h ; Y
db  5Fh ; _
db 0C3h
db  57h ; W
db  51h ; Q
db  52h ; R
db 0E8h
db 0FDh
db 0F1h
db 0FFh
db 0FFh
db  83h
db 0C7h
db  2Ah ; *
db  52h ; R
db 0E8h
db  65h ; e
db 0F8h
db 0FFh
db 0FFh
db  5Ah ; Z
db 0E8h
db 0F1h
db 0F7h
db 0FFh
db 0FFh
db 0E8h
db  99h
db 0F3h
db 0FFh
db 0FFh
db  3Eh ; >
db  0Fh
db 0B7h
db  85h
db 0D4h
db    4
db    0
db    0
db  5Ah ; Z
db  59h ; Y
db  5Fh ; _
db 0C3h
db  57h ; W
db  51h ; Q
db  52h ; R
db 0E8h
db 0D5h
db 0F1h
db 0FFh
db 0FFh
db  83h
db 0C7h
db  2Ah ; *
db  52h ; R
db 0E8h
db  3Dh ; =
db 0F8h
db 0FFh
db 0FFh
db  5Ah ; Z
db  8Bh
db 0C2h
db 0E8h
db  62h ; b
db 0F4h
db 0FFh
db 0FFh
db 0E8h
db  6Fh ; o
db 0F3h
db 0FFh
db 0FFh
db  3Eh ; >
db  0Fh
db 0B7h
db  85h
db 0D4h
db    4
db    0
db    0
db  5Ah ; Z
db  59h ; Y
db  5Fh ; _
db 0C3h



sub_1001B2AA proc near
push    edi
cld
movzx   eax, word ptr [edi+4]
sub     eax, 2Ah ; '*'
sub     eax, 4Ch ; 'L'
jz      short loc_1001B2E6
mov     ds:[ebp+4D4h], ax
call    sub_1001A487
add     edi, 2Ah ; '*'
mov     ds:[ebp+4DDh], edi
add     edi, 4Ch ; 'L'
mov     byte ptr ds:[ebp+4E6h], 1
call    sub_1001AB5D
call    sub_1001AD16
jmp     short loc_1001B2EB

loc_1001B2E6:
mov     eax, 65h ; 'e'

loc_1001B2EB:
pop     edi
retn
sub_1001B2AA endp

db  57h ; W
db  51h ; Q
db  53h ; S
db 0FCh
db  0Fh
db 0B7h
db  47h ; G
db    4
db  83h
db 0E8h
db  2Ah ; *
db  83h
db 0E8h
db    4
db  74h ; t
db  5Eh ; ^
db  57h ; W
db  83h
db 0C7h
db  2Ah ; *
db  0Fh
db 0B7h
db  5Fh ; _
db    2
db 0D1h
db 0E3h
db  5Fh ; _
db  2Bh ; +
db 0C3h
db  66h ; f
db  3Eh ; >
db  89h
db  85h
db 0D4h
db    4
db    0
db    0
db 0E8h
db  70h ; p
db 0F1h
db 0FFh
db 0FFh
db  83h
db 0C7h
db  2Ah ; *
db  0Fh
db 0B7h
db  47h ; G
db    2
db  66h ; f
db  3Eh ; >
db  89h
db  85h
db 0D7h
db    4
db    0
db    0
db  0Bh
db 0C0h
db  75h ; u
db    7
db 0B8h
db  66h ; f
db    0
db    0
db    0
db 0EBh
db  2Fh ; /
db  83h
db 0C7h
db    4
db  3Eh ; >
db  89h
db 0BDh
db 0DDh
db    4
db    0
db    0
db  3Eh ; >
db  0Fh
db 0B7h
db  8Dh
db 0D7h
db    4
db    0
db    0
db 0D1h
db 0E1h
db    3
db 0F9h
db  3Eh ; >
db 0C6h
db  85h
db 0E6h
db    4
db    0
db    0
db    0
db 0E8h
db    9
db 0F8h
db 0FFh
db 0FFh
db 0E8h
db  2Eh ; .
db 0FBh
db 0FFh
db 0FFh
db 0EBh
db    5
db 0B8h
db  65h ; e
db    0
db    0
db    0
db  5Bh ; [
db  59h ; Y
db  5Fh ; _
db 0C3h
db  57h ; W
db  51h ; Q
db  53h ; S
db 0FCh
db  0Fh
db 0B7h
db  47h ; G
db    4
db  83h
db 0E8h
db  2Ah ; *
db  83h
db 0E8h
db    4
db  74h ; t
db  45h ; E
db  66h ; f
db  3Eh ; >
db  89h
db  85h
db 0D4h
db    4
db    0
db    0
db 0E8h
db    6
db 0F1h
db 0FFh
db 0FFh
db  83h
db 0C7h
db  2Ah ; *
db  0Fh
db 0B7h
db  47h ; G
db    2
db  66h ; f
db  3Eh ; >
db  89h
db  85h
db 0D7h
db    4
db    0
db    0
db  0Bh
db 0C0h
db  75h ; u
db    7
db 0B8h
db  67h ; g
db    0
db    0
db    0
db 0EBh
db  23h ; #
db  83h
db 0C7h
db    4
db  3Eh ; >
db  89h
db 0BDh
db 0DDh
db    4
db    0
db    0
db  3Eh ; >
db 0C6h
db  85h
db 0E6h
db    4
db    0
db    0
db    0
db 0E8h
db 0ABh
db 0F7h
db 0FFh
db 0FFh
db 0E8h
db  18h
db 0FBh
db 0FFh
db 0FFh
db 0EBh
db    5
db 0B8h
db  65h ; e
db    0
db    0
db    0
db  5Bh ; [
db  59h ; Y
db  5Fh ; _
db 0C3h
db  57h ; W
db 0FCh
db  0Fh
db 0B7h
db  47h ; G
db    4
db  83h
db 0E8h
db  2Ah ; *
db  83h
db 0E8h
db  24h ; $
db  74h ; t
db  2Eh ; .
db  66h ; f
db  3Eh ; >
db  89h
db  85h
db 0D4h
db    4
db    0
db    0
db 0E8h
db 0AAh
db 0F0h
db 0FFh
db 0FFh
db  83h
db 0C7h
db  2Ah ; *
db  3Eh ; >
db  89h
db 0BDh
db 0DDh
db    4
db    0
db    0
db  83h
db 0C7h
db  24h ; $
db  3Eh ; >
db 0C6h
db  85h
db 0E6h
db    4
db    0
db    0
db    1
db 0E8h
db  66h ; f
db 0F7h
db 0FFh
db 0FFh
db 0E8h
db    0
db 0FBh
db 0FFh
db 0FFh
db 0EBh
db    5
db 0B8h
db  65h ; e
db    0
db    0
db    0
db  5Fh ; _
db 0C3h
db  57h ; W
db 0FCh
db  0Fh
db 0B7h
db  47h ; G
db    4
db  83h
db 0E8h
db  2Ah ; *
db  83h
db 0E8h
db  24h ; $
db  66h ; f
db  3Eh ; >
db  89h
db  85h
db 0D4h
db    4
db    0
db    0
db 0E8h
db  69h ; i
db 0F0h
db 0FFh
db 0FFh
db  83h
db 0C7h
db  2Ah ; *
db  3Eh ; >
db  89h
db 0BDh
db 0DDh
db    4
db    0
db    0
db  83h
db 0C7h
db  24h ; $
db  3Eh ; >
db 0C6h
db  85h
db 0E6h
db    4
db    0
db    0
db    1
db 0E8h
db  25h ; %
db 0F7h
db 0FFh
db 0FFh
db  3Eh ; >
db  83h
db 0BDh
db 0B8h
db    6
db    0
db    0
db    1
db  74h ; t
db    7
db 0E8h
db  22h ; "
db 0FBh
db 0FFh
db 0FFh
db 0EBh
db    5
db 0E8h
db  78h ; x
db 0FBh
db 0FFh
db 0FFh
db  5Fh ; _
db 0C3h
db  57h ; W
db 0FCh
db  0Fh
db 0B7h
db  47h ; G
db    4
db  83h
db 0E8h
db  2Ah ; *
db  83h
db 0E8h
db  24h ; $
db  66h ; f
db  3Eh ; >
db  89h
db  85h
db 0D4h
db    4
db    0
db    0
db 0E8h
db  1Eh
db 0F0h
db 0FFh
db 0FFh
db  83h
db 0C7h
db  2Ah ; *
db  3Eh ; >
db  89h
db 0BDh
db 0DDh
db    4
db    0
db    0
db  83h
db 0C7h
db  24h ; $
db  3Eh ; >
db 0C6h
db  85h
db 0E6h
db    4
db    0
db    0
db    0
db 0E8h
db 0DAh
db 0F6h
db 0FFh
db 0FFh
db 0E8h
db  8Dh
db 0FBh
db 0FFh
db 0FFh
db  5Fh ; _
db 0C3h
db  57h ; W
db 0FCh
db  0Fh
db 0B7h
db  47h ; G
db    4
db  83h
db 0E8h
db  2Ah ; *
db  83h
db 0E8h
db  24h ; $
db  66h ; f
db  3Eh ; >
db  89h
db  85h
db 0D4h
db    4
db    0
db    0
db 0E8h
db 0E4h
db 0EFh
db 0FFh
db 0FFh
db  83h
db 0C7h
db  2Ah ; *
db  3Eh ; >
db  89h
db 0BDh
db 0DDh
db    4
db    0
db    0
db  83h
db 0C7h
db  24h ; $
db  3Eh ; >
db 0C6h
db  85h
db 0E6h
db    4
db    0
db    0
db    0
db 0E8h
db 0A0h
db 0F6h
db 0FFh
db 0FFh
db 0E8h
db  81h
db 0FBh
db 0FFh
db 0FFh
db  5Fh ; _
db 0C3h



sub_1001B4C4 proc near
pusha
mov     esi, eax
cmp     word ptr ds:[ebp+7E6h], 0
jnz     short loc_1001B4EF
call    dword ptr ds:[ebp+0D8h]
mov     edx, eax
or      edx, edx
jnz     short loc_1001B4E7
xor     edx, ecx
xor     edx, 1111h

loc_1001B4E7:
mov     ds:[ebp+7E6h], dx

loc_1001B4EF:
mov     ax, ds:[ebp+7E6h]
mov     edi, ebp
add     edi, 3F6h
call    sub_1001B642
cmp     dword ptr ds:[ebp+7E8h], 0
jnz     short loc_1001B543
mov     dx, ds:[ebp+7E6h]
mov     [esi], dx
movzx   ecx, word ptr [esi+4]
sub     ecx, 6
add     esi, 6
call    sub_1001B5A2
mov     [esi-4], dx
mov     edi, esi
call    sub_1001B679
mov     ax, ds:[ebp+7E6h]
xor     [esi-2], ax
xor     eax, eax
jmp     short loc_1001B58B

loc_1001B543:
add     esi, 6
movzx   ecx, word ptr [esi-2]
xor     cx, [esi-6]
sub     ecx, 6
jz      short loc_1001B585
cmp     ecx, 222h
ja      short loc_1001B585
mov     edi, esi
call    sub_1001B679
mov     dx, [esi-6]
call    sub_1001B5A2
cmp     [esi-4], dx
jnz     short loc_1001B585
mov     ax, [esi-6]
xor     [esi-2], ax
mov     ds:[ebp+7E6h], ax
xor     eax, eax
jmp     short loc_1001B58B

loc_1001B585:
mov     eax, 0FFFFFFFFh
stc

loc_1001B58B:
pushfw
xor     dword ptr ds:[ebp+7E8h], 1
popfw
mov     edi, esp
mov     ss:[edi+1Ch], eax
popa
retn
sub_1001B4C4 endp




sub_1001B5A2 proc near
push    esi
push    eax
push    ecx
push    ecx
shr     ecx, 1

loc_1001B5A8:
lodsw
xor     eax, 1111h
add     dx, ax
loop    loc_1001B5A8
pop     ecx
test    ecx, 1
jz      short loc_1001B5C3
movzx   eax, byte ptr [esi]
add     dx, ax

loc_1001B5C3:
pop     ecx
pop     eax
pop     esi
retn
sub_1001B5A2 endp




sub_1001B5C7 proc near
mov     ds:[ebp+320h], ax
xor     eax, eax
test    word ptr ds:[ebp+320h], 2
jz      short loc_1001B5E3
xor     eax, 1

loc_1001B5E3:
test    word ptr ds:[ebp+320h], 4
jz      short loc_1001B5F5
xor     eax, 1

loc_1001B5F5:
test    word ptr ds:[ebp+320h], 10h
jz      short loc_1001B607
xor     eax, 1

loc_1001B607:
test    word ptr ds:[ebp+320h], 8000h
jz      short loc_1001B619
xor     eax, 1

loc_1001B619:
rcr     ax, 1
rcl     word ptr ds:[ebp+320h], 1
cmp     word ptr ds:[ebp+320h], 0
jnz     short loc_1001B639
mov     word ptr ds:[ebp+320h], 1144h

loc_1001B639:
mov     ax, ds:[ebp+320h]
retn
sub_1001B5C7 endp




sub_1001B642 proc near
pusha
mov     ecx, 8

loc_1001B648:
push    ecx
call    sub_1001B5C7
push    eax
xor     eax, 180h
mov     ecx, eax
and     ecx, 3
test    eax, 400h
jnz     short loc_1001B668
inc     ecx
rol     eax, cl
jmp     short loc_1001B66A

loc_1001B668:
ror     eax, cl

loc_1001B66A:
mov     edx, eax
shr     edx, 10h
xor     eax, edx
stosw
pop     eax
pop     ecx
loop    loc_1001B648
popa
retn
sub_1001B642 endp




sub_1001B679 proc near
pusha
xor     ebx, ebx

loc_1001B67C:
cmp     ebx, 0Fh
jl      short loc_1001B685
xor     edx, edx
jmp     short loc_1001B688

loc_1001B685:
mov     edx, ebx
inc     edx

loc_1001B688:
mov     al, ds:[ebp+edx+3F6h]
mul     bl
mov     ah, al
lodsb
xor     al, ds:[ebp+ebx+3F6h]
xor     al, ah
stosb
mov     al, 6
xor     al, ds:[ebp+ebx+3F6h]
xor     al, ds:[ebp+edx+3F6h]
add     ds:[ebp+ebx+3F6h], al
cmp     byte ptr ds:[ebp+ebx+3F6h], 0
jnz     short loc_1001B6CE
mov     byte ptr ds:[ebp+ebx+3F6h], 83h

loc_1001B6CE:
mov     ebx, edx
loop    loc_1001B67C
popa
retn
sub_1001B679 endp




sub_1001B6D4 proc near
push    ebx
xor     ebx, ebx
test    al, 1
jz      short loc_1001B6DE
xor     bl, 1

loc_1001B6DE:
test    al, 20h
jz      short loc_1001B6E5
xor     bl, 1

loc_1001B6E5:
test    al, 40h
jz      short loc_1001B6EC
xor     bl, 1

loc_1001B6EC:
test    al, 80h
jz      short loc_1001B6F3
xor     bl, 1

loc_1001B6F3:
rcr     bl, 1
rcl     al, 1
or      al, al
jnz     short loc_1001B705
mov     ax, ds:[ebp+1C7h]
or      al, ah

loc_1001B705:
pop     ebx
retn
sub_1001B6D4 endp




sub_1001B707 proc near

; FUNCTION CHUNK AT 1001B7DF SIZE 00000002 BYTES

pusha
call    loc_1001B70E
align 2

loc_1001B70E:
pop     ebx
cmp     byte ptr [ebx], 1
jz      loc_1001B7DF
mov     byte ptr [ebx], 1
sub     esp, 0Ch
mov     edx, esp
mov     eax, ebp
add     eax, 35Ch
mov     ds:[ebp+7DCh], eax
push    edx
push    28h ; '('
push    eax
call    near ptr loc_1001B73E+1
push    ebx
push    ebx
dec     ecx
pop     edi
inc     ecx
inc     ebx
push    esp

loc_1001B73E:
add     [esi], bh
sub_1001B707 endp ; sp-analysis failed

call    dword ptr [ebp+0A4h]
pop     edx
or      eax, eax
jz      short loc_1001B7B2
mov     esi, ds:[ebp+7DCh]
call    sub_1001B90E
call    sub_1001B919
jb      short loc_1001B7B2
mov     ss:[edx], eax
call    sub_1001B8FD
call    sub_1001B919
jb      short loc_1001B7B2
mov     ss:[edx+8], eax
call    sub_1001B8FD
call    sub_1001B919
jb      short loc_1001B7B2
mov     ss:[edx+4], eax
lodsb
or      al, al
jz      short loc_1001B792
cmp     al, 20h ; ' '
jz      short loc_1001B792
cmp     al, 9
jz      short loc_1001B792
cmp     al, 2Ch ; ','
jnz     short loc_1001B7B2

loc_1001B792:
mov     eax, ss:[edx+4]
mov     ds:[ebp+3D2h], eax
mov     eax, ss:[edx+8]
mov     ds:[ebp+3D6h], eax
mov     eax, ss:[edx]
mov     ds:[ebp+3CEh], eax

loc_1001B7B2:
mov     eax, ds:[ebp+3D2h]
mov     ds:[ebp+3DEh], eax
mov     eax, ds:[ebp+3D6h]
mov     ds:[ebp+3E2h], eax
mov     eax, ds:[ebp+3CEh]
mov     ds:[ebp+3DAh], eax
add     esp, 0Ch
; START OF FUNCTION CHUNK FOR sub_1001B707

loc_1001B7DF:
popa
retn
; END OF FUNCTION CHUNK FOR sub_1001B707



sub_1001B7E1 proc near

; FUNCTION CHUNK AT 1001B847 SIZE 00000002 BYTES

pusha
call    loc_1001B7E8
align 4

loc_1001B7E8:
pop     ebx
cmp     byte ptr [ebx], 1
jz      short loc_1001B847
mov     byte ptr [ebx], 1
mov     eax, ebp
add     eax, 35Ch
mov     ds:[ebp+7DCh], eax
push    28h ; '('
push    eax
call    near ptr loc_1001B812+1
push    ebx
push    ebx
dec     ecx
pop     edi
inc     ebx
dec     edi
dec     ebp
push    eax
dec     edi
push    edx
push    esp

loc_1001B812:
add     [esi], bh
sub_1001B7E1 endp ; sp-analysis failed

call    dword ptr [ebp+0A4h]
or      eax, eax
jz      short loc_1001B847
mov     esi, ds:[ebp+7DCh]
call    sub_1001B90E
call    sub_1001B919
jb      short loc_1001B847
and     eax, 0FFFFh
cmp     eax, 1
jb      short loc_1001B847
cmp     eax, 4
ja      short loc_1001B847
mov     ds:[ebp+655h], eax
; START OF FUNCTION CHUNK FOR sub_1001B7E1

loc_1001B847:
popa
retn
; END OF FUNCTION CHUNK FOR sub_1001B7E1



sub_1001B849 proc near

; FUNCTION CHUNK AT 1001B8A1 SIZE 00000002 BYTES

pusha
call    loc_1001B850
align 10h

loc_1001B850:
pop     ebx
cmp     byte ptr [ebx], 1
jz      short loc_1001B8A1
mov     byte ptr [ebx], 1
mov     eax, ebp
add     eax, 35Ch
mov     ds:[ebp+7DCh], eax
push    28h ; '('
push    eax
call    near ptr loc_1001B878+1
push    ebx
push    ebx
dec     ecx
pop     edi
inc     esp
inc     ebp
dec     esp
inc     ecx
pop     ecx

loc_1001B878:
add     [esi], bh
sub_1001B849 endp ; sp-analysis failed

call    dword ptr [ebp+0A4h]
or      eax, eax
jz      short loc_1001B8A1
mov     esi, ds:[ebp+7DCh]
call    sub_1001B90E
call    sub_1001B919
jb      short loc_1001B8A1
movzx   eax, ax
mov     ds:[ebp+672h], eax
; START OF FUNCTION CHUNK FOR sub_1001B849

loc_1001B8A1:
popa
retn
; END OF FUNCTION CHUNK FOR sub_1001B849



sub_1001B8A3 proc near

; FUNCTION CHUNK AT 1001B8FB SIZE 00000002 BYTES

pusha
call    loc_1001B8AA
align 2

loc_1001B8AA:
pop     ebx
cmp     byte ptr [ebx], 1
jz      short loc_1001B8FB
mov     byte ptr [ebx], 1
mov     eax, ebp
add     eax, 35Ch
mov     ds:[ebp+7DCh], eax
push    28h ; '('
push    eax
call    near ptr loc_1001B8D2+1
push    ebx
push    ebx
dec     ecx
pop     edi
inc     ebx
dec     edi
dec     ebp
dec     ecx
dec     edi

loc_1001B8D2:
add     [esi], bh
sub_1001B8A3 endp ; sp-analysis failed

call    dword ptr [ebp+0A4h]
or      eax, eax
jz      short loc_1001B8FB
mov     esi, ds:[ebp+7DCh]
call    sub_1001B90E
call    sub_1001B919
jb      short loc_1001B8FB
movzx   eax, ax
mov     ds:[ebp+6E8h], eax
; START OF FUNCTION CHUNK FOR sub_1001B8A3

loc_1001B8FB:
popa
retn
; END OF FUNCTION CHUNK FOR sub_1001B8A3



sub_1001B8FD proc near
call    sub_1001B90E
cmp     byte ptr [esi], 2Ch ; ','
jnz     short locret_1001B90D
inc     esi
call    sub_1001B90E

locret_1001B90D:
retn
sub_1001B8FD endp




sub_1001B90E proc near
lodsb
cmp     al, 20h ; ' '
jz      short sub_1001B90E
cmp     al, 9
jz      short sub_1001B90E
dec     esi
retn
sub_1001B90E endp




sub_1001B919 proc near
lodsb
call    sub_1001B945
jb      short loc_1001B93D
mov     ebx, eax
mov     ecx, 3

loc_1001B928:
lodsb
call    sub_1001B945
jb      short loc_1001B940
xchg    eax, ebx
shl     eax, 1
add     ebx, eax
shl     eax, 2
add     ebx, eax
loopw   loc_1001B928

loc_1001B93D:
stc
jmp     short locret_1001B944

loc_1001B940:
dec     esi
mov     eax, ebx
clc

locret_1001B944:
retn
sub_1001B919 endp




sub_1001B945 proc near
cmp     al, 30h ; '0'
jb      short loc_1001B956
cmp     al, 39h ; '9'
ja      short loc_1001B956
sub     al, 30h ; '0'
and     eax, 0FFh
jmp     short locret_1001B957

loc_1001B956:
stc

locret_1001B957:
retn
sub_1001B945 endp

unk_1001B958 db  36h ; 6
db  80h
db  33h ; 3
db 0AAh
db  36h ; 6
db 0D0h
db    3
db 0C3h
unk_1001B960 db  36h ; 6
db 0D0h
db  0Bh
db  36h ; 6
db  80h
db  33h ; 3
db    3
db 0C3h
unk_1001B968 db  36h ; 6
db 0D0h
db    3
db  36h ; 6
db  80h
db  33h ; 3
db  11h
db  36h ; 6
db 0D0h
db    3
db 0C3h
unk_1001B973 db  36h ; 6
db 0D0h
db  0Bh
db  36h ; 6
db  80h
db  33h ; 3
db    4
db  36h ; 6
db 0D0h
db  0Bh
db 0C3h
unk_1001B97E db  36h ; 6
db 0D0h
db    3
db  36h ; 6
db  80h
db  33h ; 3
db 0C3h
db  36h ; 6
db 0D0h
db  0Bh
db 0C3h
unk_1001B989 db  36h ; 6
db 0D0h
db    3
db  36h ; 6
db 0F6h
db  13h
db  36h ; 6
db 0D0h
db    3
db 0C3h
unk_1001B993 db  36h ; 6
db  8Ah
db    3
db 0C0h
db 0C0h
db    4
db  36h ; 6
db  30h ; 0
db    3
db 0C3h
unk_1001B99D db  36h ; 6
db  8Ah
db    3
db  34h ; 4
db 0D0h
db 0D0h
db 0C8h
db  36h ; 6
db  88h
db    3
db 0C3h
db  39h ; 9
db    5
db  84h
db 0EFh



sub_1001B9AC proc near
call    sub_1001F5F2
push    ebx
push    ecx
push    edx
xor     ebx, ebx
mov     ecx, ds:[ebp+38Ch]

loc_1001B9BD:
mov     edx, ds:[ebp+ebx+34Ch]
mov     ds:[ebp+1C9h], dx
mov     ds:[ebp+390h], ebx
call    sub_1001C1B9
jb      short loc_1001B9E9
call    sub_1001C194
or      eax, eax
jz      short loc_1001B9F4
call    sub_1001C27A

loc_1001B9E9:
add     ebx, 4
loop    loc_1001B9BD
stc
mov     eax, 0FFFFFFFFh

loc_1001B9F4:
pop     edx
pop     ecx
pop     ebx
retn
sub_1001B9AC endp




sub_1001B9F8 proc near
call    sub_1001C1B9
jb      short loc_1001BA10
call    sub_1001C194
or      eax, eax
jnz     short loc_1001BA0B
clc
jmp     short locret_1001BA16

loc_1001BA0B:
call    sub_1001C27A

loc_1001BA10:
stc
mov     eax, 0FFFFFFFFh

locret_1001BA16:
retn
sub_1001B9F8 endp




sub_1001BA17 proc near
push    eax
push    ebx
push    ecx
push    esi
mov     dx, ds:[ebp+1C9h]
mov     byte ptr ds:[ebp+2E5h], 0
movzx   ecx, byte ptr ds:[ebp+2E1h]
and     cl, 3
jnz     short loc_1001BA50
call    sub_1001C6DF
call    sub_1001C538
inc     edx
call    sub_1001C718
test    al, 40h
dec     edx
jmp     loc_1001BB1E

loc_1001BA50:
mov     esi, ecx
mov     ah, al
mov     cl, ds:[ebp+2E1h]
and     cl, 1Ch
shr     cl, 2
cmp     esi, 1
jnz     short loc_1001BA84
mov     bh, 1
mov     ds:[ebp+2E4h], bh
mov     word ptr ds:[ebp+2E2h], 6
cmp     cl, 5
jle     short loc_1001BA80
mov     cl, 5

loc_1001BA80:
shl     bh, cl
jmp     short loc_1001BAC3

loc_1001BA84:
cmp     esi, 2
jnz     short loc_1001BAA9
mov     bh, 3
mov     ds:[ebp+2E4h], bh
mov     word ptr ds:[ebp+2E2h], 3
cmp     cl, 2
jle     short loc_1001BAA3
mov     cl, 2

loc_1001BAA3:
shl     cl, 1
shl     bh, cl
jmp     short loc_1001BAC3

loc_1001BAA9:
mov     bh, 7
mov     ds:[ebp+2E4h], bh
mov     word ptr ds:[ebp+2E2h], 2
cmp     cl, 0
jz      short loc_1001BAC3
mov     bh, 38h ; '8'

loc_1001BAC3:
mov     bl, ds:[ebp+2E1h]
and     bl, 0F8h
shr     bl, 3
movzx   ecx, word ptr ds:[ebp+2E2h]

loc_1001BAD8:
push    ecx
mov     al, ah
and     al, bh
jz      short loc_1001BAFB
mov     cl, al
or      al, ds:[ebp+2E5h]
mov     ds:[ebp+2E5h], cl
or      al, 0C0h
call    sub_1001C6DF
call    sub_1001C538

loc_1001BAFB:
test    bh, 20h
jz      short loc_1001BB09
mov     bh, ds:[ebp+2E4h]
jmp     short loc_1001BB0D

loc_1001BB09:
mov     ecx, esi
shl     bh, cl

loc_1001BB0D:
sar     bl, 1
jnb     short loc_1001BB1A
inc     edx
call    sub_1001C718
dec     edx
test    al, 40h

loc_1001BB1A:
pop     ecx
loopw   loc_1001BAD8

loc_1001BB1E:
mov     al, 0C0h
call    sub_1001C6DF
call    sub_1001C538
rol     byte ptr ds:[ebp+2E1h], 1
push    eax
push    edx
mov     dx, ds:[ebp+1C9h]
mov     al, 0E0h
call    sub_1001C6DF
call    sub_1001C4F3
inc     edx
call    sub_1001C718
dec     edx
push    eax
mov     al, 0C0h
call    sub_1001C6DF
call    sub_1001C538
pop     eax
test    al, 40h
pop     edx
pop     eax
pop     esi
pop     ecx
pop     ebx
pop     eax
retn
sub_1001BA17 endp




sub_1001BB65 proc near
push    eax
mov     esi, ebp
add     esi, 1B8h
mov     edi, ebp
add     edi, 1BBh
lodsb
xor     al, 5Ah
stosb
lodsb
xor     al, 0C5h
stosb
lodsb
xor     al, 77h
stosb
pop     esi
lodsb
xor     al, 3Eh
stosb
lodsb
xor     al, 0A1h
stosb
lodsb
xor     al, 0DBh
stosb
lodsb
xor     al, 22h
stosb
retn
sub_1001BB65 endp




sub_1001BB94 proc near
mov     esi, ebp
add     esi, 1B8h
mov     edi, ebp
add     edi, 1BBh
lodsb
xor     al, 5Ah
stosb
lodsb
xor     al, 0C5h
stosb
lodsb
xor     al, 77h
stosb
add     esi, 29h ; ')'
add     edi, 3
lodsb
xor     al, 22h
stosb
retn
sub_1001BB94 endp




sub_1001BBBB proc near
push    esi
mov     esi, ebp
add     esi, 1B8h
lodsb
xor     al, 5Ah
shl     eax, 8
lodsb
xor     al, 0C5h
shl     eax, 8
lodsb
xor     al, 77h
shl     eax, 8
mov     esi, ebp
add     esi, 1E4h
lodsb
xor     al, 22h
pop     esi
retn
sub_1001BBBB endp




sub_1001BBE3 proc near
cmp     dword ptr ds:[ebp+7A2h], 1
jz      short locret_1001BC60
cmp     dword ptr ds:[ebp+659h], 1
jz      short locret_1001BC60
push    eax
push    edx
cmp     byte ptr ds:[ebp+3A0h], 1
jnz     short loc_1001BC32
call    sub_1001C479
test    ax, 262h
jz      short loc_1001BC32
mov     al, 1
mov     ah, ds:[ebp+320h]
xor     al, ah
ror     ax, 1
sub     ax, 9523h
ror     ax, 1
movzx   edx, word ptr ds:[ebp+1C9h]
add     edx, 3
out     dx, ax
jmp     short loc_1001BC5E

loc_1001BC32:
mov     dx, ds:[ebp+1C9h]
mov     al, 0C0h
call    sub_1001C6DF
call    sub_1001C521
mov     al, 80h
call    sub_1001C6DF
call    sub_1001C521
mov     al, 0C0h
call    sub_1001C6DF
call    sub_1001C521

loc_1001BC5E:
pop     edx
pop     eax

locret_1001BC60:
retn
sub_1001BBE3 endp




sub_1001BC61 proc near
push    eax
push    ebx
push    ecx
call    dword ptr ds:[ebp+0D8h]
mov     dh, al
pop     ecx
pop     ebx
pop     eax
retn
sub_1001BC61 endp




sub_1001BC71 proc near
push    esi
mov     ecx, 3
xor     ebx, ebx
mov     al, ds:[ebp+28Eh]
test    al, 7
jnz     short loc_1001BC87
shr     al, 3

loc_1001BC87:
mov     esi, ds:[ebp+ebx+297h]
mov     byte ptr ss:[esi+2], 0
sar     al, 1
jnb     short loc_1001BCD8
mov     byte ptr ss:[esi+3], 1
mov     al, 0C0h
cmp     dword ptr ds:[ebp+7A2h], 1
jz      short loc_1001BCDD
cmp     dword ptr ds:[ebp+659h], 1
jz      short loc_1001BCDD
mov     al, ss:[esi]
or      al, 0C0h
mov     dx, ds:[ebp+1C9h]
call    sub_1001C6DF
call    sub_1001C538
mov     al, 0C0h
call    sub_1001C6DF
call    sub_1001C538
jmp     short loc_1001BCDD

loc_1001BCD8:
mov     byte ptr ss:[esi+3], 0

loc_1001BCDD:
add     ebx, 4
loop    loc_1001BC87
pop     esi
retn
sub_1001BC71 endp




sub_1001BCE4 proc near
xor     ebx, ebx
mov     bl, ds:[ebp+1DAh]
and     bl, 7
mov     esi, ebp
add     esi, 1BBh
xor     edi, edi
mov     ecx, 3

loc_1001BCFF:
push    ebp
lodsb
xor     al, ds:[ebp+ebx+1D3h]
mov     ebp, ds:[ebp+edi+297h]
mov     [ebp+1], al
inc     ebx
cmp     ebx, 7
jl      short loc_1001BD1C
xor     ebx, ebx

loc_1001BD1C:
add     edi, 4
pop     ebp
loop    loc_1001BCFF
xor     edi, edi
mov     ecx, 3

loc_1001BD29:
push    ebp
lodsb
xor     al, ds:[ebp+ebx+1D3h]
mov     ebp, ds:[ebp+edi+297h]
mov     [ebp+0], al
inc     ebx
cmp     ebx, 7
jl      short loc_1001BD46
xor     ebx, ebx

loc_1001BD46:
add     edi, 4
pop     ebp
loop    loc_1001BD29
lodsb
xor     al, ds:[ebp+ebx+1D3h]
mov     ds:[ebp+28Eh], al
retn
sub_1001BCE4 endp




sub_1001BD5D proc near
push    esi
push    ebx
mov     ebx, edx
cmp     dword ptr ds:[ebp+7A2h], 1
jz      short loc_1001BD9A
cmp     dword ptr ds:[ebp+659h], 1
jz      short loc_1001BD9A
mov     al, ss:[ebx]
xor     al, 20h
or      al, 0C0h
mov     dx, ds:[ebp+1C9h]
call    sub_1001C6DF
call    sub_1001C538
mov     al, 0C0h
call    sub_1001C6DF
call    sub_1001C538

loc_1001BD9A:
cmp     byte ptr ss:[ebx+3], 1
jz      short loc_1001BDA7
dec     byte ptr ss:[ebx+1]
jmp     short loc_1001BDB0

loc_1001BDA7:
inc     byte ptr ss:[ebx+1]
cmp     byte ptr ss:[ebx+1], 3Fh ; '?'

loc_1001BDB0:
jz      short loc_1001BDB7
jmp     loc_1001BEC4

loc_1001BDB7:
cmp     dword ptr ds:[ebp+7A2h], 1
jz      loc_1001BEB2
cmp     dword ptr ds:[ebp+659h], 1
jz      loc_1001BEB2
mov     al, ds:[ebp+28Eh]
xor     al, 20h
or      al, 0C0h
mov     dx, ds:[ebp+1C9h]
call    sub_1001C6DF
call    sub_1001C538
mov     al, 0C0h
call    sub_1001C6DF
call    sub_1001C538
push    eax
push    edx
mov     dx, ds:[ebp+1C9h]
mov     al, 0E0h
call    sub_1001C6DF
call    sub_1001C4F3
inc     edx
call    sub_1001C415
dec     edx
push    eax
mov     al, 0C0h
call    sub_1001C6DF
call    sub_1001C538
pop     eax
test    al, 40h
pop     edx
pop     eax
jz      short loc_1001BE33

loc_1001BE2D:
stc
jmp     loc_1001BEE2

loc_1001BE33:
mov     al, ss:[ebx]
xor     al, 20h
or      al, 0C0h
mov     dx, ds:[ebp+1C9h]
call    sub_1001C3CC
call    sub_1001C538
mov     al, 0C0h
call    sub_1001C3CC
call    sub_1001C538
push    eax
push    edx
mov     dx, ds:[ebp+1C9h]
mov     al, 0E0h
call    sub_1001C6DF
call    sub_1001C4F3
inc     edx
call    sub_1001C718
dec     edx
push    eax
mov     al, 0C0h
call    sub_1001C6DF
call    sub_1001C538
pop     eax
test    al, 40h
pop     edx
pop     eax
jz      short loc_1001BE2D
mov     al, ds:[ebp+28Eh]
xor     al, 20h
or      al, 0C0h
mov     dx, ds:[ebp+1C9h]
call    sub_1001C6DF
call    sub_1001C538
mov     al, 0C0h
call    sub_1001C6DF
call    sub_1001C538

loc_1001BEB2:
mov     byte ptr ss:[ebx+2], 1
xor     byte ptr ss:[ebx+3], 1
inc     word ptr ds:[ebp+28Bh]

loc_1001BEC4:
xor     eax, eax
mov     ebx, ds:[ebp+2F3h]
mov     al, ss:[ebx]
and     ax, 7
mov     esi, eax
shl     esi, 2
call    dword ptr ds:[ebp+esi+2C1h]
clc

loc_1001BEE2:
pop     ebx
pop     esi
retn
sub_1001BD5D endp

db  0Eh
db    2
db 0E5h
db  3Bh ; ;


; Attributes: fuzzy-sp

sub_1001BEE9 proc near
call    sub_1001F5F2
push    ebx
push    ecx
push    edx
push    esi
push    edi
mov     ds:[ebp+293h], ecx
mov     ds:[ebp+28Fh], edi
mov     word ptr ds:[ebp+28Bh], 0
call    sub_1001BC61
mov     ds:[ebp+28Dh], dh
and     dh, 7
cmp     dh, cl
jnz     short loc_1001BF25
dec     byte ptr ds:[ebp+28Dh]

loc_1001BF25:
xor     ebx, ebx
mov     bl, ds:[ebp+28Dh]
shr     bl, 2
and     bl, 3
cmp     bl, 3
jnz     short loc_1001BF3B
dec     bl

loc_1001BF3B:
shl     ebx, 2
mov     ds:[ebp+2F7h], esp
mov     edx, esp
sub     esp, ds:[ebp+293h]
sub     esp, 0Ch
and     esp, 0FFFFFFFCh
mov     ecx, 4

loc_1001BF5C:
cmp     ebx, 0Ch
jnz     short loc_1001BF6A
sub     edx, ds:[ebp+293h]
jmp     short loc_1001BF6D

loc_1001BF6A:
sub     edx, 4

loc_1001BF6D:
mov     ds:[ebp+ebx+297h], edx
add     ebx, 4
cmp     ebx, 10h
jnz     short loc_1001BF7F
xor     ebx, ebx

loc_1001BF7F:
loop    loc_1001BF5C
mov     edi, ds:[ebp+2A3h]
mov     ecx, ds:[ebp+293h]
rep movsb
call    sub_1001BCE4
call    sub_1001BBE3
mov     ebx, ds:[ebp+297h]
mov     al, ss:[ebx]
call    sub_1001C30B
call    sub_1001BC61
mov     ds:[ebp+2E1h], dh
call    sub_1001BC71
xor     eax, eax
mov     al, ds:[ebp+28Eh]
and     eax, 7
mov     esi, eax
shl     eax, 1
add     esi, eax
mov     eax, ds:[ebp+2A3h]
mov     ds:[ebp+2F3h], eax
xor     ebx, ebx

loc_1001BFE0:
xor     eax, eax
mov     edx, esi
add     edx, ebx
mov     al, ds:[ebp+edx+2A9h]
mov     edi, eax
shl     edi, 2
mov     edx, ds:[ebp+edi+297h]
cmp     byte ptr ss:[edx+2], 1
jz      short loc_1001C039
call    sub_1001BD5D
jb      loc_1001C0DA
inc     dword ptr ds:[ebp+2F3h]
mov     ecx, ds:[ebp+2A3h]
add     ecx, ds:[ebp+293h]
cmp     ds:[ebp+2F3h], ecx
jl      short loc_1001C039
mov     eax, ds:[ebp+2A3h]
mov     ds:[ebp+2F3h], eax

loc_1001C039:
cmp     word ptr ds:[ebp+28Bh], 3
jz      short loc_1001C04E
inc     ebx
cmp     ebx, 3
jnz     short loc_1001BFE0
xor     ebx, ebx
jmp     short loc_1001BFE0

loc_1001C04E:
mov     byte ptr ds:[ebp+28Eh], 0
cmp     dword ptr ds:[ebp+7A2h], 1
jz      short loc_1001C0BE
cmp     dword ptr ds:[ebp+659h], 1
jz      short loc_1001C0BE
mov     ecx, 3
xor     ebx, ebx

loc_1001C071:
mov     edi, ds:[ebp+ebx+297h]
mov     al, ss:[edi]
or      al, 0C0h
call    sub_1001BA17
call    sub_1001C538
add     ebx, 4
loop    loc_1001C071
push    eax
push    edx
mov     dx, ds:[ebp+1C9h]
mov     al, 0E0h
call    sub_1001C6DF
call    sub_1001C4F3
inc     edx
call    sub_1001C718
dec     edx
push    eax
mov     al, 0C0h
call    sub_1001C6DF
call    sub_1001C538
pop     eax
test    al, 40h
pop     edx
pop     eax
jnz     short loc_1001C0DA

loc_1001C0BE:
mov     esi, ds:[ebp+2A3h]
mov     edi, ds:[ebp+28Fh]
mov     ecx, ds:[ebp+293h]
rep movsb
xor     eax, eax
clc
jmp     short loc_1001C0EA

loc_1001C0DA:
mov     word ptr ds:[ebp+28Bh], 0FFFFh
mov     eax, 0FFFFFFFFh
stc

loc_1001C0EA:
mov     esp, ds:[ebp+2F7h]
pop     edi
pop     esi
pop     edx
pop     ecx
pop     ebx
retn
sub_1001BEE9 endp

db 0BAh
db    0
db  43h ; C
db    7



sub_1001C0FB proc near
call    sub_1001F5F2
pusha
sub     esp, 8
mov     edi, ebp
add     edi, 3F6h
mov     esi, ebp
add     esi, 1BBh
mov     ecx, 3
rep movsb
sub     esi, 3
mov     ecx, 3

loc_1001C123:
lodsb
not     al
stosb
loopw   loc_1001C123
add     esi, 3
movsb
mov     esi, ebp
add     esi, 3F6h
mov     edi, esp
mov     ecx, 7
call    sub_1001BEE9
jb      short loc_1001C189
or      eax, eax
jnz     short loc_1001C189
xor     ebx, ebx
mov     bl, ds:[ebp+28Dh]
mov     ds:[ebp+1DAh], bl
and     ebx, 7
mov     esi, esp
xor     edi, edi
mov     ecx, 7

loc_1001C167:
mov     al, ss:[esi]
xor     ds:[ebp+edi+1BBh], al
mov     ds:[ebp+ebx+1D3h], al
inc     esi
inc     edi
inc     ebx
cmp     ebx, 7
jnz     short loc_1001C184
xor     ebx, ebx

loc_1001C184:
loop    loc_1001C167
xor     eax, eax
clc

loc_1001C189:
add     esp, 8
mov     edi, esp
mov     ss:[edi+1Ch], eax
popa
retn
sub_1001C0FB endp




sub_1001C194 proc near
push    ecx
push    edx
push    edi
push    esi
mov     edx, esp
sub     esp, 8
mov     edi, esp
mov     esi, edi
sub     esi, 28h ; '('
mov     ecx, 8
call    sub_1001BEE9
mov     esp, edx
pop     esi
pop     edi
pop     edx
pop     ecx
retn
sub_1001C194 endp

db  4Ch ; L
db  61h ; a
db  73h ; s
db  54h ; T



sub_1001C1B9 proc near
push    eax
push    edx
cmp     dword ptr ds:[ebp+659h], 1
jz      loc_1001C277
cmp     dword ptr ds:[ebp+7A2h], 1
jnz     short loc_1001C1E8
call    sub_1001745A
jb      loc_1001C277
call    sub_1001755E
jmp     loc_1001C277

loc_1001C1E8:
call    sub_1001C77B
jb      loc_1001C277
mov     dx, ds:[ebp+1C9h]
call    sub_1001C718
mov     ds:[ebp+2F9h], al
inc     edx
inc     edx
call    sub_1001C718
mov     ds:[ebp+2FAh], al
dec     edx
call    sub_1001C718
and     al, 8
jnz     short loc_1001C23F
mov     dx, ds:[ebp+1C9h]
mov     al, 0
call    sub_1001C6DF
inc     edx
inc     edx
mov     al, 0Dh
call    sub_1001C6DF
mov     byte ptr ds:[ebp+2FBh], 1

loc_1001C23F:
mov     dx, ds:[ebp+1C9h]
mov     al, 0C0h
call    sub_1001C6DF
call    sub_1001C50A
mov     dx, ds:[ebp+1C9h]
mov     al, 80h
call    sub_1001C6DF
call    sub_1001C50A
mov     dx, ds:[ebp+1C9h]
mov     al, 0C0h
call    sub_1001C6DF
clc

loc_1001C277:
pop     edx
pop     eax
retn
sub_1001C1B9 endp




sub_1001C27A proc near
pushf
push    eax
push    edx
cmp     dword ptr ds:[ebp+659h], 1
jz      short loc_1001C2E0
cmp     dword ptr ds:[ebp+7A2h], 1
jnz     short loc_1001C298
call    sub_100174C4
jmp     short loc_1001C2E0

loc_1001C298:
mov     dx, ds:[ebp+1C9h]
mov     al, 0
call    sub_1001C6DF
cmp     byte ptr ds:[ebp+2FBh], 1
jnz     short loc_1001C2C7
inc     edx
inc     edx
mov     al, ds:[ebp+2FAh]
call    sub_1001C6DF
mov     byte ptr ds:[ebp+2FBh], 0

loc_1001C2C7:
mov     dx, ds:[ebp+1C9h]
mov     al, ds:[ebp+2F9h]
call    sub_1001C6DF
call    sub_1001C86E

loc_1001C2E0:
pop     edx
pop     eax
popf
retn
sub_1001C27A endp




sub_1001C2E4 proc near
push    edi
push    eax
push    ecx
mov     edi, ebp
add     edi, 1BBh
mov     ecx, 7
xor     eax, eax
rep stosb
add     edi, 7
stosw
add     edi, 8
mov     ecx, 8
rep stosb
pop     ecx
pop     eax
pop     edi
retn
sub_1001C2E4 endp




sub_1001C30B proc near
push    eax
push    edx
cmp     dword ptr ds:[ebp+7A2h], 1
jz      loc_1001C3C9
cmp     dword ptr ds:[ebp+659h], 1
jz      loc_1001C3C9
mov     dx, ds:[ebp+1C9h]
or      al, 0C0h
xor     al, 20h
mov     ah, al
call    sub_1001C6DF
call    sub_1001C538
mov     al, 0C0h
call    sub_1001C6DF
call    sub_1001C538
mov     al, ah
call    sub_1001C6DF
call    sub_1001C538
mov     al, 0C0h
call    sub_1001C6DF
call    sub_1001C538
mov     al, ah
xor     al, 20h
call    sub_1001C6DF
call    sub_1001C538
mov     al, 0C0h
call    sub_1001C6DF
call    sub_1001C538
mov     al, ah
call    sub_1001C6DF
call    sub_1001C538
mov     al, 0C0h
call    sub_1001C6DF
call    sub_1001C538
mov     al, ah
call    sub_1001C6DF
call    sub_1001C538
mov     al, 0C0h
call    sub_1001C6DF
call    sub_1001C538
mov     al, ah
xor     al, 20h
call    sub_1001C6DF
call    sub_1001C538
mov     al, 0C0h
call    sub_1001C6DF
call    sub_1001C538

loc_1001C3C9:
pop     edx
pop     eax
retn
sub_1001C30B endp




sub_1001C3CC proc near
cmp     byte ptr ds:[ebp+3A0h], 1
jnz     short loc_1001C40F
push    eax
call    sub_1001C479
test    word ptr ds:[ebp+320h], 4104h
pop     eax
jz      short loc_1001C40F
push    edx
push    eax
mov     ah, ds:[ebp+321h]
add     al, ah
rol     ax, 1
add     ax, 6A47h
rol     ax, 1
movzx   edx, word ptr ds:[ebp+1C9h]
add     edx, 4
out     dx, ax
pop     eax
pop     edx
jmp     short locret_1001C414

loc_1001C40F:
call    sub_1001C6DF

locret_1001C414:
retn
sub_1001C3CC endp




sub_1001C415 proc near
cmp     byte ptr ds:[ebp+3A0h], 1
jnz     short loc_1001C455
push    eax
call    sub_1001C479
test    word ptr ds:[ebp+320h], 4104h
pop     eax
jz      short loc_1001C455
push    edx
push    eax
movzx   edx, word ptr ds:[ebp+1C9h]
add     edx, 5
in      ax, dx
ror     ax, 1
sub     ax, 8DB4h
ror     ax, 1
xor     al, ah
mov     dl, al
pop     eax
mov     al, dl
pop     edx
jmp     short locret_1001C45A

loc_1001C455:
call    sub_1001C718

locret_1001C45A:
retn
sub_1001C415 endp




sub_1001C45B proc near
push    eax
push    ecx
push    edx
call    dword ptr ds:[ebp+0D8h]
or      ax, ax
jnz     short loc_1001C46D
shr     eax, 10h

loc_1001C46D:
mov     ds:[ebp+320h], ax
pop     edx
pop     ecx
pop     eax
retn
sub_1001C45B endp




sub_1001C479 proc near
pushf
xor     eax, eax
cmp     ds:[ebp+320h], ax
jz      short loc_1001C4E4
test    word ptr ds:[ebp+320h], 2
jz      short loc_1001C498
xor     eax, 1

loc_1001C498:
test    word ptr ds:[ebp+320h], 4
jz      short loc_1001C4AA
xor     eax, 1

loc_1001C4AA:
test    word ptr ds:[ebp+320h], 10h
jz      short loc_1001C4BC
xor     eax, 1

loc_1001C4BC:
test    word ptr ds:[ebp+320h], 8000h
jz      short loc_1001C4CE
xor     eax, 1

loc_1001C4CE:
rcr     ax, 1
rcl     word ptr ds:[ebp+320h], 1
cmp     word ptr ds:[ebp+320h], 0
jnz     short loc_1001C4E9

loc_1001C4E4:
call    sub_1001C45B

loc_1001C4E9:
movzx   eax, word ptr ds:[ebp+320h]
popf
retn
sub_1001C479 endp




sub_1001C4F3 proc near
push    ecx
mov     ecx, ds:[ebp+3D2h]
jecxz   short loc_1001C508

loc_1001C4FD:
push    ecx
mov     ecx, 32h ; '2'

loc_1001C503:
loop    loc_1001C503
pop     ecx
loop    loc_1001C4FD

loc_1001C508:
pop     ecx
retn
sub_1001C4F3 endp




sub_1001C50A proc near
push    ecx
mov     ecx, ds:[ebp+3CEh]
jecxz   short loc_1001C51F

loc_1001C514:
push    ecx
mov     ecx, 7D0h

loc_1001C51A:
loop    loc_1001C51A
pop     ecx
loop    loc_1001C514

loc_1001C51F:
pop     ecx
retn
sub_1001C50A endp




sub_1001C521 proc near
push    ecx
mov     ecx, ds:[ebp+3CEh]
jecxz   short loc_1001C536

loc_1001C52B:
push    ecx
mov     ecx, 28h ; '('

loc_1001C531:
loop    loc_1001C531
pop     ecx
loop    loc_1001C52B

loc_1001C536:
pop     ecx
retn
sub_1001C521 endp




sub_1001C538 proc near
pushf
push    ecx
mov     ecx, ds:[ebp+3D6h]
jecxz   short loc_1001C54E

loc_1001C543:
push    ecx
mov     ecx, 5

loc_1001C549:
loop    loc_1001C549
pop     ecx
loop    loc_1001C543

loc_1001C54E:
pop     ecx
popf
retn
sub_1001C538 endp




sub_1001C551 proc near
push    eax
push    ebx
push    ecx
push    edx
mov     dword_1001C58E, ebp
lea     ebp, unk_100145F0
mov     word_1001C58A, fs
cmp     byte ptr ds:[ebp+1550h], 1
jnz     short loc_1001C587
mov     eax, ebp
add     eax, 15A4h
push    eax             ; lpCriticalSection
call    EnterCriticalSection
mov     byte ptr ds:[ebp+1552h], 1

loc_1001C587:
clc
jmp     short loc_1001C592
word_1001C58A dw 1234h
db  45h ; E
db  23h ; #
dword_1001C58E dd 34567890h

loc_1001C592:
pop     edx
pop     ecx
pop     ebx
pop     eax
retn
sub_1001C551 endp




sub_1001C597 proc near
push    eax
pushf
lea     ebp, unk_100145F0
cmp     byte ptr ds:[ebp+1552h], 1
jnz     short loc_1001C5C0
mov     eax, ebp
add     eax, 15A4h
pusha
push    eax             ; lpCriticalSection
call    LeaveCriticalSection
popa
mov     byte ptr ds:[ebp+1552h], 0

loc_1001C5C0:
mov     ebp, cs:dword_1001C58E
popf
pop     eax
cld
retn
sub_1001C597 endp

unk_1001C5CB db  2Eh ; .
db  8Bh
db  2Dh ; -
dd offset dword_1001C58E
db 0C3h



sub_1001C5D3 proc near
pusha
mov     ds:[ebp+4], eax
cmp     byte ptr ds:[ebp+1550h], 1
jz      loc_1001C6A6
mov     eax, ebp
add     eax, 15A4h
push    eax
call    dword ptr ds:[ebp+0A8h]
call    sub_1001CA05
call    sub_1001CA5D
mov     dword ptr ds:[ebp+1588h], 1
call    dword ptr ds:[ebp+94h]
test    eax, 80000000h
jz      short loc_1001C66A
test    eax, 40000000h
jz      short loc_1001C62A
mov     dword ptr ds:[ebp+1584h], 1

loc_1001C62A:
call    sub_1001CAB5
jnb     short loc_1001C64B
cmp     dword ptr ds:[ebp+4], 8000h
jz      short loc_1001C64B
cmp     dword ptr ds:[ebp+4], 1000h
jz      short loc_1001C64B
stc
jmp     loc_1001C6DD

loc_1001C64B:
mov     byte ptr ds:[ebp+1551h], 1
cmp     byte ptr ds:[ebp+3A0h], 1
jz      short loc_1001C668
mov     dword ptr ds:[ebp+38Ch], 4

loc_1001C668:
jmp     short loc_1001C6A6

loc_1001C66A:
cmp     dword ptr ds:[ebp+4], 8000h
jz      short loc_1001C6A6
cmp     dword ptr ds:[ebp+4], 1000h
jz      short loc_1001C6A6
call    sub_1001C958
jb      short loc_1001C6DD
push    dword ptr ds:[ebp+1554h]
call    dword ptr ds:[ebp+0A0h]
mov     dword ptr ds:[ebp+38Ch], 1
mov     byte ptr ds:[ebp+1550h], 1

loc_1001C6A6:
mov     eax, ebp
add     eax, 15A4h
push    eax
call    dword ptr ds:[ebp+0ACh]
mov     byte ptr ds:[ebp+1552h], 1
cmp     dword ptr ds:[ebp+1584h], 1
jz      short loc_1001C6DC
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_1001C6DC
mov     dword ptr ds:[ebp+1588h], 0

loc_1001C6DC:
clc

loc_1001C6DD:
popa
retn
sub_1001C5D3 endp




sub_1001C6DF proc near
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_1001C6EC
out     dx, al
jmp     short locret_1001C717

loc_1001C6EC:
push    edx
push    ebx
mov     ebx, ds:[ebp+390h]
sub     edx, ds:[ebp+ebx+34Ch]
and     edx, 3
mov     dh, dl
mov     dl, al
shl     edx, 2
add     edx, 80991000h
call    sub_1001C9AC
pop     ebx
pop     edx

locret_1001C717:
retn
sub_1001C6DF endp




sub_1001C718 proc near
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_1001C725
in      al, dx
jmp     short locret_1001C760

loc_1001C725:
push    edx
push    ebx
mov     ebx, ds:[ebp+390h]
sub     edx, ds:[ebp+ebx+34Ch]
and     edx, 3
xchg    dh, dl
shl     edx, 2
add     edx, 80992000h
mov     dword ptr ds:[ebp+156Ch], 0FFFFFFFFh
call    sub_1001C9AC
pop     ebx
pop     edx
mov     al, ds:[ebp+156Ch]

locret_1001C760:
retn
sub_1001C718 endp




sub_1001C761 proc near
pusha
mov     edx, 80992004h
call    sub_1001C9AC
popa
retn
sub_1001C761 endp




sub_1001C76E proc near
pusha
mov     edx, 80992008h
call    sub_1001C9AC
popa
retn
sub_1001C76E endp




sub_1001C77B proc near
pusha
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_1001C7A1
cmp     byte ptr ds:[ebp+3A0h], 1
jnz     loc_1001C86B
xor     al, al
mov     edx, 9964h
out     dx, al
jmp     loc_1001C86B

loc_1001C7A1:
call    sub_1001C958
jb      loc_1001C86C
call    dword ptr ds:[ebp+0B4h]
mov     ds:[ebp+1558h], eax
call    dword ptr ds:[ebp+0B8h]
mov     ds:[ebp+155Ch], eax
push    dword ptr ds:[ebp+155Ch]
call    dword ptr ds:[ebp+0C4h]
mov     ds:[ebp+1564h], eax
push    dword ptr ds:[ebp+1558h]
call    dword ptr ds:[ebp+0BCh]
mov     ds:[ebp+1560h], eax
or      eax, eax
jz      short loc_1001C80B
cmp     eax, 40h ; '@'
jnz     short loc_1001C80B
push    20h ; ' '
push    dword ptr ds:[ebp+1558h]
call    dword ptr ds:[ebp+0C0h]

loc_1001C80B:
push    dword ptr ds:[ebp+155Ch]
call    dword ptr ds:[ebp+0C4h]
mov     ds:[ebp+1568h], eax
cmp     eax, 7FFFFFFFh
jz      short loc_1001C83C
cmp     eax, 1
jge     short loc_1001C83C
push    1
push    dword ptr ds:[ebp+155Ch]
call    dword ptr ds:[ebp+0C8h]

loc_1001C83C:
call    sub_1001C761
cmp     dword ptr ds:[ebp+1568h], 7FFFFFFFh
jz      short loc_1001C863
cmp     eax, 2
jz      short loc_1001C863
push    2
push    dword ptr ds:[ebp+155Ch]
call    dword ptr ds:[ebp+0C8h]

loc_1001C863:
mov     byte ptr ds:[ebp+1553h], 1

loc_1001C86B:
clc

loc_1001C86C:
popa
retn
sub_1001C77B endp




sub_1001C86E proc near
pusha
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_1001C88D
cmp     byte ptr ds:[ebp+3A0h], 1
jnz     short loc_1001C8F2
mov     al, 1
mov     edx, 9964h
out     dx, al
jmp     short loc_1001C8F2

loc_1001C88D:
call    sub_1001C76E
cmp     dword ptr ds:[ebp+1560h], 0
jz      short loc_1001C8B1
push    dword ptr ds:[ebp+1560h]
push    dword ptr ds:[ebp+1558h]
call    dword ptr ds:[ebp+0C0h]

loc_1001C8B1:
cmp     dword ptr ds:[ebp+1564h], 7FFFFFFFh
jz      short loc_1001C8D3
push    dword ptr ds:[ebp+1564h]
push    dword ptr ds:[ebp+155Ch]
call    dword ptr ds:[ebp+0C8h]

loc_1001C8D3:
push    dword ptr ds:[ebp+1554h]
call    dword ptr ds:[ebp+0A0h]
mov     byte ptr ds:[ebp+1553h], 0
push    0
call    dword ptr ds:[ebp+0D4h]

loc_1001C8F2:
popa
retn
sub_1001C86E endp

unk_1001C8F4 db  60h ; `
db  3Eh ; >
db  83h
db 0BDh
db 0D0h
db    0
db    0
db    0
db    0
db  75h ; u
db    4
db  33h ; 3
db 0C0h
db 0EBh
db  11h
db  8Bh
db 0DCh
db  36h ; 6
db 0FFh
db  73h ; s
db  28h ; (
db  36h ; 6
db 0FFh
db  73h ; s
db  24h ; $
db  3Eh ; >
db 0FFh
db  95h
db 0D0h
db    0
db    0
db    0
db  0Bh
db 0C0h
db  75h ; u
db    3
db 0F8h
db 0EBh
db    1
db 0F9h
db  8Bh
db 0FCh
db  36h ; 6
db  89h
db  47h ; G
db  1Ch
db  61h ; a
db 0C2h
db    8
db    0
unk_1001C926 db  60h ; `
db  3Eh ; >
db  83h
db 0BDh
db 0CCh
db    0
db    0
db    0
db    0
db  75h ; u
db    4
db  33h ; 3
db 0C0h
db 0EBh
db  11h
db  8Bh
db 0DCh
db  36h ; 6
db 0FFh
db  73h ; s
db  28h ; (
db  36h ; 6
db 0FFh
db  73h ; s
db  24h ; $
db  3Eh ; >
db 0FFh
db  95h
db 0CCh
db    0
db    0
db    0
db  0Bh
db 0C0h
db  75h ; u
db    3
db 0F8h
db 0EBh
db    1
db 0F9h
db  8Bh
db 0FCh
db  36h ; 6
db  89h
db  47h ; G
db  1Ch
db  61h ; a
db 0C2h
db    8
db    0



sub_1001C958 proc near
pusha
mov     ecx, 4

loc_1001C95E:
xor     eax, eax
push    ecx
push    eax
push    40000000h
push    3
push    eax
push    3
push    0C0000000h
call    near ptr loc_1001C981+1
pop     esp
pop     esp
db      2Eh
pop     esp
push    ebx
push    ebx
dec     ecx
push    eax
inc     esp
inc     esp
push    eax

loc_1001C981:
add     [esi], bh
sub_1001C958 endp ; sp-analysis failed

call    dword ptr [ebp+98h]
pop     ecx
cmp     eax, 0FFFFFFFFh
jnz     short loc_1001C9A2
push    ecx
push    0FAh
call    dword ptr ds:[ebp+0D4h]
pop     ecx
loop    loc_1001C95E
stc
jmp     short loc_1001C9AA

loc_1001C9A2:
mov     ds:[ebp+1554h], eax
clc

loc_1001C9AA:
popa
retn



sub_1001C9AC proc near
pusha
xor     ecx, ecx
push    ecx
mov     ebx, ebp
add     ebx, 1570h
push    ebx
push    4
mov     ebx, ebp
add     ebx, 156Ch
push    ebx
push    ecx
push    ecx
push    edx
push    dword ptr ds:[ebp+1554h]
call    dword ptr ds:[ebp+9Ch]
popa
retn
sub_1001C9AC endp




sub_1001C9D7 proc near
push    eax
push    edx
mov     eax, ebp
add     eax, 15E8h
push    eax             ; lpModuleName
call    GetModuleHandleA
or      eax, eax
stc
jz      short loc_1001CA02
mov     edx, ebp
add     edx, 1604h
push    edx             ; lpProcName
push    eax             ; hModule
call    GetProcAddress
or      eax, eax
jz      short loc_1001CA02
call    eax
or      eax, eax

loc_1001CA02:
pop     edx
pop     eax
retn
sub_1001C9D7 endp




sub_1001CA05 proc near
pusha
mov     edi, ebp
add     edi, 0BCh
mov     esi, ebp
add     esi, 1488h
push    esi             ; lpModuleName
call    GetModuleHandleA
or      eax, eax
jz      short loc_1001CA4F
mov     ds:[ebp+1614h], eax
call    sub_10017D01

loc_1001CA2C:
cmp     byte ptr [esi], 0
jz      short loc_1001CA4A
push    esi
push    dword ptr ds:[ebp+1614h]
call    dword ptr ds:[ebp+0E8h]
or      eax, eax
stosd
call    sub_10017D01
jmp     short loc_1001CA2C

loc_1001CA4A:
xor     eax, eax
clc
jmp     short loc_1001CA55

loc_1001CA4F:
mov     eax, 0FFFFFFFFh
stc

loc_1001CA55:
mov     edi, esp
mov     ss:[edi+1Ch], eax
popa
retn
sub_1001CA05 endp




sub_1001CA5D proc near
pusha
mov     edi, ebp
add     edi, 160h
mov     esi, ebp
add     esi, 14F8h
push    esi             ; lpModuleName
call    GetModuleHandleA
or      eax, eax
jz      short loc_1001CAA7
mov     ds:[ebp+1614h], eax
call    sub_10017D01

loc_1001CA84:
cmp     byte ptr [esi], 0
jz      short loc_1001CAA2
push    esi
push    dword ptr ds:[ebp+1614h]
call    dword ptr ds:[ebp+0E8h]
or      eax, eax
stosd
call    sub_10017D01
jmp     short loc_1001CA84

loc_1001CAA2:
xor     eax, eax
clc
jmp     short loc_1001CAAD

loc_1001CAA7:
mov     eax, 0FFFFFFFFh
stc

loc_1001CAAD:
mov     edi, esp
mov     ss:[edi+1Ch], eax
popa
retn
sub_1001CA5D endp




sub_1001CAB5 proc near
call    sub_1001C9D7
jnz     short loc_1001CB1C
mov     edx, 9966h
sub     eax, eax
in      ax, dx
cmp     ax, 9966h
jnz     short loc_1001CB19
in      al, dx
cmp     al, 55h ; 'U'
jnz     short loc_1001CB19
inc     edx
in      al, dx
cmp     al, 88h
jnz     short loc_1001CB19
mov     edx, 9964h
sub     eax, eax
in      ax, dx
and     eax, 0FFFFh
mov     edx, eax
cmp     ax, 1000h
jb      short loc_1001CB19
and     al, 3
jz      short loc_1001CAF2
jmp     short loc_1001CB19

loc_1001CAF2:
mov     ds:[ebp+34Ch], edx
mov     dword ptr ds:[ebp+390h], 0
mov     dword ptr ds:[ebp+38Ch], 1
mov     byte ptr ds:[ebp+3A0h], 1
jmp     short loc_1001CB1C

loc_1001CB19:
stc
jmp     short locret_1001CB1D

loc_1001CB1C:
clc

locret_1001CB1D:
retn
sub_1001CAB5 endp




sub_1001CB1E proc near
pusha
cmp     byte ptr ds:[ebp+1551h], 1
jz      short loc_1001CB6F
call    sub_1001C958
jb      short loc_1001CB90
xor     ecx, ecx
push    ecx
lea     ebx, [ebp+1570h]
push    ebx
push    4
lea     ebx, [ebp+156Ch]
push    ebx
lea     ecx, [ebp+3CEh]
push    ecx
push    0Ch
push    80992014h
push    dword ptr ds:[ebp+1554h]
call    dword ptr ds:[ebp+9Ch]
push    dword ptr ds:[ebp+1554h]
call    dword ptr ds:[ebp+0A0h]
jmp     short loc_1001CB90

loc_1001CB6F:
mov     edx, 9966h
mov     esi, ds:[ebp+3D6h]
mov     edi, ds:[ebp+3D2h]
mov     ebp, ds:[ebp+3CEh]
mov     eax, 8
out     dx, ax

loc_1001CB90:
popa
retn
sub_1001CB1E endp




sub_1001CB92 proc near
pushf
pusha
push    1
call    dword ptr ds:[ebp+0D4h]
popa
popf
retn
sub_1001CB92 endp

db  60h ; `
db  3Eh ; >
db 0C7h
db  85h
db  58h ; X
db  19h
db    0
db    0
db    0
db    0
db    0
db    0
db 0B9h
db  14h
db    0
db    0
db    0
db  8Dh
db 0BDh
db  70h ; p
db  19h
db    0
db    0
db  33h ; 3
db 0C0h
db 0F3h
db 0AAh
db 0B9h
db  14h
db    0
db    0
db    0
db  8Dh
db 0BDh
db  84h
db  19h
db    0
db    0
db  33h ; 3
db 0C0h
db 0F3h
db 0AAh
db  33h ; 3
db 0C0h
db  50h ; P
db  50h ; P
db  50h ; P
db  50h ; P
db  3Eh ; >
db 0FFh
db  95h
db  80h
db    1
db    0
db    0
db  3Eh ; >
db  89h
db  85h
db  1Ch
db  16h
db    0
db    0
db  0Bh
db 0C0h
db  75h ; u
db  0Ah
db 0B8h
db    1
db    0
db    0
db    0
db 0E9h
db 0A2h
db    0
db    0
db    0
db  3Eh ; >
db  8Bh
db  85h
db  1Ch
db  16h
db    0
db    0
db  3Eh ; >
db  89h
db  85h
db  80h
db  19h
db    0
db    0
db  33h ; 3
db 0C0h
db  50h ; P
db  50h ; P
db  50h ; P
db  50h ; P
db  3Eh ; >
db 0FFh
db  95h
db  80h
db    1
db    0
db    0
db  3Eh ; >
db  89h
db  85h
db  20h
db  16h
db    0
db    0
db  0Bh
db 0C0h
db  75h ; u
db  16h
db  3Eh ; >
db  8Bh
db  85h
db  1Ch
db  16h
db    0
db    0
db  50h ; P
db  3Eh ; >
db 0FFh
db  95h
db 0A0h
db    0
db    0
db    0
db 0B8h
db    1
db    0
db    0
db    0
db 0EBh
db  66h ; f
db  3Eh ; >
db  8Bh
db  85h
db  20h
db  16h
db    0
db    0
db  3Eh ; >
db  89h
db  85h
db  94h
db  19h
db    0
db    0
db  6Ah ; j
db    0
db  68h ; h
db    0
db    0
db    0
db  40h ; @
db  6Ah ; j
db    3
db  6Ah ; j
db    0
db  6Ah ; j
db    3
db  68h ; h
db    0
db    0
db    0
db 0C0h
db  8Dh
db  85h
db  98h
db  19h
db    0
db    0
db  50h ; P
db  3Eh ; >
db 0FFh
db  95h
db  98h
db    0
db    0
db    0
db  3Eh ; >
db  89h
db  85h
db  24h ; $
db  16h
db    0
db    0
db  83h
db 0F8h
db 0FFh
db  74h ; t
db    4
db  33h ; 3
db 0C0h
db 0EBh
db  28h ; (
db  68h ; h
db 0FAh
db    0
db    0
db    0
db  3Eh ; >
db 0FFh
db  95h
db 0D4h
db    0
db    0
db    0
db  3Eh ; >
db  83h
db  85h
db  58h ; X
db  19h
db    0
db    0
db  40h ; @
db  3Eh ; >
db  81h
db 0BDh
db  58h ; X
db  19h
db    0
db    0
db    0
db    1
db    0
db    0
db  75h ; u
db 0AFh
db 0B8h
db    2
db    0
db    0
db    0
db 0EBh
db    0
db  8Bh
db 0FCh
db  36h ; 6
db  89h
db  47h ; G
db  1Ch
db  61h ; a
db 0C3h



sub_1001CC96 proc near
push    ebx
push    esi
push    edi
push    ecx
push    edx
lea     eax, [ebp+1970h]
push    eax
lea     eax, [ebp+1954h]
push    eax
mov     eax, ds:[ebp+1948h]
push    eax
lea     eax, [ebp+1628h]
push    eax
mov     eax, ds:[ebp+1624h]
push    eax
call    dword ptr ds:[ebp+17Ch]
or      eax, eax
jnz     short loc_1001CD3D
call    dword ptr ds:[ebp+174h]
cmp     eax, 6Dh ; 'm'
jnz     short loc_1001CCE1

loc_1001CCD7:
mov     eax, 2
jmp     loc_1001CE01

loc_1001CCE1:
cmp     eax, 3E5h
jnz     short loc_1001CCD7
mov     eax, 0FFFFFFFFh
push    eax
mov     eax, ds:[ebp+161Ch]
push    eax
call    dword ptr ds:[ebp+184h]
cmp     eax, 102h
jz      short loc_1001CCD7
push    0
lea     eax, [ebp+1954h]
push    eax
lea     eax, [ebp+1970h]
push    eax
mov     eax, ds:[ebp+1624h]
push    eax
call    dword ptr ds:[ebp+188h]
mov     eax, ds:[ebp+1954h]
cmp     eax, ds:[ebp+1948h]
jge     short loc_1001CD3D
mov     eax, 1
jmp     loc_1001CE01

loc_1001CD3D:
mov     ecx, ds:[ebp+194Ch]
lea     edi, [ebp+17B8h]
xor     eax, eax
rep stosb
mov     dword ptr ds:[ebp+1950h], 0
lea     eax, [ebp+1984h]
push    eax
lea     eax, [ebp+1950h]
push    eax
mov     eax, ds:[ebp+194Ch]
push    eax
lea     eax, [ebp+17B8h]
push    eax
mov     eax, ds:[ebp+1624h]
push    eax
call    dword ptr ds:[ebp+178h]
or      eax, eax
jnz     short loc_1001CDE6
call    dword ptr ds:[ebp+174h]
cmp     eax, 6Dh ; 'm'
jnz     short loc_1001CD9A
jmp     loc_1001CCD7

loc_1001CD9A:
cmp     eax, 3E5h
jz      short loc_1001CDA6
jmp     loc_1001CCD7

loc_1001CDA6:
mov     eax, 0FFFFFFFFh
push    eax
mov     eax, ds:[ebp+1620h]
push    eax
call    dword ptr ds:[ebp+184h]
cmp     eax, 102h
jnz     short loc_1001CDC7
jmp     loc_1001CCD7

loc_1001CDC7:
push    0
lea     eax, [ebp+1950h]
push    eax
lea     eax, [ebp+1984h]
push    eax
mov     eax, ds:[ebp+1624h]
push    eax
call    dword ptr ds:[ebp+188h]

loc_1001CDE6:
mov     eax, ds:[ebp+1950h]
cmp     eax, ds:[ebp+194Ch]
jge     short loc_1001CDFD
mov     eax, 1
jmp     short loc_1001CE01

loc_1001CDFD:
xor     eax, eax
jmp     short $+2

loc_1001CE01:
pop     edx
pop     ecx
pop     edi
pop     esi
pop     ebx
retn
sub_1001CC96 endp




sub_1001CE07 proc near
pusha
cmp     dword ptr ds:[ebp+3B6h], 1
jz      loc_1001CF4C
mov     edi, ds:[ebp+7DCh]
mov     esi, edi
mov     ax, ds:[ebp+1C7h]
stosw
mov     al, ds:[ebp+1C3h]
stosb
mov     ebx, ds:[ebp+3C2h]
movzx   ecx, word ptr ds:[ebp+1C7h]
shl     ecx, 8
mov     cl, ds:[ebp+1C3h]
mov     edx, ds:[ebp+34Ch]
add     edx, 0Fh
mov     edi, ds
mov     eax, 3
out     dx, al
or      eax, eax
jnz     loc_1001CF4F
mov     esi, ds:[ebp+7DCh]
add     esi, 4
lodsw
mov     ds:[ebp+7E6h], ax
cmp     byte ptr [esi-3], 1
jnz     short loc_1001CEC5
mov     edi, ebp
add     edi, 744h
mov     ecx, 10h
rep movsb
mov     edi, ebp
add     edi, 734h
mov     ecx, 10h
rep movsb
lodsb
mov     ds:[ebp+733h], al
lodsb
movzx   eax, al
mov     ds:[ebp+3BEh], eax
mov     al, [esi]
mov     ds:[ebp+770h], al
mov     dword ptr ds:[ebp+3C6h], 0
jmp     short loc_1001CF2B

loc_1001CEC5:
mov     edi, ebp
add     edi, 7BEh
cmp     dword ptr ds:[ebp+1588h], 1
jz      short loc_1001CEF5
mov     ecx, 0Ch
rep movsb
add     esi, 4
mov     edi, ebp
add     edi, 7AEh
mov     ecx, 0Ah
rep movsb
add     esi, 7
jmp     short loc_1001CF0C

loc_1001CEF5:
mov     ecx, 10h
rep movsb
mov     edi, ebp
add     edi, 7AEh
mov     ecx, 10h
rep movsb
inc     esi

loc_1001CF0C:
xor     eax, eax
lodsb
mov     ds:[ebp+3BEh], eax
inc     esi
mov     eax, [esi]
mov     ds:[ebp+7E0h], eax
mov     dword ptr ds:[ebp+3C6h], 1

loc_1001CF2B:
mov     dword ptr ds:[ebp+388h], 1
mov     dword ptr ds:[ebp+6F4h], 1
mov     dword ptr ds:[ebp+3B6h], 1

loc_1001CF4C:
clc
jmp     short loc_1001CF5B

loc_1001CF4F:
mov     dword ptr ds:[ebp+388h], 0
stc

loc_1001CF5B:
popa
retn
sub_1001CE07 endp




sub_1001CF5D proc near
pusha
cmp     dword ptr ds:[ebp+3B2h], 1
jnz     short loc_1001CFDB
cmp     dword ptr ds:[ebp+3B6h], 1
jz      short loc_1001CFDB
mov     edi, ds:[ebp+7DCh]
cmp     word ptr ds:[ebp+730h], 0
jz      short loc_1001CF8B
call    sub_10017D9A
jmp     short loc_1001CF90

loc_1001CF8B:
call    sub_10017D3A

loc_1001CF90:
mov     esi, ds:[ebp+7DCh]
mov     ebx, ds:[ebp+3C2h]
movzx   ecx, word ptr ds:[ebp+1C7h]
shl     ecx, 8
mov     cl, ds:[ebp+1C3h]
mov     edx, ds:[ebp+34Ch]
add     edx, 0Fh
mov     edi, ds
xor     eax, eax
out     dx, al
or      eax, eax
jnz     short loc_1001CFD0
mov     dword ptr ds:[ebp+3BAh], 1
jmp     short loc_1001CFDB

loc_1001CFD0:
mov     dword ptr ds:[ebp+3BAh], 0

loc_1001CFDB:
popa
retn
sub_1001CF5D endp




sub_1001CFDD proc near
pusha
cmp     dword ptr ds:[ebp+3BAh], 1
jz      short loc_1001D027
cmp     dword ptr ds:[ebp+3B6h], 1
jnz     short loc_1001D05B
cmp     dword ptr ds:[ebp+3BEh], 1
jnz     short loc_1001D05B
mov     ebx, ds:[ebp+3C2h]
movzx   ecx, word ptr ds:[ebp+1C7h]
shl     ecx, 8
mov     cl, ds:[ebp+1C3h]
mov     edx, ds:[ebp+34Ch]
add     edx, 0Fh
mov     eax, 6
out     dx, al
jmp     short loc_1001D05B

loc_1001D027:
mov     ebx, ds:[ebp+3C2h]
movzx   ecx, word ptr ds:[ebp+1C7h]
shl     ecx, 8
mov     cl, ds:[ebp+1C3h]
mov     edx, ds:[ebp+34Ch]
add     edx, 0Fh
mov     eax, 1
out     dx, al
mov     dword ptr ds:[ebp+3BAh], 0

loc_1001D05B:
popa
retn
sub_1001CFDD endp

db  50h ; P
db  53h ; S
db  51h ; Q
db  52h ; R
db 0B8h
db    2
db    0
db    0
db    0
db  3Eh ; >
db  8Bh
db  95h
db  4Ch ; L
db    3
db    0
db    0
db  83h
db 0C2h
db  0Fh
db 0EEh
db  0Bh
db 0C0h
db  75h ; u
db  0Bh
db  3Eh ; >
db 0C7h
db  85h
db 0B2h
db    3
db    0
db    0
db    1
db    0
db    0
db    0
db  5Ah ; Z
db  59h ; Y
db  5Bh ; [
db  58h ; X
db 0C3h



sub_1001D085 proc near
pusha
cmp     dword ptr ds:[ebp+3B6h], 1
jz      loc_1001D1AD
lea     edi, [ebp+1628h]
mov     dword ptr [edi], 30003h
mov     eax, ds:[ebp+3C2h]
mov     [edi+4], eax
movzx   ecx, word ptr ds:[ebp+1C7h]
shl     ecx, 8
mov     cl, ds:[ebp+1C3h]
mov     [edi+8], ecx
mov     dword ptr ds:[ebp+1948h], 0Ch
mov     dword ptr ds:[ebp+194Ch], 2Eh ; '.'
call    sub_1001CC96
or      eax, eax
jnz     loc_1001D1B0
lea     esi, [ebp+17B8h]
cmp     dword ptr [esi], 3330h
jnz     loc_1001D1B0
add     esi, 5
lodsw
mov     ds:[ebp+7E6h], ax
cmp     byte ptr [esi-3], 1
jnz     short loc_1001D14E
mov     edi, ebp
add     edi, 744h
mov     ecx, 10h
rep movsb
mov     edi, ebp
add     edi, 734h
mov     ecx, 10h
rep movsb
lodsb
mov     ds:[ebp+733h], al
lodsb
movzx   eax, al
mov     ds:[ebp+3BEh], eax
mov     al, [esi]
mov     ds:[ebp+770h], al
mov     dword ptr ds:[ebp+3C6h], 0
jmp     short loc_1001D18C

loc_1001D14E:
mov     edi, ebp
add     edi, 7BEh
mov     ecx, 10h
rep movsb
mov     edi, ebp
add     edi, 7AEh
mov     ecx, 10h
rep movsb
inc     esi
xor     eax, eax
lodsb
mov     ds:[ebp+3BEh], eax
inc     esi
mov     eax, [esi]
mov     ds:[ebp+7E0h], eax
mov     dword ptr ds:[ebp+3C6h], 1

loc_1001D18C:
mov     dword ptr ds:[ebp+388h], 1
mov     dword ptr ds:[ebp+6F4h], 1
mov     dword ptr ds:[ebp+3B6h], 1

loc_1001D1AD:
clc
jmp     short loc_1001D1BC

loc_1001D1B0:
mov     dword ptr ds:[ebp+388h], 0
stc

loc_1001D1BC:
popa
retn
sub_1001D085 endp




sub_1001D1BE proc near
pusha
cmp     dword ptr ds:[ebp+3B2h], 1
jnz     loc_1001D261
cmp     dword ptr ds:[ebp+3B6h], 1
jz      loc_1001D261
lea     edi, [ebp+1628h]
mov     dword ptr [edi], 10001h
add     edi, 4
mov     eax, ds:[ebp+3C2h]
stosd
movzx   eax, word ptr ds:[ebp+1C7h]
shl     eax, 8
mov     al, ds:[ebp+1C3h]
stosd
cmp     word ptr ds:[ebp+730h], 0
jz      short loc_1001D217
call    sub_10017D9A
jmp     short loc_1001D21C

loc_1001D217:
call    sub_10017D3A

loc_1001D21C:
mov     dword ptr ds:[ebp+194Ch], 4
mov     dword ptr ds:[ebp+1948h], 4Bh ; 'K'
call    sub_1001CC96
or      eax, eax
jnz     short loc_1001D256
lea     esi, [ebp+17B8h]
cmp     dword ptr [esi], 1110h
jnz     short loc_1001D256
mov     dword ptr ds:[ebp+3BAh], 1
jmp     short loc_1001D261

loc_1001D256:
mov     dword ptr ds:[ebp+3BAh], 0

loc_1001D261:
popa
retn
sub_1001D1BE endp




sub_1001D263 proc near
pusha
cmp     dword ptr ds:[ebp+3BAh], 1
jz      short loc_1001D2D2
cmp     dword ptr ds:[ebp+3B6h], 1
jnz     loc_1001D323
cmp     dword ptr ds:[ebp+3BEh], 1
jnz     loc_1001D323
lea     edi, [ebp+1628h]
mov     dword ptr [edi], 60006h
mov     eax, ds:[ebp+3C2h]
mov     [edi+4], eax
movzx   ecx, word ptr ds:[ebp+1C7h]
shl     ecx, 8
mov     cl, ds:[ebp+1C3h]
mov     [edi+8], ecx
mov     dword ptr ds:[ebp+194Ch], 4
mov     dword ptr ds:[ebp+1948h], 0Ch
call    sub_1001CC96
jmp     short loc_1001D323

loc_1001D2D2:
lea     edi, [ebp+1628h]
mov     dword ptr [edi], 20002h
mov     eax, ds:[ebp+3C2h]
mov     [edi+4], eax
movzx   ecx, word ptr ds:[ebp+1C7h]
shl     ecx, 8
mov     cl, ds:[ebp+1C3h]
mov     [edi+8], ecx
mov     dword ptr ds:[ebp+194Ch], 4
mov     dword ptr ds:[ebp+1948h], 0Ch
call    sub_1001CC96
mov     dword ptr ds:[ebp+3BAh], 0

loc_1001D323:
popa
retn
sub_1001D263 endp

db  50h ; P
db 0E8h
db  75h ; u
db 0F8h
db 0FFh
db 0FFh
db  0Bh
db 0C0h
db  75h ; u
db  44h ; D
db  8Dh
db  85h
db  28h ; (
db  16h
db    0
db    0
db 0C7h
db    0
db  66h ; f
db  99h
db    0
db    0
db  3Eh ; >
db 0C7h
db  85h
db  4Ch ; L
db  19h
db    0
db    0
db    4
db    0
db    0
db    0
db  3Eh ; >
db 0C7h
db  85h
db  48h ; H
db  19h
db    0
db    0
db    4
db    0
db    0
db    0
db 0E8h
db  40h ; @
db 0F9h
db 0FFh
db 0FFh
db  0Bh
db 0C0h
db  75h ; u
db  19h
db  8Dh
db  85h
db 0B8h
db  17h
db    0
db    0
db  81h
db  38h ; 8
db  55h ; U
db  88h
db    0
db    0
db  75h ; u
db  0Bh
db  3Eh ; >
db 0C7h
db  85h
db 0B2h
db    3
db    0
db    0
db    1
db    0
db    0
db    0
db  58h ; X
db 0C3h
db  90h
unk_1001D376 db  8Dh
db    2
db  36h ; 6
db  33h ; 3
db 0BDh
db 0B9h
db 0B5h
db  45h ; E
db  45h ; E
db  6Dh ; m
db  0Fh
db  89h
db 0EBh
db  27h ; '
db  5Bh ; [
db 0C2h
db 0C7h
db    8
db  36h ; 6
db  39h ; 9
db  8Dh
db 0B8h
db 0B5h
db  45h ; E
db  45h ; E
db  79h ; y
db 0A9h
db  5Fh ; _
db 0F8h
db  11h
db  74h ; t
db  38h ; 8
db  7Ah ; z
db  1Bh
db 0F9h
db  4Ch ; L
db 0F7h
db    3
db  32h ; 2
db  95h
db 0B2h
db 0A5h
db  96h
db  48h ; H
db 0F3h
db    4
db  68h ; h
db  38h ; 8
db 0D8h
db 0FEh
db 0C8h
db  5Bh ; [
db  39h ; 9
db  40h ; @
db  4Ch ; L
db 0BAh
db 0E7h
db  7Eh ; ~
db  98h
db  48h ; H
db  4Dh ; M
db  5Ch ; \
db  3Ah ; :
db  41h ; A
db  8Dh
db    2
db  3Bh ; ;
db  73h ; s
db  36h ; 6
db  39h ; 9
db 0B9h
db  4Ch ; L
db  49h ; I
db  69h ; i
db  69h ; i
db 0D1h
db  43h ; C
db 0D2h
db 0A0h
db  16h
db 0C7h
db  48h ; H
db    8
db 0B9h
db 0C8h
db 0C7h
db 0DBh
db 0E5h
db 0BDh
db 0E1h
db 0ECh
db 0BEh
db 0AFh
db  8Bh
db  8Bh
db  2Fh ; /
db 0C7h
db  9Eh
db    9
db  58h ; X
db  0Ah
db  81h
db  33h ; 3
db  4Ch ; L
db  46h ; F
db 0C8h
db  92h
db  45h ; E
db  48h ; H
db  74h ; t
db  5Bh ; [
db  58h ; X
db  39h ; 9
db  37h ; 7
db 0F7h
db 0B7h
db  88h
db  5Bh ; [
db  6Ch ; l
db 0A0h
db 0BAh
db  96h
db  81h
db 0F4h
db  38h ; 8
db  74h ; t
db  74h ; t
db 0A6h
db 0DFh
db  15h
db 0EBh
db  41h ; A
db 0F7h
db  4Ch ; L
db    2
db 0E5h
db 0E4h
db 0BEh
db 0A5h
db 0EDh
db  71h ; q
db  91h
db  2Bh ; +
db  65h ; e
db  0Dh
db  44h ; D
db  36h ; 6
db  38h ; 8
db  9Dh
db  5Bh ; [
db 0B7h
db  45h ; E
db  47h ; G
db 0A9h
db 0A9h
db  5Fh ; _
db 0F8h
db  1Dh
db  74h ; t
db  38h ; 8
db 0C0h
db 0D8h
db 0B5h
db  58h ; X
db  0Ah
db 0B3h
db 0B3h
db  45h ; E
db  91h
db  10h
db  57h ; W
db  3Dh ; =
db  98h
db 0EFh
db  8Fh
db 0C7h
db    7
db  0Fh
db  80h
db  36h ; 6
db    2
db 0B0h
db 0B3h
db  45h ; E
db 0BFh
db  41h ; A
db 0ECh
db  59h ; Y
db 0A7h
db  8Bh
db  8Bh
db 0BBh
db  76h ; v
db  18h
db    3
db 0B0h
db    8
db 0B3h
db  65h ; e
db  78h ; x
db 0BFh
db  41h ; A
db 0ECh
db  5Ch ; \
db 0A7h
db  8Bh
db  8Bh
db 0BBh
db  76h ; v
db  18h
db    2
db 0B0h
db    8
db 0B3h
db 0CEh
db  51h ; Q
db  52h ; R
db 0DFh
db  6Bh ; k
db 0B7h
db 0B6h
db  2Bh ; +
db 0CBh
db 0BBh
db  76h ; v
db  18h
db    3
db 0B0h
db    8
db 0B3h
db  63h ; c
db  6Eh ; n
db 0BAh
db  96h
db  96h
db 0EDh
db  7Dh ; }
db  49h ; I
db  0Dh
db  66h ; f
db  4Dh ; M
db  5Bh ; [
db  36h ; 6
db  33h ; 3
db 0B5h
db  58h ; X
db 0B7h
db  45h ; E
db  45h ; E
db  6Dh ; m
db  1Ch
db 0BBh
db  43h ; C
db  8Ah
db 0F1h
db 0D2h
db 0C7h
db  68h ; h
db    8
db 0B3h
db  7Dh ; }
db  8Fh
db  65h ; e
db  64h ; d
db 0BFh
db  41h ; A
db 0ECh
db  5Bh ; [
db 0A7h
db  8Bh
db  8Bh
db 0BBh
db  60h ; `
db  58h ; X
db    2
db 0B0h
db    8
db 0B3h
db  5Bh ; [
db  11h
db 0BFh
db  69h ; i
db 0DCh
db 0BDh
db 0AFh
db  8Bh
db  8Bh
db 0C5h
db  0Bh
db 0CFh
db  83h
db  26h ; &
db 0E0h
db 0B1h
db 0B3h
db  45h ; E
db 0BFh
db  41h ; A
db 0ECh
db 0BCh
db 0AFh
db  8Bh
db  8Bh
db 0CFh
db 0DFh
db  15h
db  3Bh ; ;
db  41h ; A
db 0F7h
db  4Ch ; L
db  62h ; b
db  4Ah ; J
db  86h
db  96h
db  96h
db    7
db 0B0h
db 0CDh
db 0C4h
db  23h ; #
db  38h ; 8
db 0F7h
db  95h
db 0E9h
db  50h ; P
db  70h ; p
db 0CEh
db 0C9h
db  51h ; Q
db  57h ; W
db  6Ah ; j
db 0B7h
db 0B7h
db  8Bh
db 0F9h
db  0Eh
db 0C7h
db    8
db    8
db  5Bh ; [
db 0A0h
db  4Dh ; M
db  4Ch ; L
db 0BAh
db 0DDh
db  90h
db 0E2h
db  22h ; "
db 0F7h
db  9Ch
db  8Bh
db 0C7h
db 0D1h
db    0
db 0E0h
db 0B1h
db 0FAh
db  4Ch ; L
db  4Ch ; L
db  94h
db  1Eh
db 0A8h
db  96h
db  48h ; H
db  31h ; 1
db  8Eh
db  5Ah ; Z
db  2Ah ; *
db  39h ; 9
db  37h ; 7
db 0F7h
db  5Bh ; [
db  80h
db  4Dh ; M
db  4Ch ; L
db 0BAh
db  4Ch ; L
db  4Ch ; L
db  1Dh
db  90h
db 0F6h
db  84h
db  6Eh ; n
db  38h ; 8
db  58h ; X
db 0ECh
db  48h ; H
db 0B9h
db 0C8h
db 0C6h
db  56h ; V
db  36h ; 6
db    5
db 0F5h
db  69h ; i
db 0B7h
db 0F6h
db    4
db  6Ah ; j
db  38h ; 8
db 0F8h
db 0E1h
db  7Ch ; |
db 0BCh
db 0E0h
db 0BAh
db  56h ; V
db 0BAh
db 0B9h
db 0FAh
db  29h ; )
db  8Bh
db 0B4h
db  21h ; !
db  51h ; Q
db 0A0h
db 0BFh
db  15h
db  0Ch
db  80h
db 0C8h
db    3
db 0B0h
db  95h
db  16h
db  90h
db  96h
db  48h ; H
db 0ADh
db    5
db  2Ah ; *
db  17h
db  0Eh
db  97h
db 0F7h
db  4Ch ; L
db  36h ; 6
db  75h ; u
db 0B9h
db  4Ch ; L
db  49h ; I
db  69h ; i
db  69h ; i
db 0B3h
db  41h ; A
db 0BAh
db  81h
db 0D4h
db 0C7h
db  68h ; h
db    8
db 0B7h
db 0E0h
db 0C4h
db  4Eh ; N
db 0BAh
db 0B9h
db  92h
db 0E3h
db  32h ; 2
db 0F7h
db  91h
db  8Bh
db 0C7h
db 0C0h
db 0D9h
db  8Dh
db 0B7h
db  0Bh
db 0B3h
db 0B3h
db  39h ; 9
db  6Fh ; o
db  7Fh ; 
db  20h
db 0B4h
db 0B7h
db  8Bh
db 0F6h
db 0D7h
db 0F7h
db 0A9h
db  0Bh
db 0B3h
db    8
db  5Bh ; [
db  1Eh
db 0B9h
db 0BAh
db  96h
db  81h
db 0A6h
db  40h ; @
db  74h ; t
db  75h ; u
db  76h ; v
db 0ACh
db  30h ; 0
db  58h ; X
db 0E2h
db 0E0h
db 0B4h
db  4Eh ; N
db 0BAh
db 0B9h
db  92h
db 0AFh
db  32h ; 2
db  97h
db  93h
db  8Bh
db 0C7h
db    7
db  8Fh
db 0CEh
db  36h ; 6
db    1
db 0B0h
db 0B3h
db  45h ; E
db  56h ; V
db 0C9h
db  5Bh ; [
db  49h ; I
db  48h ; H
db  74h ; t
db 0F6h
db 0D3h
db 0D7h
db 0A1h
db  0Bh
db 0B3h
db    8
db  8Dh
db 0A2h
db  4Eh ; N
db  55h ; U
db  65h ; e
db  69h ; i
db 0B7h
db  41h ; A
db 0BAh
db  81h
db 0D4h
db 0C7h
db  68h ; h
db    8
db 0B3h
db 0E0h
db 0A4h
db  4Eh ; N
db 0BAh
db 0BAh
db 0CAh
db 0BBh
db  4Ah ; J
db  48h ; H
db  74h ; t
db  39h ; 9
db  77h ; w
db  1Fh
db  64h ; d
db  36h ; 6
db  38h ; 8
db  8Dh
db 0A3h
db 0B5h
db  45h ; E
db  45h ; E
db  91h
db 0E1h
db  32h ; 2
db 0D7h
db  93h
db  8Bh
db 0C7h
db  0Bh
db 0CFh
db  83h
db  36h ; 6
db  1Ah
db 0B0h
db 0B3h
db  45h ; E
db 0DDh
db  90h
db 0E0h
db  32h ; 2
db 0B7h
db  93h
db  8Bh
db 0C7h
db 0BAh
db  1Dh
db 0F5h
db  4Ch ; L
db 0F7h
db  8Dh
db  3Eh ; >
db  4Eh ; N
db  55h ; U
db  65h ; e
db  69h ; i
db 0B7h
db  96h
db  7Bh ; {
db    6
db 0CCh
db 0A6h
db  28h ; (
db    8
db 0B3h
db  0Dh
db  5Bh ; [
db  1Eh
db 0BEh
db 0BAh
db  96h
db  57h ; W
db  3Dh ; =
db  9Dh
db 0CFh
db  8Dh
db 0C7h
db    7
db  0Fh
db  80h
db  36h ; 6
db  0Ch
db 0B0h
db 0B3h
db  45h ; E
db 0BFh
db  41h ; A
db 0ECh
db 0BBh
db 0AFh
db  8Bh
db  8Bh
db 0BBh
db  76h ; v
db  18h
db    1
db 0B0h
db    8
db 0B3h
db  62h ; b
db  2Eh ; .
db 0B2h
db  96h
db  96h
db 0D1h
db  43h ; C
db 0D2h
db  81h
db 0C6h
db 0C7h
db  68h ; h
db    8
db  8Dh
db 0CEh
db  36h ; 6
db 0BBh
db  43h ; C
db  45h ; E
db  69h ; i
db 0E9h
db  89h
db 0F2h
db 0A7h
db  99h
db 0C1h
db 0C7h
db    8
db 0E0h
db  2Ah ; *
db 0F5h
db  4Ch ; L
db  4Dh ; M
db  38h ; 8
db  67h ; g
db  7Fh ; 
db  60h ; `
db 0B4h
db 0B7h
db  8Bh
db  5Ah ; Z
db 0DCh
db  38h ; 8
db 0B7h
db 0F7h
db  5Bh ; [
db  86h
db  4Dh ; M
db  4Ch ; L
db 0BAh
db  48h ; H
db  2Eh ; .
db  3Bh ; ;
db  5Fh ; _
db 0D8h
db  7Ch ; |
db  74h ; t
db  38h ; 8
db  5Ah ; Z
db    5
db 0F7h
db  4Ch ; L
db 0F7h
db  5Bh ; [
db 0E2h
db 0BBh
db 0BAh
db  96h
db  33h ; 3
db 0EEh
db 0ADh
db    5
db  2Fh ; /
db  0Bh
db 0A0h
db 0D9h
db  9Dh
db  5Bh ; [
db  0Ah
db 0B3h
db 0B2h
db  95h
db 0D6h
db  9Dh
db  96h
db  48h ; H
db  41h ; A
db 0BAh
db  81h
db 0CEh
db 0C7h
db  68h ; h
db    8
db 0B7h
db  36h ; 6
db  75h ; u
db 0B9h
db  56h ; V
db  49h ; I
db  69h ; i
db  69h ; i
db 0B1h
db 0F5h
db 0F4h
db  70h ; p
db  38h ; 8
db  18h
db 0EFh
db  82h
db  3Eh ; >
db  40h ; @
db 0B0h
db 0B3h
db  45h ; E
db 0BFh
db  49h ; I
db 0E4h
db 0B3h
db 0AFh
db  8Bh
db  8Bh
db 0BBh
db  76h ; v
db  18h
db    1
db 0B0h
db    8
db 0B3h
db  63h ; c
db  2Eh ; .
db 0B2h
db  96h
db  96h
db 0D1h
db  41h ; A
db 0B2h
db  81h
db 0C8h
db 0C7h
db  68h ; h
db    8
db 0B3h
db    8
db  0Ah
db  93h
db  45h ; E
db  45h ; E
db  69h ; i
db  0Fh
db  89h
db 0EBh
db  27h ; '
db  5Bh ; [
db 0C2h
db 0C7h
db    8
db  6Eh ; n
db  8Dh
db 0D9h
db  16h
db 0BDh
db  43h ; C
db  45h ; E
db  69h ; i
db 0D9h
db 0F7h
db 0F6h
db  4Ch ; L
db  6Ah ; j
db  38h ; 8
db 0D8h
db 0F5h
db  84h
db  5Dh ; ]
db 0F7h
db  4Ch ; L
db 0D2h
db 0C4h
db 0E5h
db 0DAh
db  99h
db  48h ; H
db  48h ; H
db 0CCh
db  8Ah
db  1Ah
db  38h ; 8
db 0F7h
db 0E0h
db 0C8h
db 0E6h
db  4Ch ; L
db  4Dh ; M
db 0C0h
db 0E4h
db  3Eh ; >
db  99h
db  48h ; H
db  4Dh ; M
db 0DCh
db 0C3h
db  47h ; G
db  89h
db  89h
db  6Eh ; n
db  8Dh
db  89h
db  3Eh ; >
db 0BDh
db  43h ; C
db  45h ; E
db  69h ; i
db  68h ; h
db 0B7h
db 0A1h
db 0ACh
db  5Ah ; Z
db 0FCh
db  38h ; 8
db  97h
db 0F7h
db    3
db  48h ; H
db  5Bh ; [
db  4Ch ; L
db  9Ah
db 0BAh
db  96h
db  81h
db 0E4h
db 0C0h
db  74h ; t
db  74h ; t
db 0A6h
db 0DFh
db  15h
db 0FBh
db  5Ch ; \
db 0F7h
db  4Ch ; L
db  62h ; b
db  4Eh ; N
db 0B6h
db  96h
db  96h
db    7
db 0B0h
db 0C9h
db  44h ; D
db  18h
db  38h ; 8
db 0F7h
db 0E0h
db  88h
db 0E6h
db  4Ch ; L
db  4Ch ; L
db  24h ; $
db  46h ; F
db 0CAh
db 0B2h
db  58h ; X
db  48h ; H
db  74h ; t
db  5Bh ; [
db  1Ch
db  38h ; 8
db  97h
db 0F7h
db  8Dh
db    7
db    4
db 0B9h
db  4Ah ; J
db  49h ; I
db  69h ; i
db  69h ; i
db 0EDh
db  79h ; y
db  91h
db  2Fh ; /
db  67h ; g
db  0Dh
db  24h ; $
db  36h ; 6
db  38h ; 8
db  8Dh
db 0BEh
db 0B5h
db  45h ; E
db  44h ; D
db 0F1h
db  9Eh
db  56h ; V
db  83h
db 0D0h
db  1Bh
db  0Ah
db 0A0h
db 0D9h
db  9Dh
db  5Bh ; [
db  0Ah
db 0B3h
db 0B2h
db  25h ; %
db  46h ; F
db 0C8h
db 0C2h
db  58h ; X
db  48h ; H
db  74h ; t
db  5Ah ; Z
db  38h ; 8
db  3Ah ; :
db 0B7h
db 0F7h
db    3
db 0C8h
db  5Bh ; [
db  8Ch
db  9Ah
db 0BAh
db  96h
db  0Fh
db  89h
db 0EBh
db 0A7h
db  91h
db 0C1h
db 0C7h
db    8
db  6Eh ; n
db  8Eh
db  1Ch
db 0B3h
db  59h ; Y
db  4Dh ; M
db  44h ; D
db  68h ; h
db  29h ; )
db 0F7h
db  88h
db  98h
db  3Bh ; ;
db  74h ; t
db  8Ch
db    3
db 0CBh
db 0E3h
db  5Ah ; Z
db  4Fh ; O
db 0D4h
db 0E1h
db  41h ; A
db  75h ; u
db  78h ; x
db 0E0h
db  97h
db    3
db  25h ; %
db 0D7h
db  25h ; %
db  22h ; "
db    4
db 0E9h
db  50h ; P
db  70h ; p
db 0BFh
db  85h
db  3Dh ; =
db  75h ; u
db  39h ; 9
db  3Ch ; <
db  5Bh ; [
db  84h
db    4
db 0EAh
db 0C7h
db  88h
db    8
db  38h ; 8
db 0F8h
db  4Fh ; O
db 0F8h
db  0Eh
db 0D3h
db 0FFh
db 0E2h
db  4Ah ; J
db 0B9h
db 0B7h
db 0C7h
db 0CFh
db 0C7h
db    8
db  83h
db  41h ; A
db 0F4h
db  16h
db 0F8h
db  0Eh
db 0D3h
db  47h ; G
db  94h
db  36h ; 6
db  8Eh
db  3Dh ; =
db  83h
db 0C7h
db 0A7h
db  19h
db 0FBh
db  4Fh ; O
db 0ADh
db  16h
db 0F8h
db  0Eh
db  6Ah ; j
db  9Fh
db 0E8h
db  70h ; p
db  87h
db 0A9h
db  8Bh
db 0C7h
db 0C1h
db  70h ; p
db 0F4h
db  18h
db 0A3h
db  18h
db 0E4h
db  36h ; 6
db  65h ; e
db  69h ; i
db  69h ; i
db 0B7h
db 0E8h
db  27h ; '
db  88h
db  4Ah ; J
db  53h ; S
db  88h
db    8
db 0B3h
db 0F5h
db 0D5h
db 0E9h
db  88h
db  6Ah ; j
db  69h ; i
db  1Ch
db 0F2h
db  85h
db 0C0h
db  46h ; F
db  9Dh
db 0ABh
db 0C9h
db 0C8h
db 0C6h
db  34h ; 4
db 0D5h
db  21h ; !
db  89h
db 0F0h
db 0F3h
db  62h ; b
db  77h ; w
db  1Eh
db  10h
db  47h ; G
db  55h ; U
db  6Bh ; k
db 0DDh
db  6Eh ; n
db 0B8h
db 0C8h
db 0C6h
db 0E7h
db  89h
db  60h ; `
db 0F0h
db 0C4h
db 0D1h
db 0E9h
db  8Bh
db  61h ; a
db  85h
db 0EBh
db 0C1h
db  6Eh ; n
db  1Eh
db  6Eh ; n
db 0B8h
db  33h ; 3
db 0AEh
db  24h ; $
db 0F1h
db  20h
db 0D1h
db 0DCh
db 0BEh
db  9Ch
db  47h ; G
db  29h ; )
db 0A9h
db  6Eh ; n
db 0FAh
db  6Eh ; n
db  1Eh
db  7Fh ; 
db  53h ; S
db  44h ; D
db 0BEh
db  6Fh ; o
db 0EFh
db 0FCh
db 0B4h
db  89h
db 0C7h
db    7
db    4
db  36h ; 6
db  3Ah ; :
db  85h
db  1Bh
db 0BBh
db  45h ; E
db  47h ; G
db  8Dh
db  79h ; y
db 0B7h
db 0B7h
db  8Bh
db  46h ; F
db  95h
db 0C7h
db  18h
db  7Dh ; }
db 0B6h
db 0D9h
db  53h ; S
db  7Ch ; |
db  81h
db  90h
db 0F2h
db  57h ; W
db  3Eh ; >
db 0DAh
db 0BFh
db  83h
db 0C7h
db 0E7h
db  1Fh
db    9
db 0B3h
db    8
db 0B3h
db  10h
db  53h ; S
db  20h
db  46h ; F
db 0B8h
db  54h ; T
db  86h
db  78h ; x
db  9Ch
db 0CEh
db    4
db 0BAh
db  0Ch
db 0B3h
db    8
db 0D5h
db 0CFh
db  33h ; 3
db  73h ; s
db 0CBh
db  6Dh ; m
db 0B7h
db 0B4h
db  23h ; #
db  9Fh
db  0Bh
db 0A0h
db 0D9h
db  85h
db  15h
db  0Ch
db 0B3h
db 0B2h
db  93h
db  53h ; S
db  8Dh
db  79h ; y
db 0B7h
db 0B7h
db  8Bh
db  29h ; )
db  67h ; g
db 0EBh
db 0DDh
db    9
db 0B3h
db  7Dh ; }
db 0B1h
db  65h ; e
db  82h
db  6Ah ; j
db  9Fh
db 0E8h
db  70h ; p
db  87h
db 0A9h
db  8Bh
db 0C7h
db  76h ; v
db  76h ; v
db  89h
db  75h ; u
db  2Eh ; .
db 0B7h
db 0B3h
db  45h ; E
db 0B7h
db 0DEh
db  68h ; h
db 0B0h
db 0DFh
db    6
db    5
db 0CFh
db 0F2h
db 0AAh
db  4Fh ; O
db 0BBh
db 0A5h
db 0A2h
db  3Dh ; =
db  5Dh ; ]
db  8Dh
db 0ECh
db 0E2h
db  42h ; B
db 0B9h
db 0BFh
db  2Fh ; /
db 0CFh
db 0C7h
db    8
db  83h
db  4Eh ; N
db  89h
db  74h ; t
db  37h ; 7
db  4Dh ; M
db  45h ; E
db  69h ; i
db  94h
db  10h
db  1Fh
db 0C0h
db 0C5h
db  2Ch ; ,
db  27h ; '
db 0DCh
db  7Dh ; }
db 0B0h
db 0AFh
db 0C6h
db 0B3h
db 0ABh
db  4Eh ; N
db 0C5h
db  49h ; I
db  3Ch ; <
db  5Bh ; [
db  84h
db    5
db  4Ah ; J
db 0C7h
db  88h
db    8
db  38h ; 8
db 0FDh
db  32h ; 2
db  3Fh ; ?
db  28h ; (
db  55h ; U
db  69h ; i
db  69h ; i
db  4Bh ; K
db 0DEh
db 0C6h
db  84h
db  9Dh
db  24h ; $
db  20h
db  0Ch
db  1Eh
db  11h
db 0F4h
db 0A2h
db  1Fh
db  20h
db  75h ; u
db  65h ; e
db  3Ch ; <
db  1Bh
db  84h
db    7
db  8Ah
db 0C7h
db  88h
db    8
db  62h ; b
db  2Eh ; .
db  62h ; b
db  1Fh
db  4Dh ; M
db    0
db  32h ; 2
db  61h ; a
db  66h ; f
db    7
db 0E9h
db  6Fh ; o
db  85h
db  76h ; v
db  76h ; v
db  89h
db  75h ; u
db  3Ah ; :
db 0B7h
db 0B3h
db  45h ; E
db  6Ah ; j
db  9Fh
db 0E8h
db  70h ; p
db 0A7h
db 0A9h
db  8Bh
db 0C7h
db  38h ; 8
db 0BCh
db  7Dh ; }
db 0BAh
db 0AFh
db 0C6h
db 0BEh
db  0Bh
db  91h
db  64h ; d
db 0CEh
db 0C2h
db 0B4h
db  33h ; 3
db  8Eh
db  11h
db 0A3h
db  19h
db 0F5h
db  32h ; 2
db 0CFh
db  95h
db 0BBh
db  45h ; E
db  47h ; G
db  45h ; E
db  9Ch
db  36h ; 6
db  86h
db  3Dh ; =
db  83h
db 0C7h
db  47h ; G
db  17h
db 0A5h
db  9Ah
db  0Fh
db  1Eh
db  81h
db 0CBh
db  57h ; W
db 0DDh
db  70h ; p
db 0F0h
db 0F2h
db 0E3h
db 0B9h
db  49h ; I
db 0C6h
db  83h
db 0D9h
db  5Bh ; [
db  51h ; Q
db 0FAh
db  5Bh ; [
db  4Fh ; O
db 0E1h
db 0AEh
db  96h
db  48h ; H
db  4Dh ; M
db  44h ; D
db    9
db  0Bh
db 0A0h
db 0CFh
db  85h
db  1Bh
db  0Ch
db 0B3h
db 0B3h
db 0ABh
db  52h ; R
db 0CDh
db  91h
db  49h ; I
db  48h ; H
db  74h ; t
db  9Ch
db  2Ch ; ,
db  17h
db  30h ; 0
db  5Ah ; Z
db 0B7h
db    8
db 0B3h
db 0A4h
db 0BEh
db  42h ; B
db  77h ; w
db  2Bh ; +
db 0B3h
db 0B7h
db  8Bh
db  70h ; p
db  88h
db 0C9h
db 0ABh
db 0AFh
db 0C6h
db  1Dh
db  14h
db  59h ; Y
db  61h ; a
db 0D8h
db 0BFh
db  66h ; f
db  3Ch ; <
db  5Bh ; [
db  84h
db    5
db  4Ah ; J
db 0C7h
db  88h
db    8
db  80h
db 0C8h
db  4Fh ; O
db 0E4h
db  12h
db 0EBh
db 0C7h
db  36h ; 6
db  3Ch ; <
db  1Bh
db  84h
db    7
db  4Ah ; J
db 0C7h
db  88h
db    8
db  4Fh ; O
db 0ADh
db  16h
db 0F8h
db  0Eh
db 0C1h
db  74h ; t
db 0AAh
db 0B1h
db 0B7h
db  78h ; x
db  85h
db  65h ; e
db 0D6h
db  76h ; v
db  83h
db  4Eh ; N
db  89h
db  74h ; t
db  1Fh
db  4Dh ; M
db  45h ; E
db  69h ; i
db  95h
db  12h
db  9Ah
db 0A6h
db 0C0h
db 0D0h
db 0B9h
db  59h ; Y
db 0F5h
db  32h ; 2
db 0CFh
db 0D5h
db 0BBh
db  45h ; E
db  46h ; F
db  99h
db 0CCh
db  12h
db  9Ah
db 0A6h
db  9Ch
db  20h
db  76h ; v
db  77h ; w
db  89h
db  74h ; t
db  7Eh ; ~
db 0B7h
db 0B3h
db  45h ; E
db 0B7h
db 0FEh
db 0CCh
db  12h
db  9Bh
db 0D6h
db  70h ; p
db 0C4h
db  1Fh
db 0F8h
db  0Ch
db 0B3h
db    8
db  80h
db  32h ; 2
db 0BCh
db 0EBh
db 0C7h
db 0C2h
db  1Ch
db 0E8h
db  67h ; g
db  88h
db  48h ; H
db  57h ; W
db 0C8h
db    8
db 0B3h
db 0B0h
db 0B2h
db 0B3h
db  45h ; E
db  44h ; D
db 0F1h
db 0C2h
db  3Ch ; <
db  1Bh
db  84h
db    7
db  2Eh ; .
db 0C7h
db  88h
db    8
db  80h
db 0D3h
db  0Ah
db 0A3h
db  45h ; E
db  45h ; E
db  69h ; i
db  94h
db 0D1h
db 0DCh
db 0BEh
db  9Ch
db  47h ; G
db  49h ; I
db 0A0h
db  6Eh ; n
db 0FAh
db  6Eh ; n
db  1Eh
db  7Fh ; 
db  53h ; S
db  44h ; D
db 0BEh
db  52h ; R
db 0D1h
db 0FCh
db 0B9h
db 0D1h
db  0Ah
db 0C6h
db  70h ; p
db  7Dh ; }
db  81h
db  6Eh ; n
db 0FAh
db  7Eh ; ~
db  1Fh
db 0DDh
db  44h ; D
db 0A9h
db 0C2h
db 0FCh
db 0BAh
db  19h
db  0Bh
db  12h
db 0A4h
db    3
db  73h ; s
db  7Dh ; }
db  93h
db  7Fh ; 
db 0D7h
db 0DFh
db 0DCh
db  0Fh
db 0BCh
db 0B4h
db  25h ; %
db 0A5h
db  0Bh
db  0Eh
db  24h ; $
db 0A5h
db 0D5h
db    3
db  73h ; s
db  59h ; Y
db  59h ; Y
db 0DCh
db  4Ch ; L
db  0Fh
db  1Ah
db  87h
db 0D0h
db  0Bh
db  2Ch ; ,
db 0E7h
db 0B5h
db  93h
db 0B3h
db    8
db 0B3h
db  21h ; !
db  89h
db 0BFh
db  4Dh ; M
db 0E4h
db  1Bh
db  97h
db  8Bh
db  8Ah
db 0B5h
db 0C5h
db    8
db    8
db 0B3h
db  6Eh ; n
db  1Ah
db 0B2h
db  45h ; E
db  91h
db  7Ch ; |
db 0B8h
db  57h ; W
db  88h
db  98h
db  61h ; a
db  0Ah
db 0E0h
db 0D9h
db  85h
db  19h
db  0Ch
db 0B3h
db 0B3h
db  23h ; #
db  60h ; `
db  2Eh ; .
db 0E2h
db  6Eh ; n
db  38h ; 8
db  95h
db  47h ; G
db 0BBh
db  56h ; V
db  78h ; x
db  15h
db 0D5h
db  0Ch
db 0B3h
db 0B3h
db  89h
db 0BDh
db  85h
db 0E4h
db  1Bh
db  97h
db  8Bh
db  8Bh
db  2Dh ; -
db    6
db  44h ; D
db  36h ; 6
db  38h ; 8
db  85h
db  19h
db 0BBh
db  45h ; E
db  46h ; F
db 0C5h
db  6Ch ; l
db  0Eh
db  37h ; 7
db  8Bh
db  8Bh
db 0C7h
db 0CDh
db  22h ; "
db  6Eh ; n
db  1Ah
db    9
db 0B3h
db  5Bh ; [
db  7Dh ; }
db  6Ah ; j
db  7Fh ; 
db  6Ch ; l
db  31h ; 1
db  97h
db  8Bh
db  8Ah
db 0D1h
db 0FDh
db 0B8h
db 0CAh
db 0E5h
db  0Ch
db 0B3h
db 0B2h
db  53h ; S
db  33h ; 3
db  6Eh ; n
db 0AAh
db 0C1h
db  97h
db  8Bh
db  8Ah
db  17h
db  5Bh ; [
db  57h ; W
db 0F7h
db  4Ch ; L
db  83h
db  76h ; v
db 0B9h
db 0E9h
db  55h ; U
db  69h ; i
db  69h ; i
db  3Ch ; <
db  33h ; 3
db 0D5h
db  30h ; 0
db 0C4h
db  1Fh
db  66h ; f
db  0Ch
db 0B3h
db    8
db  5Bh ; [
db  2Ah ; *
db 0BCh
db 0BAh
db  96h
db  31h ; 1
db  66h ; f
db 0F5h
db  44h ; D
db  19h
db  2Fh ; /
db 0A7h
db  55h ; U
db 0B5h
db 0EAh
db  49h ; I
db 0D5h
db 0CFh
db  33h ; 3
db  73h ; s
db 0DBh
db  6Dh ; m
db 0B7h
db 0B4h
db  33h ; 3
db  8Eh
db  11h
db  36h ; 6
db    3
db  83h
db  46h ; F
db  89h
db  75h ; u
db 0BFh
db  4Ch ; L
db  45h ; E
db  69h ; i
db  95h
db  12h
db  9Ah
db 0A6h
db 0C0h
db  3Eh ; >
db  2Bh ; +
db  28h ; (
db 0CBh
db 0E0h
db  3Bh ; ;
db  68h ; h
db 0E1h
db  46h ; F
db  45h ; E
db  69h ; i
db  69h ; i
db 0C3h
db  83h
db  83h
db  6Dh ; m
db 0C4h
db 0C7h
db    8
db    8
db  1Ah
db    8
db 0B3h
db 0B3h
db  4Dh ; M
db  95h
db  70h ; p
db 0E8h
db  44h ; D
db 0BFh
db  8Bh
db  8Bh
db 0C7h
db 0D2h
db  28h ; (
db    8
db 0B3h
db    0
db 0C7h
db 0BEh
db  47h ; G
db  89h
db  6Eh ; n
db  69h ; i
db 0B7h
db 0B2h
db 0C3h
db  8Bh
db 0C7h
db 0C7h
db  18h
db  7Ch ; |
db 0B5h
db  89h
db  40h ; @
db 0B1h
db  45h ; E
db  45h ; E
db  69h ; i
db 0B8h
db  57h ; W
db 0E9h
db  93h
db  8Ch
db  36h ; 6
db  67h ; g
db    6
db  0Dh
db  0Bh
db  0Ah
db 0B0h
db 0BBh
db  47h ; G
db  2Ah ; *
db  64h ; d
db  38h ; 8
db 0E0h
db 0EAh
db  46h ; F
db  8Dh
db 0C7h
db 0C7h
db    8
db  59h ; Y
db  39h ; 9
db 0C0h
db  33h ; 3
db  71h ; q
db  42h ; B
db  91h
db  60h ; `
db 0D8h
db 0B5h
db 0F2h
db  9Ch
db  74h ; t
db  38h ; 8
db  98h
db 0F4h
db 0F1h
db  18h
db  51h ; Q
db  51h ; Q
db  64h ; d
db  46h ; F
db  7Ah ; z
db 0A8h
db  68h ; h
db 0B7h
db 0B7h
db  8Bh
db  89h
db  58h ; X
db 0D8h
db  88h
db    8
db 0B3h
db 0C8h
db 0ECh
db    0
db 0C3h
db    8
db  2Ch ; ,
db  3Bh ; ;
db  89h
db  8Bh
db 0A5h
db 0BBh
db 0C1h
db 0C7h
db    8
db    8
db 0B3h
db    8
db 0B3h
db 0CEh
db  53h ; S
db  70h ; p
db  6Bh ; k
db  6Ah ; j
db 0B7h
db 0B5h
db 0C3h
db  9Ch
db  74h ; t
db 0A0h
db 0D9h
db  9Dh
db  87h
db  0Bh
db 0B3h
db 0B3h
db  39h ; 9
db 0EBh
db  3Dh ; =
db  2Dh ; -
db 0B4h
db 0B7h
db  8Bh
db  0Fh
db 0B1h
db  5Fh ; _
db  47h ; G
db  1Ah
db 0B0h
db 0CBh
db  8Dh
db 0A0h
db  6Eh ; n
db  25h ; %
db  65h ; e
db  69h ; i
db 0B7h
db  47h ; G
db  82h
db 0B1h
db 0F6h
db 0C7h
db  68h ; h
db    8
db  58h ; X
db    5
db 0F8h
db 0CFh
db  13h
db  10h
db  7Bh ; {
db  6Ah ; j
db 0B7h
db 0B4h
db  2Bh ; +
db  8Dh
db    9
db  7Bh ; {
db  53h ; S
db  52h ; R
db 0EAh
db  53h ; S
db  70h ; p
unk_1001DB8C db  73h ; s
db  39h ; 9
db  4Bh ; K
db  9Fh
db 0CBh
db 0B0h
db 0B7h
db  8Bh
db  89h
db  2Fh ; /
db    6
db  4Fh ; O
db  8Bh
db  0Eh
db  51h ; Q
db 0B5h
db 0B3h
db  45h ; E
db  40h ; @
db 0BDh
db  6Fh ; o
db  4Fh ; O
db 0FEh
db  8Ch
db  89h
db 0C7h
db 0A7h
db  18h
db 0E4h
db 0BBh
db  83h
db  4Fh ; O
db 0A4h
db 0AEh
db  42h ; B
db  73h ; s
db 0D2h
db 0B6h
db 0B7h
db  8Bh
db 0ECh
db  71h ; q
db  80h
db 0D9h
db  95h
db  69h ; i
db    9
db 0B3h
db 0B2h
db  47h ; G
db 0C9h
db  76h ; v
db  69h ; i
db 0B7h
db 0B2h
db  43h ; C
db  85h
db 0C7h
db 0C7h
db    8
db 0F4h
db  1Fh
db  36h ; 6
db  81h
db 0BBh
db  7Eh ; ~
db    9
db  6Eh ; n
db  69h ; i
db 0B7h
db 0ABh
db  91h
db  7Dh ; }
db 0C8h
db  89h
db 0A8h
db  3Bh ; ;
db  68h ; h
db 0A2h
db  51h ; Q
db  6Bh ; k
db  88h
db 0BFh
db  45h ; E
db 0ECh
db  7Eh ; ~
db 0BFh
db  8Bh
db  8Bh
db  0Bh
db 0E0h
db 0D9h
db  8Dh
db  5Bh ; [
db  0Ah
db 0B3h
db 0B3h
db  39h ; 9
db  5Fh ; _
db  7Eh ; ~
db  85h
db 0B5h
db 0B7h
db  8Bh
db  8Ah
db 0D3h
db  2Fh ; /
db 0F7h
db  36h ; 6
db  3Bh ; ;
db  8Dh
db  5Eh ; ^
db 0B7h
db  45h ; E
db  46h ; F
db 0C9h
db 0B6h
db  68h ; h
db  48h ; H
db  74h ; t
db 0F6h
db 0D3h
db  94h
db 0B3h
db    9
db 0B3h
db    8
db  33h ; 3
db  75h ; u
db  42h ; B
db  94h
db  50h ; P
db  6Ah ; j
db  68h ; h
db 0A8h
db 0D7h
db  85h
db 0A1h
db  9Eh
db  39h ; 9
db  4Bh ; K
db 0B1h
db  82h
db 0F8h
db  4Dh ; M
db  38h ; 8
db  67h ; g
db  7Fh ; 
db  87h
db 0B5h
db 0B7h
db  8Bh
db 0E3h
db  87h
db 0C6h
db  90h
db 0E0h
db  59h ; Y
db 0D5h
db  4Ch ; L
db  4Ch ; L
db  80h
db 0A3h
db  42h ; B
db  2Eh ; .
db  48h ; H
db  16h
db  8Ah
db  92h
db  47h ; G
db  0Bh
db 0CFh
db  83h
db  26h ; &
db 0C1h
db 0B2h
db 0B3h
db  45h ; E
db 0E7h
db  4Eh ; N
db  8Eh
db  48h ; H
db  48h ; H
db 0CCh
db  6Ah ; j
db  16h
db  38h ; 8
db 0F7h
db 0B8h
db  73h ; s
db 0E0h
db 0CEh
db  7Ch ; |
db 0BAh
db 0BAh
db 0CAh
db  8Dh
db  5Fh ; _
db  48h ; H
db  74h ; t
db 0F6h
db  4Bh ; K
db 0B7h
db 0B5h
db  0Ah
db 0B3h
db    8
db 0B2h
db  65h ; e
db  26h ; &
db  6Ah ; j
db  17h
db 0D7h
db 0B4h
db 0B7h
db  8Bh
db  8Ah
db 0C1h
db  3Ah ; :
db  68h ; h
db    7
db    5
db    3
db  39h ; 9
db  35h ; 5
db  43h ; C
db  95h
db 0E9h
db  65h ; e
db  77h ; w
db 0F2h
db  8Ch
db  30h ; 0
db  38h ; 8
db  98h
db 0F4h
db 0F1h
db 0F0h
db  46h ; F
db 0C6h
db  65h ; e
db  38h ; 8
db  5Fh ; _
db  7Eh ; ~
db  82h
db 0B5h
db 0B7h
db  8Bh
db  8Ah
db 0D3h
db  4Fh ; O
db 0F7h
db  36h ; 6
db  3Bh ; ;
db  8Dh
db  5Dh ; ]
db 0B7h
db  45h ; E
db  47h ; G
db  65h ; e
db 0ADh
db 0BFh
db  35h ; 5
db  19h
db  47h ; G
db 0BBh
db  76h ; v
db  7Ah ; z
db 0C1h
db 0B2h
db    8
db 0B3h
db 0D2h
db  84h
db 0E5h
db  9Ah
db  83h
db  48h ; H
db  48h ; H
db 0CCh
db  1Ch
db  17h
db  38h ; 8
db 0F7h
db  4Ah ; J
db  5Bh ; [
db  62h ; b
db  59h ; Y
db  4Ch ; L
db 0BAh
db  6Ch ; l
db  28h ; (
db 0D9h
db  77h ; w
db 0F6h
db 0CCh
db  5Eh ; ^
db  38h ; 8
db 0D8h
db 0F5h
db  74h ; t
db  5Bh ; [
db 0F7h
db  4Ch ; L
db    2
db  15h
db  44h ; D
db    0
db  31h ; 1
db 0C2h
db 0A8h
db  4Bh ; K
db  5Dh ; ]
db 0C4h
db 0F8h
db  24h ; $
db 0CBh
db  5Bh ; [
db  3Eh ; >
db  44h ; D
db  4Ch ; L
db 0BAh
db 0BEh
db  75h ; u
db 0ECh
db  9Fh
db 0AFh
db  8Bh
db  8Bh
db 0C7h
db 0C7h
db  28h ; (
db    8
db  8Dh
db 0CFh
db  36h ; 6
db 0EBh
db  43h ; C
db  45h ; E
db  69h ; i
db  87h
db 0B7h
db 0B7h
db  8Bh
db 0F6h
db  49h ; I
db 0D7h
db 0AEh
db  0Bh
db 0B3h
db    8
db  4Ch ; L
db 0B3h
db  45h ; E
db  45h ; E
db  91h
db 0AEh
db  32h ; 2
db  17h
db  92h
db  8Bh
db 0C7h
db 0DAh
db 0A8h
db    8
db 0B3h
db  36h ; 6
db  74h ; t
db 0B9h
db  34h ; 4
db  49h ; I
db  69h ; i
db  69h ; i
db  4Bh ; K
db 0B7h
db  8Bh
db  8Bh
db 0BBh
db  7Fh ; 
db 0F8h
db  34h ; 4
db 0B0h
db    8
db 0B3h
db  4Bh ; K
db  44h ; D
db  45h ; E
db  69h ; i
db  57h ; W
db  70h ; p
db  9Dh
db  8Fh
db  8Dh
db 0C7h
db    7
db    9
db    8
db 0B3h
db    8
db  8Dh
db  3Ch ; <
db  4Eh ; N
db  55h ; U
db  64h ; d
db  69h ; i
db 0B7h
db  3Fh ; ?
db  8Bh
db  8Bh
db 0C7h
db    0
db 0D0h
db  8Dh
db 0FBh
db  0Bh
db 0B3h
db 0B2h
db  45h ; E
db 0BEh
db  71h ; q
db 0ECh
db 0FEh
db 0AFh
db  8Bh
db  8Ah
db  47h ; G
db 0CBh
db 0DFh
db  0Bh
db 0B3h
db 0E0h
db  9Fh
db 0B1h
db  45h ; E
db  47h ; G
db  69h ; i
db  97h
db 0E1h
db  1Fh
db 0A0h
db  58h ; X
db  68h ; h
db 0C7h
db    8
db    8
db  33h ; 3
db 0F6h
db 0E6h
db  59h ; Y
db  91h
db 0BEh
db  75h ; u
db 0ECh
db  9Fh
db 0AFh
db  8Bh
db  8Ah
db 0C7h
db 0C7h
db    8
db    8
db  8Dh
db 0CFh
db  36h ; 6
db 0EBh
db  43h ; C
db  45h ; E
db  69h ; i
db  19h
db 0B7h
db 0B7h
db  8Bh
db 0F6h
db  49h ; I
db 0D7h
db 0AEh
db  0Bh
db 0B3h
db    8
db 0CCh
db 0B3h
db  45h ; E
db  45h ; E
db  91h
db 0AEh
db  32h ; 2
db  17h
db  92h
db  8Bh
db 0C7h
db 0CAh
db 0E8h
db    8
db 0B3h
db  36h ; 6
db  74h ; t
db 0B9h
db  34h ; 4
db  49h ; I
db  69h ; i
db  69h ; i
db 0CBh
db 0B7h
db  8Bh
db  8Bh
db 0BBh
db  7Fh ; 
db 0F8h
db  34h ; 4
db 0B0h
db    8
db 0B3h
db  4Bh ; K
db  45h ; E
db  45h ; E
db  69h ; i
db  57h ; W
db  70h ; p
db  9Dh
db  8Fh
db  8Dh
db 0C7h
db 0C7h
db    9
db    8
db 0B3h
db    8
db  8Dh
db  3Ch ; <
db  4Eh ; N
db  55h ; U
db  64h ; d
db  69h ; i
db 0B7h
db 0C7h
db  8Bh
db  8Bh
db 0C7h
db    0
db 0D0h
db  8Dh
db 0FBh
db  0Bh
db 0B3h
db 0B2h
db  45h ; E
db 0BEh
db  71h ; q
db 0ECh
db 0FEh
db 0AFh
db  8Bh
db  8Ah
db  47h ; G
db 0DAh
db  65h ; e
db  36h ; 6
db  74h ; t
db  8Dh
db  9Bh
db 0B5h
db  45h ; E
db  44h ; D
db  69h ; i
db  69h ; i
db 0B7h
db 0B6h
db  7Bh ; {
db    4
db 0CCh
db 0A2h
db  88h
db    8
db 0B3h
db  30h ; 0
db 0B3h
db 0B3h
db  45h ; E
db 0BEh
db  75h ; u
db 0ECh
db  87h
db 0AFh
db  8Bh
db  8Bh
db 0B9h
db 0C7h
db    8
db    8
db  8Dh
db 0CFh
db  36h ; 6
db 0DBh
db  43h ; C
db  45h ; E
db  69h ; i
db  5Eh ; ^
db 0B7h
db 0B7h
db  8Bh
db 0F6h
db  49h ; I
db 0D7h
db 0AFh
db  0Bh
db 0B3h
db    8
db  8Fh
db 0B3h
db  45h ; E
db  45h ; E
db  91h
db 0AEh
db  32h ; 2
db  57h ; W
db  92h
db  8Bh
db 0C7h
db 0C0h
db  88h
db    8
db 0B3h
db  36h ; 6
db  74h ; t
db 0B9h
db 0C4h
db  49h ; I
db  69h ; i
db  69h ; i
db 0B3h
db 0B7h
db  8Bh
db  8Bh
db 0BBh
db  7Fh ; 
db 0F8h
db  4Ch ; L
db 0B0h
db    8
db 0B3h
db 0AFh
db  45h ; E
db  45h ; E
db  69h ; i
db  57h ; W
db  71h ; q
db  9Dh
db 0CFh
db  8Dh
db 0C7h
db 0C7h
db  0Ch
db  36h ; 6
db  75h ; u
db  8Dh
db 0FAh
db 0B5h
db  45h ; E
db  45h ; E
db 0A9h
db  81h
db 0F7h
db    0
db  74h ; t
db  74h ; t
db  40h ; @
db 0ADh
db    2
db  3Bh ; ;
db  73h ; s
db  3Bh ; ;
db  61h ; a
db 0CEh
db  51h ; Q
db  52h ; R
db    3
db  68h ; h
db 0B7h
db 0B3h
db  83h
db  4Bh ; K
db 0C8h
db 0C7h
db    8
db    8
db  32h ; 2
db 0EBh
db 0B4h
db 0B3h
db  45h ; E
db  47h ; G
db  65h ; e
db  92h
db 0B0h
db  1Fh
db  98h
db 0ECh
db  71h ; q
db 0C7h
db  73h ; s
db  8Bh
db  48h ; H
db  0Fh
db 0CFh
db 0B4h
db  43h ; C
db 0E9h
db  76h ; v
db  57h ; W
db  3Dh ; =
db  17h
db  67h ; g
db  2Dh ; -
db 0C4h
db 0C7h
db    8
db  4Bh ; K
db  30h ; 0
db 0F3h
db 0B4h
db  59h ; Y
db  41h ; A
db  8Ah
db    5
db  57h ; W
db  3Dh ; =
db  17h
db  66h ; f
db  2Dh ; -
db 0C4h
db 0C7h
db    8
db  53h ; S
db 0EBh
db 0CBh
db 0E3h
db  15h
db  39h ; 9
db  4Bh ; K
db  7Dh ; }
db  51h ; Q
db 0B4h
db 0B7h
db  8Bh
db  9Ch
db  76h ; v
db 0DAh
db  11h
db 0FFh
db  4Ch ; L
db 0F7h
db  5Bh ; [
db 0FEh
db 0BAh
db 0BAh
db  96h
db  5Ah ; Z
db  67h ; g
db  6Dh ; m
db  49h ; I
db  0Dh
db  68h ; h
db  8Dh
db  22h ; "
db  3Bh ; ;
db  4Ch ; L
db 0B1h
db 0B7h
db 0B3h
db  45h ; E
db  47h ; G
db  89h
db  6Dh ; m
db 0B7h
db 0B7h
db  8Bh
db 0DCh
db  45h ; E
db 0DAh
db  12h
db 0F7h
db  4Ch ; L
db 0F7h
db 0D5h
db 0B4h
db 0B1h
db 0DEh
db 0B4h
db 0AEh
db 0B6h
db 0B4h
db  23h ; #
db  81h
db  0Bh
db  3Dh ; =
db  34h ; 4
db 0E3h
db 0B0h
db  6Eh ; n
db  62h ; b
db  6Ch ; l
db  80h
db 0C7h
db  46h ; F
db 0AEh
db 0EDh
db  7Dh ; }
db  71h ; q
db  0Dh
db  36h ; 6
db 0C7h
db    1
db  49h ; I
unk_1001DEB9 db  5Bh ; [
db  3Ch ; <
db 0A4h
db 0B3h
db  45h ; E
db    4
db  24h ; $
db  38h ; 8
db 0E0h
db  43h ; C
db  92h
db 0F0h
db  82h
db 0C7h
db 0E8h
db    8
db 0B2h
db  7Dh ; }
db  9Eh
db 0CEh
db  53h ; S
db  52h ; R
db 0EBh
db  6Eh ; n
db 0B7h
db 0B0h
db 0CBh
db  9Ah
db 0F1h
db  38h ; 8
db 0F7h
db  36h ; 6
db  39h ; 9
db  8Dh
db  70h ; p
db 0B1h
db  45h ; E
db  46h ; F
db 0C9h
db  57h ; W
db  1Dh
db  48h ; H
db  74h ; t
db  6Fh ; o
db  4Bh ; K
db 0A0h
db 0D9h
db 0BDh
db  19h
db  0Fh
db 0B3h
db 0B2h
db  43h ; C
db  5Dh ; ]
db  82h
db 0D0h
db 0B3h
db 0B7h
db  8Bh
db  8Ah
db  21h ; !
db 0B3h
db 0B5h
db  3Ah ; :
db  8Dh
db  8Bh
db  0Eh
db    1
db  49h ; I
db  45h ; E
db  69h ; i
db  68h ; h
db 0C2h
db  88h
db 0CBh
db 0F8h
db 0BAh
db  38h ; 8
db 0F7h
db 0E3h
db  69h ; i
db  36h ; 6
db 0BCh
db 0DCh
db  7Eh ; ~
db  79h ; y
db  6Eh ; n
db  69h ; i
db 0B7h
db 0A9h
db  97h
db  8Dh
db 0BBh
db    6
db 0FEh
db  85h
db  77h ; w
db    9
db 0B3h
db 0B2h
db  53h ; S
db  4Ah ; J
db 0CAh
db 0ADh
db 0B2h
db 0B7h
db  8Bh
db  6Fh ; o
db 0CBh
db 0ABh
db 0DDh
db  4Bh ; K
db  51h ; Q
db 0FAh
db  4Bh ; K
db  0Dh
db 0F7h
db  28h ; (
db    8
db 0AAh
db  30h ; 0
db 0B3h
db  13h
db 0F0h
db  16h
db  10h
db  0Ah
db    8
db 0B3h
db  5Bh ; [
db 0E2h
db  17h
db 0EBh
db 0E6h
db  6Eh ; n
db  9Dh
db  48h ; H
db  4Eh ; N
db  14h
db  0Bh
db 0A0h
db 0BCh
db  6Eh ; n
db 0C1h
db  80h
db 0DAh
db  8Dh
db 0A4h
db  4Eh ; N
db 0B5h
db  65h ; e
db  69h ; i
db 0B7h
db 0F0h
db 0ECh
db  66h ; f
db  38h ; 8
db  18h
db 0EFh
db  83h
db  2Eh ; .
db  34h ; 4
db 0B0h
db 0B3h
db  45h ; E
db 0E6h
db  66h ; f
db  97h
db  48h ; H
db  4Eh ; N
db  14h
db  0Fh
db 0BAh
db  76h ; v
db  38h ; 8
db  14h
db 0B0h
db    8
db 0B3h
db  34h ; 4
db  53h ; S
db  4Ah ; J
db 0CAh
db 0A6h
db  41h ; A
db  48h ; H
db  74h ; t
db  5Ah ; Z
db  9Ch
db  38h ; 8
db 0D7h
db 0F7h
db  80h
db 0CAh
db  38h ; 8
db  23h ; #
db 0C2h
db  6Ah ; j
db  67h ; g
db  81h
db    9
db    0
db  74h ; t
db  74h ; t
db  16h
db  14h
db  97h
db 0F7h
db  4Ch ; L
db  3Bh ; ;
db  71h ; q
db  30h ; 0
db  84h
db    5
db 0FDh
db  69h ; i
db 0B7h
db  4Fh ; O
db 0F4h
db  9Ch
db  45h ; E
db  9Ah
db  11h
db 0FCh
db  4Ch ; L
db 0F7h
db  5Bh ; [
db  52h ; R
db 0B3h
db 0BAh
db  96h
db  57h ; W
db  70h ; p
db  98h
db  6Fh ; o
db  8Fh
db 0C7h
db 0C7h
db    8
db    8
db 0B3h
db    8
db  8Dh
db 0A4h
db  4Eh ; N
db  35h ; 5
db  65h ; e
db  69h ; i
db 0B7h
db 0F2h
db  9Ch
db  64h ; d
db  38h ; 8
db  38h ; 8
db 0E3h
db  52h ; R
db 0EAh
db  53h ; S
db  70h ; p
db  3Fh ; ?
db  45h ; E
db  3Eh ; >
db  34h ; 4
db  81h
db  9Ah
db    7
db  8Bh
db  8Bh
db  61h ; a
db  8Dh
db  22h ; "
db  5Fh ; _
db  8Dh
db  83h
db    6
db 0E7h
db  4Ah ; J
db  45h ; E
db  69h ; i
db 0EAh
db  71h ; q
db 0E7h
db 0F2h
db 0E5h
db 0CAh
db 0E0h
db 0D9h
db  8Dh
db 0AFh
db  0Bh
db 0B3h
db 0B2h
db  53h ; S
db  5Dh ; ]
db  60h ; `
db  4Ch ; L
db  48h ; H
db  48h ; H
db  74h ; t
db  94h
db  17h
db 0A3h
db 0D7h
db 0F7h
db  4Ch ; L
db  36h ; 6
db  74h ; t
db 0B8h
db 0BCh
db  4Dh ; M
db  69h ; i
db  69h ; i
db 0B7h
db 0B7h
db  8Bh
db  8Bh
db 0BBh
db  76h ; v
db  78h ; x
db  14h
db 0B0h
db    8
db 0B3h
db  63h ; c
db 0F4h
db  9Ah
db  96h
db  96h
db 0E8h
db  65h ; e
db  41h ; A
db  3Ch ; <
db  41h ; A
db 0DEh
db  48h ; H
db  2Dh ; -
db  28h ; (
unk_1001E00A db 0E0h
db  5Eh ; ^
db  99h
db  45h ; E
db  44h ; D
db 0E9h
db  57h ; W
db  34h ; 4
db  5Ah ; Z
db  9Eh
db  85h
db 0C7h
db 0E7h
db    8
db  7Dh ; }
db  9Bh
db  36h ; 6
db  38h ; 8
db 0B8h
db  84h
db  59h ; Y
db  69h ; i
db  69h ; i
db  5Fh ; _
db  63h ; c
db  46h ; F
db  74h ; t
db  38h ; 8
db  80h
db 0D9h
db  8Dh
db  70h ; p
db    9
db 0B3h
db 0B2h
db  95h
db  87h
db 0CAh
db  96h
db  48h ; H
db 0CBh
db  9Bh
db 0BFh
db 0C6h
db 0C7h
db    8
db 0E0h
db  28h ; (
db    8
db 0B3h
db 0B2h
db  97h
db    5
db  6Bh ; k
db  69h ; i
db 0B7h
db  43h ; C
db  92h
db 0F1h
db  74h ; t
db 0C7h
db 0C8h
db    8
db 0B2h
db  7Dh ; }
db 0B4h
db  63h ; c
db 0A4h
db 0B2h
db  97h
db  96h
db  5Ch ; \
db  4Dh ; M
db  35h ; 5
db  9Ch
db  3Ch ; <
db  37h ; 7
db  30h ; 0
db  0Eh
db 0B7h
db    8
db 0B3h
db  62h ; b
db 0ECh
db 0BEh
db  96h
db  96h
db 0C5h
db 0C6h
db  78h ; x
db    6
db 0CCh
db 0FFh
db  88h
db    8
db 0B3h
db    0
db  38h ; 8
db  48h ; H
db  46h ; F
db  5Ah ; Z
db 0B2h
db  6Ah ; j
db 0B7h
db 0B0h
db 0CBh
db    8
db  3Bh ; ;
db  38h ; 8
db 0F7h
db  7Ah ; z
db 0E4h
db  83h
db  76h ; v
db 0A4h
db 0FEh
db  6Ah ; j
db  5Fh ; _
db 0E2h
db  62h ; b
db  98h
db  3Bh ; ;
db  8Dh
db 0C7h

loc_1001E086:
out     18h, eax
retf    0CB5h
db 0B3h
db 0B2h
db  47h ; G
db  4Ah ; J
db 0F2h
db  6Ah ; j
db 0B7h
db 0B3h
db  83h
db    8
db  2Ah ; *
db 0C7h
db  68h ; h
db    8
db  5Bh ; [
db 0DBh
db  4Bh ; K
db  4Ch ; L
db 0BAh
db  39h ; 9
db 0A4h
db 0A9h
db  3Ch ; <
db  1Bh
db  85h
db  0Eh
db  2Ah ; *
db 0C7h
db  68h ; h
db    8
db  88h
db 0F2h
db 0C7h
db  96h
db  37h ; 7
db  55h ; U
db  69h ; i
db  69h ; i
db 0B7h
db 0E8h
db  1Fh
db  6Ch ; l
db  8Ch
db  96h
db  77h ; w
db 0B1h
db 0B7h
db    8
db 0B3h
db 0B2h
db 0A3h
db 0EBh
db  47h ; G
db  94h
db  36h ; 6
db  8Fh
db 0BDh
db  83h
db 0C7h
db 0E7h
db  1Fh
db  0Ch
db 0B3h
db    8
db 0B3h
db  54h ; T
db  12h
db 0A6h
db 0C6h
db  68h ; h
db 0E8h
db 0B9h
db  90h
db  61h ; a
db 0C7h
db  3Eh ; >
db 0D6h

loc_1001E0D8:
loopne  loc_1001E086
sbb     eax, 1B85B3B3h
inc     esp
xchg    eax, esp
db  36h ; 6
db  8Fh
db 0BDh
db  83h
db 0C7h
db 0C7h
db  15h
db 0DCh
db  4Dh ; M
db 0F7h
db  4Ch ; L
db 0A4h
db 0BEh
db  42h ; B
db  77h ; w
db  9Fh
db 0B4h
db 0B7h
db  8Bh
db 0F6h
db 0D1h
db  91h
db 0BDh
db  0Fh
db 0B3h
db    8
db  30h ; 0
db  3Fh ; ?
db  30h ; 0
db 0A1h
db  7Bh ; {
db  69h ; i
db 0B7h
db 0B0h
db  13h
db 0C0h
db 0D0h
db 0BFh
db 0B9h
db 0D5h
db  38h ; 8
db 0C5h
db  38h ; 8
db  19h
db  4Eh ; N
db  9Dh
db  66h ; f
db  69h ; i
db 0B7h
db 0B9h
db  9Fh
db  87h
db 0CFh
db 0C7h
db    8
db  89h
db  70h ; p
db 0EEh
db 0B0h
db 0B3h
db  45h ; E
db  42h ; B
db  6Fh ; o
db  9Fh
db 0B4h
db 0B7h
db  8Bh
db  5Bh ; [
db  56h ; V
db  38h ; 8
db  17h
db 0F7h
db 0ECh
db  3Bh ; ;
db  73h ; s
db 0A4h
db 0EEh
db  42h ; B
db  63h ; c
db  9Fh
db 0B4h
db 0B7h
db  8Bh
db 0FCh
db  33h ; 3
db  89h
db  8Ah
db 0B1h
db 0B7h
db    8
db 0B3h
db 0B2h
db  53h ; S
db  8Eh
db 0A6h
db 0CCh
db  3Ch ; <
db  62h ; b
db  44h ; D
db  83h
db 0C7h
db 0C7h
db    8
db 0FBh
db  18h
db 0F0h
db 0D2h
db  34h ; 4
db 0F8h
db  46h ; F
db  95h
db  0Ah
db  5Fh ; _
db  57h ; W
db  2Fh ; /
db  8Bh
db 0C7h
db  2Dh ; -
db 0C2h
db  5Bh ; [
db 0E2h
db  5Ah ; Z
db  5Bh ; [
db 0FAh
db 0A0h
db 0BAh
db  96h
db  57h ; W
db 0B8h
db  0Bh
db 0A6h
db  15h
db 0C4h
db 0C7h
db    8
db 0E0h
db  62h ; b
db 0F1h
db  4Ch ; L
db  4Ch ; L
db  52h ; R
db  85h
db  92h
db 0E2h
db  3Ah ; :
db  77h ; w
db  93h
db  8Bh
db 0C7h
db 0A0h
db 0CFh
db  85h
db  97h
db  0Bh
db 0B3h
db 0B3h
db 0AFh
db  69h ; i
db 0A5h
db 0A0h
db  89h
db 0FAh
db  27h ; '
db 0BBh
db 0C1h
db 0C7h
db    8
db 0E3h
db 0A5h
db  36h ; 6
db  3Ah ; :
db 0A9h
db  0Ch
db  49h ; I
db  69h ; i
db  69h ; i
db  5Fh ; _
db 0C8h
db  6Ch ; l
db  74h ; t
db  38h ; 8
db 0D6h
db  77h ; w
db  36h ; 6
db  38h ; 8
db  85h
db 0F7h
db 0B5h
db  45h ; E
db  44h ; D
db  6Dh ; m
db  57h ; W
db  3Ch ; <
db  9Fh
db  4Fh ; O
db  8Dh
db 0C7h
db 0C7h
db  15h
db  9Fh
db  47h ; G
db 0F7h
db  4Ch ; L
db 0CEh
db  53h ; S
db  31h ; 1
db  0Bh
db  6Ah ; j
db 0B7h
db 0B0h
db 0CBh
db  56h ; V
db  3Fh ; ?
db  38h ; 8
db 0F7h
db  3Bh ; ;
db  71h ; q
db  58h ; X
db  8Dh
db 0A4h
db  4Eh ; N
db  25h ; %
db  65h ; e
db  69h ; i
db 0B7h
db 0B8h
db  8Fh
db  8Dh
db 0C7h
db 0C7h
db    8
db 0E0h
db  2Dh ; -
db 0F4h
db  4Ch ; L
db  4Dh ; M
db 0F4h
db  8Ah
db  61h ; a
db  57h ; W
db  8Eh
db  1Fh
db  4Eh ; N
db  8Dh
db 0C7h
db  67h ; g
db    6
db  0Fh
db  8Dh
db  81h
db  36h ; 6
db  8Bh
db  43h ; C
db  45h ; E
db  69h ; i
db  8Ah
db  9Ah
db  87h
db  90h
db  7Bh ; {
db  0Ah
db 0C6h
db  70h ; p
db  7Ch ; |
db 0BCh
db  6Eh ; n
db  44h ; D
db  3Dh ; =
db  46h ; F
db  44h ; D
db 0BDh
db  6Ch ; l
db 0D1h
db  38h ; 8
db 0B5h
db  5Dh ; ]
db 0C0h
db 0EBh
db 0D2h
db 0E7h
db  8Dh
db 0F7h
db  36h ; 6
db  83h
db  43h ; C
db  45h ; E
db  69h ; i
db  8Bh
db  29h ; )
db  87h
db 0D0h
db  75h ; u
db  2Eh ; .
db 0E6h
db  17h
db 0B0h
db  4Ch ; L
db 0F7h
db  4Ch ; L
db  4Ch ; L
db  92h
db  11h
db  91h
db 0E2h
db  32h ; 2
db  57h ; W
db  93h
db  8Bh
db 0C7h
db 0D7h
db 0D4h
db  3Ah ; :
db  57h ; W
db  36h ; 6
db  88h
db 0B9h
db  2Ch ; ,
db  49h ; I
db  69h ; i
db  69h ; i
db 0C0h
db  90h
db  4Ch ; L
db  5Bh ; [
db 0BEh
db  39h ; 9
db  57h ; W
db 0F7h
db 0E9h
db  51h ; Q
db 0E8h
db  0Dh
db 0F9h
db  4Ah ; J
db  26h ; &
db  69h ; i
db  76h ; v
db  58h ; X
db 0CAh
db 0FFh
db 0E0h
db 0C7h
db    8
db  5Eh ; ^
db 0E4h
db  5Bh ; [
db 0E2h
db  16h
db  95h
db  4Eh ; N
db 0AEh
db  96h
db  48h ; H
db  47h ; G
db 0F2h
db 0E4h
db 0CCh
db 0FEh
db 0E8h
db    8
db 0B3h
db 0E0h
db  5Ch ; \
db  42h ; B
db 0BAh
db 0BBh
db  46h ; F
db  99h
db  89h
db 0EBh
db 0E7h
db 0BBh
db 0C1h
db 0C7h
db    8
db  36h ; 6
db  88h
db  85h
db  97h
db 0B5h
db  45h ; E
db  44h ; D
db 0BDh
db  62h ; b
db  84h
db 0FEh
db  7Dh ; }
db  98h
db 0ACh
db 0A4h
db    8
db    8
db 0B3h
db 0E3h
db 0A5h
db 0CEh
db  57h ; W
db  71h ; q
db 0FBh
db  6Ah ; j
db 0B7h
db 0B0h
db 0CBh
db  90h
db  3Fh ; ?
db  38h ; 8
db 0F7h
db  83h
db  4Bh ; K
db  36h ; 6
db  38h ; 8
db 0A9h
db 0CCh
db  49h ; I
db  69h ; i
db  69h ; i
db 0F6h
db  43h ; C
db 0D2h
db  81h
db 0F6h
db 0C7h
db  68h ; h
db    8
db  5Bh ; [
db 0BDh
db  40h ; @
db  4Ch ; L
db 0BAh
db 0BFh
db  45h ; E
db 0F4h
db 0AFh
db 0AFh
db  8Bh
db  8Ah
db  17h
db 0B6h
db  97h
db 0F7h
db  4Ch ; L
db  3Bh ; ;
db  71h ; q
db  13h
db  39h ; 9
db  6Bh ; k
db  7Fh ; 
db  71h ; q
db 0B4h
db 0B7h
db  8Bh
db  88h
db    6
db 0C7h
db  68h ; h
db    8
db 0B3h
db 0E0h
db  0Fh
db  44h ; D
db 0BAh
db 0B8h
db  0Ah
db  5Ah ; Z
db  75h ; u
db  46h ; F
db  42h ; B
db 0E1h
db 0F6h
db 0C7h
db  68h ; h
db    8
db 0C6h
db  0Fh
db  8Dh
db 0A0h
db  4Eh ; N
db  35h ; 5
db  65h ; e
db  69h ; i
db 0B7h
db 0AEh
db 0E4h
db  47h ; G
db 0C1h
db  18h
db    4
db    3
db  73h ; s
db  7Ch ; |
db 0BCh
db  7Eh ; ~
db 0ABh
db  59h ; Y
db  6Eh ; n
db  69h ; i
db 0C2h
db  9Ch
db 0BBh
db  28h ; (
db    8
db 0BAh
db  68h ; h
db  6Eh ; n
db  62h ; b
db 0E7h
db  8Dh
db  4Ch ; L
db  4Eh ; N
db  25h ; %
db  65h ; e
db  69h ; i
db 0B7h
db 0A3h
db  7Ch ; |
db  47h ; G
db 0D1h
db  58h ; X
db 0E6h
db    0
db  4Ah ; J
db 0B0h
db  4Ch ; L
db  4Ch ; L
db 0BAh
db 0BAh
db 0C6h
db  63h ; c
db  89h
db 0EBh
db 0A7h
db 0B3h
db 0C1h
db 0C7h
db    8
db  3Ah ; :
db  57h ; W
db 0F0h
db  5Bh ; [
db  78h ; x
db 0A7h
db 0BAh
db  96h
db  33h ; 3
db 0EEh
db  6Dh ; m
db  71h ; q
db  36h ; 6
db  41h ; A
db 0DDh
db  48h ; H
db 0F6h
db    0
db 0E0h
db  50h ; P
db  97h
db  45h ; E
db  44h ; D
db  31h ; 1
db  3Eh ; >
db 0E4h
db  3Dh ; =
db  19h
db  5Ah ; Z
db  10h
db  39h ; 9
db  17h
db 0F7h
db  8Dh
db    7
db    4
db 0B8h
db 0DAh
db  41h ; A
db  69h ; i
db  69h ; i
db 0F7h
db 0F7h
db  34h ; 4
db  7Ah ; z
db  38h ; 8
db 0B8h
db 0F9h
db 0F8h
db  8Dh
db  83h
db  3Eh ; >
db  83h
db  43h ; C
db  45h ; E
db  69h ; i
db  57h ; W
db  8Ch
db 0DEh
db 0AFh
db  8Dh
db 0C7h
db  67h ; g
db    6
db    3
db  80h
db 0C1h
db  8Dh
db 0A0h
db  2Eh ; .
db  25h ; %
db  65h ; e
db  69h ; i
db 0B7h
db 0EFh
db  3Ch ; <
db 0F6h
db 0D5h
db  56h ; V
db 0ACh
db  0Bh
db 0B3h
db    8
db  5Bh ; [
db 0D8h
db 0B3h
db 0BAh
db  96h
db 0E2h
db  4Fh ; O
db  43h ; C
db 0D2h
db  91h
db  4Eh ; N
db 0C7h
db  68h ; h
db    8
db 0F2h
db  36h ; 6
db  38h ; 8
db 0B9h
db  74h ; t
db  49h ; I
db  69h ; i
db  69h ; i
db  5Fh ; _
db  58h ; X
db  1Dh
db  74h ; t
db  38h ; 8
db 0A0h
db 0D9h
db  95h
db 0ABh
db  0Bh
db 0B3h
db 0B2h
db  95h
db  96h
db  83h
db  96h
db  48h ; H
db  29h ; )
db  9Ah
db  2Bh ; +
db 0BBh
db  76h ; v
db  78h ; x
db  10h
db 0B0h
db    8
db 0B3h
db 0B0h
db  84h
db  49h ; I
db  69h ; i
db  69h ; i
db 0B7h
db 0F0h
db 0ACh
db  7Eh ; ~
db  38h ; 8
db 0D8h
db 0E3h
db  3Bh ; ;
db  71h ; q
db  36h ; 6
db  8Ah
db 0D9h
db  74h ; t
db  49h ; I
db  69h ; i
db  69h ; i
db 0C2h
db  8Eh
db  7Bh ; {
db  98h
db 0CCh
db 0A4h
db  88h
db    8
db 0B3h
db 0EBh
db  9Eh
db  7Fh ; 
db  43h ; C
db 0A4h
db 0F2h
db  62h ; b
db  77h ; w
db  17h
db 0F0h
db  46h ; F
db  29h ; )
db 0FFh
db 0E8h
db    8
db 0C6h
db  0Dh
db 0D5h
db  10h
db  8Ah
db 0E9h
db  66h ; f
db  0Fh
db  66h ; f
db 0CEh
db  7Ch ; |
db  74h ; t
db 0CCh
db 0A4h
db    8
db    8
db 0B3h
db 0EAh
db  2Dh ; -
db  7Fh ; 
db  53h ; S
db 0B8h
db 0BAh
db  61h ; a
db  4Eh ; N
db  70h ; p
db  76h ; v
db  74h ; t
db  38h ; 8
db 0B8h
db 0F5h
db    0
db  8Dh
db  83h
db  36h ; 6
db  8Bh
db  43h ; C
db  45h ; E
db  69h ; i
db  91h
db  5Fh ; _
db 0C8h
db  0Fh
db  74h ; t
db  38h ; 8
db 0ECh
db  43h ; C
db  53h ; S
db 0ECh
db  56h ; V
db  70h ; p
db 0BBh
db  47h ; G
db  9Bh
db 0A7h
db  81h
db 0BAh
db  27h ; '
db  8Bh
db  8Bh
db  6Bh ; k
db 0ADh
db 0E2h
db  59h ; Y
db 0E1h
db 0E0h
db 0A6h
db  52h ; R
db 0BAh
db 0B9h
db  92h
db  66h ; f
db    0
db  99h
db 0F7h
db  89h
db 0C7h
db 0A7h
db  18h
db 0C8h
db 0B1h
db 0E0h
db  8Ch
db  5Ch ; \
db 0BAh
db 0BBh
db  46h ; F
db  99h
db  89h
db 0EBh
db 0E7h
db 0BBh
db 0C1h
db 0C7h
db    8
db  36h ; 6
db  88h
db  85h
db  97h
db 0B5h
db  45h ; E
db  44h ; D
db 0BDh
db  62h ; b
db  84h
db 0FEh
db  7Dh ; }
db  98h
db 0ACh
db 0A4h
db    8
db    8
db 0B3h
db 0E3h
db 0A5h
db 0CEh
db  57h ; W
db  71h ; q
db 0FBh
db  6Ah ; j
db 0B7h
db 0B0h
db 0CBh
db  30h ; 0
db  33h ; 3
db  38h ; 8
db 0F7h
db  83h
db  4Bh ; K
db  36h ; 6
db  38h ; 8
db 0A9h
db 0CCh
db  49h ; I
db  69h ; i
db  69h ; i
db 0F6h
db  43h ; C
db 0D2h
db  81h
db 0F6h
db 0C7h
db  68h ; h
db    8
db  5Bh ; [
db  0Dh
db  41h ; A
db  4Ch ; L
db 0BAh
db 0BFh
db  45h ; E
db 0F4h
db 0AFh
db 0AFh
db  8Bh
db  8Ah
db  17h
db 0FCh
db  97h
db 0F7h
db  4Ch ; L
db  3Bh ; ;
db  71h ; q
db  13h
db  39h ; 9
db  6Bh ; k
db  7Fh ; 
db  71h ; q
db 0B4h
db 0B7h
db  8Bh
db  88h
db    6
db 0C7h
db  68h ; h
db    8
db 0B3h
db 0E0h
db 0BFh
db  46h ; F
db 0BAh
db 0B8h
db  0Ah
db  5Ah ; Z
db  75h ; u
db  46h ; F
db  42h ; B
db 0E1h
db 0F6h
db 0C7h
db  68h ; h
db    8
db 0C6h
db  0Fh
db  8Dh
db 0A0h
db  4Eh ; N
db  35h ; 5
db  65h ; e
db  69h ; i
db 0B7h
db 0AEh
db 0E4h
db  47h ; G
db 0C1h
db  18h
db    4
db    3
db  73h ; s
db  7Ch ; |
db 0BCh
db  7Eh ; ~
db 0ABh
db  59h ; Y
db  6Eh ; n
db  69h ; i
db 0C2h
db  9Ch
db 0BBh
db  28h ; (
db    8
db 0BAh
db  68h ; h
db  6Eh ; n
db  62h ; b
db 0E7h
db  8Dh
db  4Ch ; L
db  4Eh ; N
db  25h ; %
db  65h ; e
db  69h ; i
db 0B7h
db 0A3h
db  7Ch ; |
db  47h ; G
db 0D1h
db  58h ; X
db 0E6h
db    0
db  4Ah ; J
db 0B0h
db  4Ch ; L
db  4Ch ; L
db 0BAh
db 0BAh
db 0C6h
db  61h ; a
db  89h
db 0EBh
db 0A7h
db 0B3h
db 0C1h
db 0C7h
db    8
db 0F0h
db  5Bh ; [
db 0BFh
db  5Ch ; \
db  4Ch ; L
db 0BAh
db  2Ch ; ,
db  0Ch
db  32h ; 2
db 0E8h
db  41h ; A
db  91h
unk_1001E4B4 db  2Dh ; -
db 0A1h
db  9Ch
db  79h ; y
db 0D0h
db  8Dh
db  82h
db  37h ; 7
db  88h
db  39h ; 9
db  41h ; A
db  69h ; i
db  69h ; i
db  37h ; 7
db 0AFh
db  95h
db 0F6h
db 0D3h
db  90h
db 0B3h
db    9
db 0B3h
db    8
db  33h ; 3
db  7Dh ; }
db  4Ah ; J
db  4Eh ; N
db  15h
db  5Bh ; [
db  48h ; H
db 0B0h
db  57h ; W
db  85h
db  3Fh ; ?
db 0C7h
db  78h ; x
db 0E3h
db 0B4h
db  36h ; 6
db  81h
db 0BBh
db  7Eh ; ~
db    9
db  6Eh ; n
db  69h ; i
db 0B7h
db  69h ; i
db  91h
db  6Bh ; k
db 0C5h
db  2Bh ; +
db  90h
db 0E0h
db 0B6h
db  19h
db 0B3h
db 0B3h
db 0E3h
db    0
db  20h
db  3Fh ; ?
db 0E0h
db  43h ; C
db  92h
db 0F0h
db  82h
db 0C7h
db 0E8h
db    8
db 0B2h
db  7Ch ; |
db 0BDh
db 0CEh
db  43h ; C
db 0B0h
db  0Fh
db  6Fh ; o
db 0B7h
db 0B7h
db  83h
db  94h
db 0CDh
db 0D6h
db 0A8h
db    8
db 0B3h
db  36h ; 6
db  30h ; 0
db 0C9h
db  0Ch
db  49h ; I
db  69h ; i
db  69h ; i
db  48h ; H
db  17h
db  20h
db 0F6h
db 0D1h
db  54h ; T
db 0ACh
db  0Bh
db 0B3h
db    8
db  8Dh
db 0B4h
db  7Fh ; 
db  5Dh ; ]
db  77h ; w
db  69h ; i
db 0B7h
db 0EEh
db  51h ; Q
db  0Dh
db  28h ; (
db 0A7h
db  55h ; U
db  40h ; @
db  8Dh
db  8Bh
db  0Eh
db    1
db  49h ; I
db  45h ; E
db  69h ; i
db  68h ; h
db 0C3h
db 0C5h
db  0Bh
db 0F6h
db 0D1h
db 0D7h
db 0B4h
db  0Fh
db 0B3h
db    8
db  5Bh ; [
db 0F2h
db  6Ch ; l
db 0BAh
db  96h
db  31h ; 1
db  34h ; 4
db  7Eh ; ~
db  6Ch ; l
db  67h ; g
db 0CDh
db  50h ; P
db  2Fh ; /
db    8
db 0B3h
db    8
db  8Dh
db 0A0h
db  5Eh ; ^
db  5Dh ; ]
db  77h ; w
db  69h ; i
db 0B7h
db  43h ; C
db  92h
db 0F1h
db  74h ; t
db 0C7h
db 0C8h
db    8
db 0B2h
db  7Dh ; }
db 0B4h
db  62h ; b
db  2Ah ; *
db 0A6h
db  97h
db  96h
db  5Ch ; \
db  98h
db 0CBh
db  2Eh ; .
db  80h
db  38h ; 8
db 0F7h
db  7Ah ; z
db  90h
db  36h ; 6
db  3Ah ; :
db 0B9h
db  0Ch
db  49h ; I
db  69h ; i
db  69h ; i
db  89h
db 0EAh
db  27h ; '
db 0DFh
db 0C8h
db 0C7h
db    8
db  8Bh
db  75h ; u
db  22h ; "
db 0D5h
db 0E5h
db  49h ; I
db  4Ah ; J
db  73h ; s
db  6Dh ; m
db  66h ; f
db 0B7h
db  94h
db  6Bh ; k
db  0Ah
db 0D2h
db 0B7h
db 0E1h
db  70h ; p
db    8
db 0B3h
db 0B2h
db  35h ; 5
db 0BAh
db  96h
db  96h
db  48h ; H
db 0FAh
db  44h ; D
db  8Bh
db 0C7h
db 0C7h
db  15h
db 0AAh
db  46h ; F
db 0F7h
db  4Ch ; L
db 0A4h
db 0A4h
db 0E4h
db 0EEh
db  87h
db  48h ; H
db  4Eh ; N
db  7Ch ; |
db  9Ch
db 0DCh
db 0A4h
db    8
db    8
db 0B3h
db  36h ; 6
db  88h
db 0A9h
db  0Ch
db  49h ; I
db  69h ; i
db  69h ; i
db 0C2h
db 0EEh
db  13h
db  19h
db 0BAh
db  76h ; v
db  3Eh ; >
db  10h
db 0B0h
db    8
db 0B3h
db  65h ; e
db  68h ; h
db 0BFh
db  4Dh ; M
db 0E4h
db  93h
db 0AFh
db  8Bh
db  8Ah
db  17h
db 0D0h
db  77h ; w
db 0F7h
db  4Ch ; L
db  83h
db  4Bh ; K
db 0CEh
db  53h ; S
db  70h ; p
db  7Bh ; {
db  6Ah ; j
db 0B7h
db 0B5h
db  83h
db 0F6h
db 0D1h
db 0D7h
db 0ABh
db  0Bh
db 0B3h
db    8
db  5Bh ; [
db  74h ; t
db 0A5h
db 0BAh
db  96h
db  57h ; W
db  3Ch ; <
db  5Fh ; _
db  4Fh ; O
db  8Dh
db 0C7h
db 0C7h
db  15h
db  32h ; 2
db  4Bh ; K
db 0F7h
db  4Ch ; L
db 0D4h
db 0C1h
db    5
db  90h
db 0E2h
db  32h ; 2
db  77h ; w
db  93h
db  8Bh
db 0C7h
db 0D7h
db  34h ; 4
db  0Bh
db 0B3h
db    8
db 0B3h
db  63h ; c
db  90h
db 0A6h
db  96h
db  96h
db 0EFh
db  29h ; )
db  9Ah
db 0F7h
db 0B5h
db 0D1h
db 0ABh
db  0Bh
db 0B3h
db    8
db 0C6h
db 0BDh
db  39h ; 9
db  63h ; c
db  7Fh ; 
db  75h ; u
db 0B4h
db 0B7h
db  8Bh
db  4Dh ; M
db  8Ch
db 0ABh
db 0C8h
db 0F0h
db 0D5h
db    3
db  73h ; s
db  5Bh ; [
db  5Bh ; [
db 0DEh
db 0B4h
db 0AEh
db 0B6h
db 0B4h
db  23h ; #
db  81h
db  0Bh
db  3Dh ; =
db  34h ; 4
db 0E3h
db 0B0h
db  6Eh ; n
db  62h ; b
db  6Dh ; m
db  38h ; 8
db 0BBh
db  7Eh ; ~
db  71h ; q
db 0B4h
db 0B7h
db  8Bh
db  4Eh ; N
db 0FAh
db 0ABh
db 0C9h
db 0F7h
db 0C6h
db    2
db  8Dh
db 0A4h
db  4Eh ; N
db  35h ; 5
db  65h ; e
db  69h ; i
db 0B7h
db  70h ; p
db 0D4h
db  86h
db  35h ; 5
db  30h ; 0
db  17h
db 0F7h
db  4Ch ; L
db 0F7h
db  5Bh ; [
db  98h
db  99h
db 0BAh
db  96h
db  36h ; 6
db 0E9h
db  65h ; e
db  41h ; A
db  3Ch ; <
db  41h ; A
db 0D5h
db  1Ah
unk_1001E658 db  15h
db 0BDh
db  32h ; 2
db 0A2h
db  9Ch
db  55h ; U
db    9
db  2Ah ; *
db  98h
db 0D9h
db  9Fh
db  8Fh
db  84h
db 0E5h
db 0A1h
db  9Bh
db    0
db  3Ch ; <
db 0C5h
db 0A9h
db 0BBh
db  71h ; q
db 0D7h
db  26h ; &
db 0AFh
db 0B9h
db  68h ; h
db 0B0h
db  4Ch ; L
db 0D0h
db  25h ; %
db  35h ; 5
db  0Ah
db 0B2h
db  98h
db 0E3h
db 0ADh
db  71h ; q
db 0F5h
db 0D2h
db 0E1h
db  3Dh ; =
db 0C0h
db 0F3h
db 0ADh
db 0F3h
db  28h ; (
db  6Ah ; j
db  0Eh
db 0FBh
db  16h
db  69h ; i
db  8Fh
db  74h ; t
db  6Dh ; m
db  16h
db 0D7h
db  35h ; 5
db  18h
db 0E5h
db 0BDh
db 0F3h
db 0BEh
db  71h ; q
db  36h ; 6
db  4Ah ; J
db  14h
db  8Eh
db 0C7h
db  40h ; @
db 0B9h
db  2Ah ; *
db  78h ; x
db 0DEh
db  74h ; t
db 0B3h
db 0C5h
db  98h
db 0A7h
db 0EAh
db  1Dh
db 0BCh
db  44h ; D
db  6Ch ; l
db 0F5h
db  4Fh ; O
db  1Ch
db  60h ; `
db 0FBh
db  66h ; f
db  4Fh ; O
db 0B4h
db  0Dh
db  28h ; (
db  18h
db 0F5h
db 0EAh
db 0E7h
db    9
db  9Dh
db  59h ; Y
db  0Dh
db  9Bh
db 0F9h
db  50h ; P
db 0BBh
db    0
db 0EAh
db    7
db 0FDh
db 0C2h
db 0DBh
db 0A8h
db 0A0h
db  31h ; 1
db  5Fh ; _
db 0DDh
db 0BDh
db 0CDh
db  29h ; )
db  42h ; B
db  24h ; $
db  0Bh
db 0D0h
db  3Bh ; ;
db  64h ; d
db  34h ; 4
db  72h ; r
db  27h ; '
db  3Fh ; ?
db  89h
db  5Dh ; ]
db    1
db  0Dh
db  1Bh
db  3Fh ; ?
db  6Dh ; m
db 0BFh
db  90h
db 0E9h
db  0Dh
db  3Fh ; ?
db  65h ; e
db  6Ah ; j
db  22h ; "
db 0EEh
db  11h
db 0D4h
db  80h
db 0D2h
db  7Ah ; z
db  8Eh
db  62h ; b
db  4Fh ; O
db  3Fh ; ?
db  16h
db 0ABh
db  95h
db 0BAh
db  41h ; A
db  0Bh
db  87h
db 0EFh
db  47h ; G
db  2Bh ; +
db  71h ; q
db 0F4h
db 0F9h
db  2Fh ; /
db  86h
db  4Ch ; L
db 0C5h
db  15h
db 0F5h
db 0E1h
db  0Ah
db 0D0h
db 0DAh
db  64h ; d
db  4Eh ; N
db  99h
db  75h ; u
db  9Ah
db  37h ; 7
db  22h ; "
db  3Bh ; ;
db  58h ; X
db 0FFh
db  3Ah ; :
db    4
db  41h ; A
db    4
db  47h ; G
db  8Fh
db 0B1h
db 0BDh
db    8
db 0A7h
db 0BAh
db  81h
db 0B8h
db  25h ; %
db  34h ; 4
db 0B1h
db  49h ; I
db  8Fh
db  48h ; H
db  7Ah ; z
db 0DAh
db 0BEh
db  62h ; b
db  5Fh ; _
db  97h
db  6Bh ; k
db  5Ah ; Z
db  3Eh ; >
db  34h ; 4
db  86h
db  9Ch
db 0C4h
db  65h ; e
db 0F5h
db 0EEh
db  0Ah
db 0ADh
db  57h ; W
db  73h ; s
db 0DCh
db 0E5h
db  78h ; x
db  96h
db 0D2h
db 0F7h
db  47h ; G
db 0FFh
db  27h ; '
db  7Ah ; z
db  0Ah
db 0CBh
db 0DBh
db  2Ah ; *
db 0A0h
db  13h
db  9Ch
db  69h ; i
db  75h ; u
db    3
db  8Bh
unk_1001E750 db 0E8h
db  25h ; %
db  30h ; 0
db 0E8h
db  7Dh ; }
db  55h ; U
db 0A6h
db  20h
db  33h ; 3
db 0EBh
db 0B4h
db 0DCh
db  36h ; 6
db  34h ; 4
db  29h ; )
db  2Ch ; ,
db  18h
db 0B9h
db  20h
db  9Ch
db 0F0h
db 0F4h
db 0DCh
db 0A1h
db  7Bh ; {
db 0BCh
db  82h
db  5Eh ; ^
db 0A2h
db  7Ah ; z
db  49h ; I
db  2Eh ; .
db  10h
db 0B8h
db  34h ; 4
db 0F6h
db 0E7h
db 0BBh
db 0EAh
db  6Ah ; j
db  75h ; u
db  43h ; C
db 0EFh
db  1Bh
db 0D0h
db 0FEh
db 0E3h
db  36h ; 6
db 0EFh
db 0B8h
db    0
db 0EFh
db 0ADh
db 0F2h
db  89h
db  1Ah
db  74h ; t
db  80h
db 0ECh
db  5Ah ; Z
db 0EFh
db    9
db  95h
db  2Ch ; ,
db 0E0h
db  86h
db  5Dh ; ]
db    3
db  0Fh
db 0FEh
db 0E8h
db  0Ah
db  84h
db 0C9h
db 0ADh
db 0B7h
db  30h ; 0
db  1Eh
db  4Ah ; J
db 0D3h
db  13h
db 0ABh
db    1
db  1Ch
db 0DAh
db 0F9h
db  0Bh
db  0Ah
db  9Dh
db 0BCh
db  4Ah ; J
db  6Eh ; n
db 0D8h
db  8Fh
db 0A8h
db  4Ch ; L
db  18h
db  25h ; %
db 0CFh
db  13h
db  23h ; #
db  8Fh
db  4Eh ; N
db 0FAh
db 0B1h
db 0BFh
db 0BAh
db  5Fh ; _
db 0EDh
db  70h ; p
db  75h ; u
db  2Fh ; /
db 0F6h
db  33h ; 3
db 0EDh
db 0DBh
db 0E3h
db 0F2h
db  95h
db  1Ah
db  6Ah ; j
db  96h
db 0D4h
db  74h ; t
db 0D2h
db  76h ; v
db    9
db  3Ch ; <
db  11h
db  58h ; X
db  5Fh ; _
db  2Eh ; .
db  30h ; 0
db 0E0h
db  36h ; 6
db 0EDh
db  5Ah ; Z
db  39h ; 9
db  4Ch ; L
db  58h ; X
db 0CDh
db  70h ; p
db  3Ah ; :
db 0C9h
db 0D9h
db 0CCh
db    1
db  1Dh
db  0Ah
db  89h
db    3
db 0CAh
db 0BDh
db 0BCh
db 0FEh
db  2Bh ; +
db  30h ; 0
db  80h
db  70h ; p
db 0E8h
db 0D1h
db 0B8h
db 0C1h
db  1Dh
db  92h
db 0F9h
db  96h
db  8Ah
db 0B5h
db 0BCh
db  25h ; %
db 0A0h
db 0D2h
db  8Fh
db  0Fh
db  23h ; #
db  15h
db 0E1h
db  30h ; 0
db 0EDh
db  2Dh ; -
db 0F0h
db  1Fh
db 0AAh
db  25h ; %
db  16h
db  64h ; d
db 0A0h
db 0E2h
db 0A7h
db  82h
db  8Fh
db 0CFh
db  19h
db 0BFh
db  12h
db 0EFh
db  65h ; e
db 0F0h
db  2Ah ; *
db 0C5h
db  82h
db  63h ; c
db 0CAh
db  35h ; 5
db  76h ; v
db 0B5h
db  2Fh ; /
db  50h ; P
db 0A1h
db  1Fh
db  13h
db 0B2h
db 0E5h
db  21h ; !
db  0Dh
db  56h ; V
db  31h ; 1
db 0FAh
db  5Ch ; \
db  7Dh ; }
db  70h ; p
db 0ADh
db 0C2h
db  3Dh ; =
db  9Ch
db 0D8h
db 0ECh
db  5Dh ; ]
db  18h
db  9Eh
db  57h ; W
db 0F4h
db  82h
db  73h ; s
db 0D2h
db  25h ; %
db  76h ; v
db  75h ; u
db  2Eh ; .
db 0B6h
db  33h ; 3
db  28h ; (
db  28h ; (
db  6Bh ; k
db 0F2h
db 0FDh
db  17h
db 0F6h
db 0BFh
db 0F2h
db  5Fh ; _
db  42h ; B
db  7Ah ; z
db  25h ; %
db  2Ah ; *
db  80h
db 0B8h
db  1Eh
db 0ECh
db  62h ; b
db 0F8h
db 0DCh
db  8Ah
db 0E5h
db 0BCh
db 0E2h
db 0FBh
db  9Ah
db  8Fh
db 0CAh
db  8Dh
db 0B9h
db  4Eh ; N
db  7Fh ; 
db  1Ch
db  9Ah
db    0
db  9Ch
db 0DBh
db  70h ; p
db 0F8h
db    1
db  5Eh ; ^
db 0BDh
db  0Fh
db 0FBh
db  38h ; 8
db  88h
db 0BBh
db 0C0h
db 0E3h
db  4Ch ; L
db  64h ; d
db    7
db 0B5h
db  0Ah
db  82h
db  91h
db 0C3h
db  9Dh
db  75h ; u
db 0F5h
db  2Eh ; .
db  80h
db    6
db 0AFh
db  1Ch
db  53h ; S
db  96h
db 0E1h
db  40h ; @
db  33h ; 3
db  28h ; (
db  97h
db  46h ; F
db  9Bh
db  73h ; s
db  97h
db  2Ah ; *
db  80h
db 0A4h
db  40h ; @
db 0E3h
db 0BCh
db  21h ; !
db  42h ; B
db  34h ; 4
db 0FAh
db  5Ch ; \
db  72h ; r
db  6Dh ; m
db    9
db  0Eh
db  53h ; S
db 0FAh
db  60h ; `
db 0A4h
db  80h
db 0E2h
db  27h ; '
db  7Bh ; {
db 0E0h
db 0DBh
db  98h
db 0BBh
db  21h ; !
db  5Eh ; ^
db 0FCh
db  71h ; q
db 0D5h
db  2Eh ; .
db  70h ; p
db 0A7h
db 0C7h
db 0A2h
db 0BAh
db  1Ah
db  79h ; y
db 0F5h
db  2Bh ; +
db  90h
db 0AFh
db  42h ; B
db 0EBh
db  73h ; s
db  74h ; t
db  69h ; i
db  76h ; v
db  2Ch ; ,
db 0E8h
db  26h ; &
db 0EBh
db 0F1h
db  85h
db  17h
db  77h ; w
db  56h ; V
db 0CDh
db 0A1h
db  6Bh ; k
db  15h
db  7Ch ; |
db 0BAh
db  7Eh ; ~
db  2Eh ; .
db 0E8h
db  67h ; g
db 0FBh
db 0F1h
db  44h ; D
db    6
db  1Bh
db  2Ah ; *
db 0D7h
db  4Ch ; L
db 0CBh
db  73h ; s
db  36h ; 6
db  81h
db  13h
db  4Ah ; J
db  7Fh ; 
db  1Eh
db  70h ; p
db 0E7h
db  13h
db 0A9h
db  3Eh ; >
db 0A3h
db  42h ; B
db  38h ; 8
db  3Ah ; :
db  83h
db  4Dh ; M
db  0Ch
db  90h
db 0D3h
db 0BBh
db 0D1h
db 0F2h
db  7Eh ; ~
db  82h
db  2Ah ; *
db  40h ; @
db 0A6h
db  3Ch ; <
db  8Fh
db 0E2h
db 0A4h
db 0F8h
db 0B9h
db 0F9h
db  48h ; H
db 0F7h
db  18h
db  27h ; '
db 0C0h
db  81h
db  6Ah ; j
db  4Dh ; M
db  41h ; A
db  50h ; P
db 0B5h
db  16h
db 0A1h
db 0FAh
db 0DCh
db 0DFh
db  58h ; X
db  77h ; w
db  5Ah ; Z
db  93h
db  3Ch ; <
db  48h ; H
db 0EDh
db 0CEh
db  26h ; &
db  72h ; r
db  5Dh ; ]
db  0Dh
db  73h ; s
db 0B2h
db 0A3h
db  3Bh ; ;
db 0A7h
db  80h
db 0E0h
db  9Dh
db  74h ; t
db  71h ; q
db 0B5h
db 0A2h
db  90h
db  98h
db  60h ; `
db  6Ah ; j
db  48h ; H
db  35h ; 5
db  2Ch ; ,
db  30h ; 0
db 0A7h
db  87h
db  9Fh
db 0B4h
db  0Eh
db 0F1h
db 0ECh
db 0AFh
db  9Dh
db 0F1h
db 0DBh
db  5Dh ; ]
db  75h ; u
db  75h ; u
db  20h
db  6Eh ; n
db  99h
db  4Ch ; L
db 0CCh
db  4Dh ; M
db 0F7h
db  8Dh
db  0Ah
db  0Bh
db  9Dh
db 0FBh
db 0E3h
db  79h ; y
db  75h ; u
db  15h
db  20h
db 0E8h
db  7Dh ; }
db  27h ; '
db  1Fh
db  82h
db  20h
db 0EDh
db  77h ; w
db  9Ah
db  5Ch ; \
db 0B9h
db  9Eh
db  9Bh
db  7Eh ; ~
db 0D3h
db 0C3h
db 0E7h
db  58h ; X
db  7Fh ; 
db  18h
db  33h ; 3
db  4Ch ; L
db 0A0h
db  41h ; A
db  26h ; &
db  60h ; `
db  1Ah
db  5Eh ; ^
db  8Dh
db 0F4h
unk_1001E96E db  74h ; t
db 0DFh
db  1Ch
db 0A7h
db 0C2h
db  6Fh ; o
db  39h ; 9
db  5Eh ; ^
db 0EDh
db 0DAh
db 0C8h
db    1
db  9Dh
db  5Eh ; ^
db 0ADh
db  70h ; p
db  25h ; %
db  65h ; e
db 0D6h
db  24h ; $
db 0EAh
db  2Ah ; *
db 0A1h
db 0F0h
db 0A9h
db  0Ah
db 0F8h
db  96h
db  7Ah ; z
db  6Ch ; l
db 0F4h
db  8Dh
db  6Ah ; j
db  8Fh
db 0F8h
db  99h
db  1Ch
db 0CBh
db  7Dh ; }
db 0FFh
db  88h
db  0Ah
db  6Dh ; m
db 0E0h
db  3Ah ; :
db 0A1h
db  73h ; s
db  0Fh
db  9Fh
db  36h ; 6
db  3Bh ; ;
db 0A6h
db  80h
db 0E6h
db  1Dh
db    3
db  64h ; d
db 0F5h
db  62h ; b
db 0D1h
db 0F5h
db  60h ; `
db 0EAh
db  19h
db 0FDh
db  3Dh ; =
db 0F0h
db 0A7h
db 0DEh
db 0D2h
db  88h
db  82h
db  96h
db  6Ah ; j
db  95h
db 0A3h
db  49h ; I
db  38h ; 8
db 0A6h
db 0A5h
db  7Ah ; z
db  82h
db  88h
db  4Dh ; M
db 0FFh
db  19h
db  90h
db 0E6h
db  84h
db 0ADh
db 0AEh
db 0A3h
db 0B2h
db  60h ; `
db 0CEh
db  69h ; i
db  75h ; u
db  2Fh ; /
db 0C0h
db 0A7h
db  88h
db 0C3h
db 0FDh
db 0F0h
db  54h ; T
db  0Dh
db  2Eh ; .
db  26h ; &
db 0D2h
db  5Dh ; ]
db 0CDh
db  72h ; r
db  94h
db 0A0h
db  34h ; 4
db  58h ; X
db  79h ; y
db  12h
db  1Ah
db 0CBh
db 0F0h
db  0Ah
db 0BDh
db 0A3h
db  2Ah ; *
db  69h ; i
db 0D4h
db  8Dh
db  29h ; )
db 0ECh
db  12h
db 0C1h
db  99h
db  10h
db 0E2h
db 0FBh
db 0F1h
db  0Ah
db 0B5h
db 0A3h
db 0BDh
db 0BCh
db  98h
db 0A3h
db  7Ah ; z
db  8Ah
db  57h ; W
db  58h ; X
db 0FAh
db  37h ; 7
db  9Eh
db  76h ; v
db  9Eh
db  4Ah ; J
db  2Dh ; -
db  6Ch ; l
unk_1001EA0A db  3Ah ; :
db 0BDh
db  0Bh
db  72h ; r
db  94h
db  67h ; g
db 0F2h
db 0F0h
db 0B4h
db 0FCh
db  46h ; F
db  81h
db  90h
db 0CAh
db 0C5h
db 0A2h
db  9Fh
db  54h ; T
db  70h ; p
db  72h ; r
db  42h ; B
db 0CDh
db 0BCh
db 0A7h
db  80h
db 0FCh
db 0A7h
db  60h ; `
db 0DEh
db  70h ; p
db 0A9h
db 0ACh
db  61h ; a
db 0A4h
db  7Fh ; 
db  9Ah
db  7Dh ; }
db 0DAh
db  30h ; 0
db  1Ah
db  18h
db 0C3h
db  5Dh ; ]
db 0F0h
db  3Eh ; >
db  64h ; d
db 0E0h
db  9Dh
db  79h ; y
db 0E3h
db  29h ; )
db  7Dh ; }
db  75h ; u
db  22h ; "
db  89h
db 0D3h
db  89h
db  14h
db  6Ah ; j
db  8Bh
db  56h ; V
db  2Ah ; *
db 0EDh
db 0A3h
db 0F3h
db  2Bh ; +
db  1Eh
db 0A2h
db 0EFh
db 0F1h
db  7Fh ; 
db  58h ; X
db  18h
db  23h ; #
db    0
db 0E6h
db  8Ch
db 0B6h
db 0E2h
db 0A3h
db  0Ah
db 0B5h
db  4Ch ; L
db  6Dh ; m
db 0CAh
db 0DDh
db 0A6h
db  2Dh ; -
db 0AEh
db 0E7h
db  8Fh
db 0FFh
db  9Bh
db  17h
db  1Eh
db  3Ch ; <
db 0FDh
db 0A2h
db  6Bh ; k
db  58h ; X
db  4Dh ; M
db 0DBh
db  57h ; W
db  22h ; "
db 0F8h
db 0EEh
db  9Dh
db 0FFh
db  9Bh
db  4Ah ; J
db  4Dh ; M
db  5Ch ; \
db 0E5h
db 0A2h
db  52h ; R
db  8Eh
db  59h ; Y
db  21h ; !
db  37h ; 7
db 0FCh
db 0CEh
db 0E1h
db  1Fh
db 0FFh
db  25h ; %
db 0D2h
unk_1001EA88 db 0E5h
db 0C7h
db  19h
db  5Dh ; ]
db  9Dh
db 0DFh
db 0C9h
db 0DBh
db 0E0h
db  1Bh
db  98h
db 0DCh
db 0BDh
db 0FFh
db  18h
db  24h ; $
db  30h ; 0
db  9Ch
db 0A9h
db 0E0h
db 0C9h
db  72h ; r
db 0B5h
db  22h ; "
db  79h ; y
db 0D2h
db    9
db  0Ah
db 0CAh
db  84h
db  6Ch ; l
db  2Ah ; *
db  1Dh
db 0A2h
db  23h ; #
db  28h ; (
db 0BEh
db 0ADh
db 0B3h
db 0F6h
db  8Fh
db  59h ; Y
db  98h
db  3Dh ; =
db 0A0h
db 0E9h
db 0B6h
db 0B6h
db  12h
db 0A2h
db  3Ah ; :
db 0B5h
db 0ACh
db  63h ; c
db  8Ah
db 0DAh
db  76h ; v
db  2Ch ; ,
db  2Eh ; .
db 0E6h
db 0EFh
db 0FFh
db 0A5h
db  17h
db 0C3h
db  3Dh ; =
db 0CDh
db 0A2h
db  0Bh
db  5Ch ; \
db 0F6h
db 0DBh
db 0BFh
db  59h ; Y
db 0BBh
db 0CDh
db  80h
db  71h ; q
db  54h ; T
db 0BEh
db  27h ; '
db 0A2h
db  4Ah ; J
db  57h ; W
db 0CCh
db  8Fh
db  48h ; H
db  40h ; @
db  9Bh
db 0E9h
db  86h
db  51h ; Q
db  24h ; $
unk_1001EAE5 db  2Eh ; .
db 0C2h
db  0Bh
db  3Dh ; =
db 0A2h
db  13h
db  0Ah
db  40h ; @
db  7Bh ; {
db  23h ; #
db 0AFh
db  57h ; W
db 0A6h
db 0C0h
db 0F1h
db 0F5h
db 0DDh
db 0C5h
db 0DAh
db  88h
db 0FBh
db  5Ch ; \
db  5Dh ; ]
db  2Dh ; -
db  7Fh ; 
db  21h ; !
db 0A0h
db 0C0h
db 0A7h
db 0AFh
db    4
db 0D2h
db  28h ; (
db  62h ; b
db  0Dh
db 0C6h
db  27h ; '
db 0B2h
db  5Ah ; Z
db  1Dh
db  7Dh ; }
db  36h ; 6
db  12h
db 0AEh
db  59h ; Y
db 0B9h
db  0Eh
db  28h ; (
db 0F4h
db  98h
db  6Ah ; j
db  45h ; E
db 0A2h
db  82h
db  5Bh ; [
db  4Ch ; L
db  82h
db  4Ah ; J
db  8Ah
db  28h ; (
db  1Eh
db  7Fh ; 
db    7
db 0B2h
db    0
db  63h ; c
db 0CDh
db  9Ah
db  27h ; '
db 0C5h
db  5Fh ; _
db  7Dh ; }
db  7Dh ; }
db  7Dh ; }
db  24h ; $
db 0C9h
db 0F9h
db  0Eh
db 0E2h
db 0C5h
db  3Dh ; =
db  20h
db  60h ; `
unk_1001EB38 db  33h ; 3
db  9Ch
db  41h ; A
db 0D8h
db 0FBh
db  7Eh ; ~
db  75h ; u
db  24h ; $
db  7Ah ; z
db 0B9h
db  31h ; 1
db  0Bh
db  3Ah ; :
db 0F5h
db  94h
db  6Ah ; j
db  6Dh ; m
db 0A2h
db  14h
db  63h ; c
db  5Ah ; Z
db  77h ; w
db  29h ; )
db  23h ; #
db    0
db 0A6h
db  71h ; q
db  0Bh
db  7Ah ; z
db 0F5h
db  96h
db  2Ah ; *
db  65h ; e
db 0A2h
db  62h ; b
db 0D4h
db 0BEh
db  82h
db 0CAh
db  8Bh
db  1Dh
db  4Eh ; N
db  37h ; 7
db  28h ; (
db  72h ; r
db    1
db 0D3h
db  60h ; `
db  2Ch ; ,
db 0F0h
db 0D5h
db  63h ; c
db  42h ; B
db  17h
db 0B5h
db  28h ; (
db  10h
db 0A6h
db  34h ; 4
db 0B6h
db  97h
db 0CFh
db 0AAh
db  6Ah ; j
db  75h ; u
db  4Ah ; J
db  1Ch
db 0B5h
db  52h ; R
db  83h
db  55h ; U
db  2Fh ; /
db  1Bh
db  59h ; Y
db 0FCh
db 0A0h
db  5Dh ; ]
db  83h
db  18h
db  7Bh ; {
db 0C9h
db 0A1h
db  92h
db  5Dh ; ]
db  1Fh
db    0
db 0BBh
db  32h ; 2
db 0F8h
db 0A5h
db  40h ; @
db 0FFh
db  6Ch ; l
db 0ABh
db  55h ; U
db  55h ; U
db  7Ah ; z
db  9Ch
db  21h ; !
db 0C0h
db 0BDh
db  7Ah ; z
db 0B5h
db  24h ; $
db  10h
db  27h ; '
db  17h
db    1
db  33h ; 3
db  99h
db 0AFh
db  40h ; @
db 0A3h
db  29h ; )
db  27h ; '
db  45h ; E
db 0FBh
db  7Ch ; |
db  57h ; W
db  23h ; #
db  10h
db 0A5h
db 0C0h
db 0FEh
db 0DCh
db  2Eh ; .
db 0E0h
db  34h ; 4
db  6Ah ; j
db  5Dh ; ]
db 0E2h
db  6Eh ; n
db  69h ; i
db 0B1h
db  7Ah ; z
db 0C7h
db 0AEh
db 0ADh
db    3
db  58h ; X
db 0F3h
db  32h ; 2
db  4Bh ; K
db 0F2h
db 0ACh
db 0A2h
db 0C7h
db  58h ; X
db  10h
db 0DEh
db  8Ah
db  88h
db 0C3h
db 0C0h
db 0CFh
db  80h
db  80h
db    0
db 0A4h
db 0A9h
db 0A6h
db 0A2h
db 0CAh
db 0BFh
db 0ADh
db 0B1h
db  1Ah
db 0DBh
db  53h ; S
db  61h ; a
db 0C3h
db  0Ah
db 0DCh
db    1
db  6Ch ; l
db 0EDh
db  32h ; 2
db  27h ; '
db 0DAh
db  5Eh ; ^
db  3Dh ; =
db  7Ch ; |
db 0A8h
db  4Eh ; N
db  89h
db 0FDh
db 0DBh
unk_1001EBF3 db 0CBh
db  0Ah
db  7Eh ; ~
db  1Ch
db 0AAh
db  5Dh ; ]
db  15h
db  22h ; "
db 0A2h
db 0D3h
db 0B1h
db  0Fh
db    3
db  2Dh ; -
db  86h
db  18h
db 0FDh
db  2Ch ; ,
db  78h ; x
unk_1001EC06 db 0DBh
db  6Ch ; l
db  16h
db  28h ; (
db  0Bh
db  63h ; c
db    8
db  65h ; e
db 0E3h
db 0CBh
db 0A1h
db 0A6h
db  41h ; A
db  0Dh
db  28h ; (
db 0A5h
db  8Bh
db  4Ah ; J
db 0C5h
db 0A2h
db  6Ah ; j
db 0B8h
db    3
db  78h ; x
db 0C1h
db 0ECh
db  55h ; U
db  26h ; &
db  58h ; X
db 0C3h
db 0B5h
db 0F8h
db 0CFh
db  17h
db 0DAh
db  9Ch
db 0D0h
db 0D1h
db  46h ; F
db 0DAh
db  51h ; Q
db  26h ; &
db 0B0h
db 0FDh
db 0DAh
unk_1001EC33 db  7Ah ; z
db 0FFh
db  5Ah ; Z
db 0AFh
db  56h ; V
db  55h ; U
db  56h ; V
db 0DAh
db 0D7h
db 0E5h
db  65h ; e
db  74h ; t
db 0BDh
db 0B6h
db  2Dh ; -
db 0AEh
db 0B0h
db  6Fh ; o
db 0FEh
db 0BDh
db  17h
db  7Eh ; ~
db  78h ; x
db  0Dh
db 0A2h
db  8Ch
db 0B3h
db  76h ; v
db 0D9h
db  7Fh ; 
db  16h
db  47h ; G
db 0BAh
db  72h ; r
db  4Bh ; K
db  43h ; C
db 0F5h
db  0Dh
db  79h ; y
db 0D2h
db 0A3h
db 0B3h
db 0B3h
db 0BEh
db  49h ; I
db 0C2h
db 0FFh
db  46h ; F
db 0E9h
unk_1001EC64 db  2Dh ; -
db  5Fh ; _
db 0F1h
db  5Bh ; [
db  1Dh
db  28h ; (
db 0C6h
db  50h ; P
db  3Dh ; =
db 0B2h
db  2Fh ; /
db  0Ah
db    5
db  6Fh ; o
db 0C8h
db 0F3h
db  9Ch
db  2Dh ; -
db 0F6h
db 0B1h
db  0Ah
db  5Dh ; ]
db 0F2h
db 0E5h
db  1Ch
db  80h
db  0Bh
db 0E5h
db 0A8h
db  4Dh ; M
db 0CEh
db  21h ; !
db  52h ; R
db    2
db    4
db  1Fh
db 0D5h
db  5Eh ; ^
db 0EDh
db 0DDh
db  5Eh ; ^
db  80h
db  95h
db  26h ; &
db  60h ; `
db  25h ; %
db 0E1h
db 0F4h
db 0A8h
db  74h ; t
db 0B9h
db  92h
db  63h ; c
db  9Fh
db 0A1h
db 0C9h
db  1Fh
db  7Ch ; |
db 0B5h
db  26h ; &
db  90h
db  9Fh
db  57h ; W
db  0Ch
db  32h ; 2
db  2Ch ; ,
db  56h ; V
db 0D1h
db 0E2h
db  5Eh ; ^
db  92h
db  9Ch
db  2Dh ; -
db  22h ; "
db  3Eh ; >
db 0C6h
db  8Fh
db  4Dh ; M
db 0D6h
db  36h ; 6
db  22h ; "
db    2
db  2Eh ; .
db  3Ah ; :
db 0ECh
db  9Eh
db  46h ; F
db  84h
db  59h ; Y
db 0CDh
db  16h
db  34h ; 4
db  23h ; #
db 0A5h
db 0E7h
db  76h ; v
unk_1001ECC4 db  3Dh ; =
db 0AEh
db  44h ; D
db  2Ah ; *
db  2Dh ; -
db 0F2h
db  63h ; c
db  0Eh
db  0Ch
db    8
db 0AEh
db 0C6h
db 0BFh
db 0D7h
db 0D4h
db 0E8h
db  25h ; %
db 0F4h
db 0D5h
db  70h ; p
db  1Bh
db  2Ah ; *
db 0C7h
db  1Ch
db 0CBh
db  7Fh ; 
db  35h ; 5
db 0C1h
db  9Fh
db  20h
db  40h ; @
db 0E9h
db  0Dh
db 0FDh
db  43h ; C
db  0Ah
db  3Dh ; =
db 0A1h
db  24h ; $
db  6Ah ; j
db 0B3h
db  7Ah ; z
db 0D5h
db  39h ; 9
db  6Eh ; n
db  2Eh ; .
db 0E8h
db  35h ; 5
db  1Bh
db 0FDh
db  42h ; B
db  17h
db  5Eh ; ^
db  5Fh ; _
db 0A5h
db 0A3h
db 0C7h
db  37h ; 7
db  6Dh ; m
db 0E0h
db  29h ; )
db 0A7h
db 0A8h
db    2
db  50h ; P
db 0EBh
db 0D2h
db 0A2h
db  4Eh ; N
db 0A1h
db  52h ; R
db  1Fh
db  61h ; a
db  7Dh ; }
db 0E1h
db  5Bh ; [
db  23h ; #
db 0A5h
db  47h ; G
db 0E1h
db  8Bh
db  30h ; 0
db  26h ; &
db 0DAh
db  7Fh ; 
db 0A1h
db  1Fh
db  5Ah ; Z
db  0Ah
db 0F6h
db 0A6h
db 0D9h
db 0D3h
db 0ACh
db  9Eh
db 0D4h
db  44h ; D
db  8Dh
db 0B0h
db 0F5h
db 0A2h
db  5Eh ; ^
db  9Bh
db    7
db 0C9h
db 0CDh
db  58h ; X
db  87h
db  30h ; 0
db  0Eh
db  3Fh ; ?
unk_1001ED33 db 0B6h
db  29h ; )
db 0ECh
db  4Eh ; N
db  0Ah
db  33h ; 3
db  9Ch
db  7Fh ; 
db  5Ch ; \
db  83h
db 0FDh
db 0EDh
db 0CDh
db    9
db 0A5h
db 0A8h
db 0CBh
db  7Bh ; {
db 0FAh
db  2Dh ; -
db  62h ; b
db  69h ; i
db  4Ah ; J
db  24h ; $
db  3Ah ; :
db  27h ; '
db  7Bh ; {
db  14h
db 0ECh
db    7
db  2Eh ; .
db  59h ; Y
db 0A8h
db 0FBh
db 0F5h
db  71h ; q
db  63h ; c
db    3
db  9Ch
db  89h
db  5Ch ; \
db 0A7h
db  71h ; q
db  19h
db  36h ; 6
db  3Bh ; ;
db 0E6h
db 0A7h
db 0AFh
db 0F5h
db  30h ; 0
db 0CCh
db 0AAh
db  7Dh ; }
db 0D4h
db  85h
db 0D7h
db 0BBh
db  68h ; h
db 0D9h
db  29h ; )
db 0FBh
db  8Ah
db 0F1h
db  1Ch
db  97h
db 0FCh
db 0A4h
db 0AAh
db 0FEh
db 0A2h
db 0A9h
db  1Fh
db 0A4h
db 0A8h
db  7Ch ; |
db 0A0h
db 0D5h
db 0A3h
db    3
db  5Fh ; _
db 0A4h
db    2
db  29h ; )
db  77h ; w
db  9Bh
db 0C7h
db 0AFh
db  5Bh ; [
db  9Dh
db  94h
db  86h
db 0C4h
db 0EBh
db  4Eh ; N
db  23h ; #
db 0C7h
db 0C7h
db 0ECh
db 0E8h
db    4
db  81h
db  70h ; p
db  89h
db 0B7h
db  88h
db 0DCh
db  1Bh
db  14h
db 0FBh
db  66h ; f
db  18h
db 0F5h
db 0F7h
db  81h
unk_1001EDA6 db 0AAh
db    2
db  95h
db 0A1h
db 0A2h
db  3Ch ; <
db  81h
db  60h ; `
db  8Fh
db  2Dh ; -
db  34h ; 4
db 0A4h
db 0C0h
db 0F6h
db  7Eh ; ~
db  3Dh ; =
db  9Fh
db  0Dh
db  1Ch
db 0E4h
db 0A2h
db  6Fh ; o
db  5Bh ; [
db    3
db  68h ; h
db  2Ch ; ,
db 0C8h
db 0A5h
db    0
db 0F6h
db 0EDh
db  80h
db 0F2h
db  61h ; a
db 0B5h
db 0DDh
db 0B6h
db  6Fh ; o
db  78h ; x
db 0A9h
db  1Bh
db  17h
db  13h
db 0E7h
db 0B4h
db 0A7h
db 0F5h
db 0D7h
db  2Ah ; *
db 0CAh
db 0A5h
db 0A1h
db  3Ch ; <
db 0BFh
db 0D8h
db 0FEh
db 0E1h
db  22h ; "
db 0E6h
db  2Eh ; .
db 0A8h
db 0F7h
db  18h
db  74h ; t
db  42h ; B
db  56h ; V
db  11h
db  9Fh
db 0F0h
db 0D8h
db    6
db  92h
db 0D9h
db  3Bh ; ;
db 0D0h
db  97h
db 0E5h
db 0A3h
db  7Dh ; }
db 0F5h
db  15h
db 0CCh
db  31h ; 1
db 0BCh
db  2Ch ; ,
db  5Fh ; _
db  2Dh ; -
db  7Eh ; ~
db  0Dh
db 0F3h
db  2Ch ; ,
db 0B0h
db 0B0h
db 0EAh
db  2Dh ; -
db 0FCh
db  56h ; V
db 0CAh
db  49h ; I
db 0BCh
db  24h ; $
db  5Fh ; _
db  1Dh
db  7Eh ; ~
db 0BAh
db  51h ; Q
db  9Eh
db  5Ah ; Z
db  68h ; h
db 0F7h
db 0F2h
db  38h ; 8
db  65h ; e
db 0C6h
db    6
db  89h
db 0EAh
db  14h
db  42h ; B
unk_1001EE1D db 0AFh
db 0F5h
db  24h ; $
db 0B8h
db 0A5h
db  1Ah
db  7Eh ; ~
db 0E1h
db  80h
db  9Eh
db 0FCh
db  50h ; P
db  65h ; e
db 0E3h
db  5Ch ; \
db  7Dh ; }
db 0B2h
db 0AFh
db  16h
db  2Dh ; -
db  7Eh ; ~
db 0C8h
db 0F4h
db  5Dh ; ]
db  30h ; 0
db  8Bh
db 0A6h
db 0D6h
db  79h ; y
db  18h
db 0A5h
db 0A0h
db  58h ; X
db 0EDh
db  17h
db  48h ; H
db 0FBh
db 0CAh
db  2Eh ; .
db 0EBh
db  65h ; e
db  31h ; 1
db  24h ; $
db 0B9h



sub_1001EE49 proc near
sbb     dh, dh
pop     esp
pop     ebp
jle     short near ptr loc_1001EE86+3
int     3               ; Trap to Debugger
add     [edx-10h], esp
jmp     short near ptr loc_1001EECF+3
sub_1001EE49 endp ; sp-analysis failed

db 0FCh
db  22h ; "
db  7Fh ; 
db  26h ; &
db  31h ; 1
db  9Ah
db 0D3h
db  2Ah ; *
db  2Ah ; *
db  2Ah ; *
db  56h ; V
db  65h ; e
db  72h ; r
db  73h ; s
db  69h ; i
db  6Fh ; o
db  6Eh ; n
db  20h
db  34h ; 4
db  2Eh ; .
db  30h ; 0
db  30h ; 0
db  20h
db  28h ; (
db  30h ; 0
db  31h ; 1
db  2Fh ; /
db  32h ; 2
db  33h ; 3
db  2Fh ; /
db  39h ; 9
db  37h ; 7
db  29h ; )
db  2Ah ; *
db  2Ah ; *
db  2Ah ; *



sub_1001EE79 proc near

; FUNCTION CHUNK AT 1001EE82 SIZE 000003B7 BYTES
; FUNCTION CHUNK AT 1001F37F SIZE 0000001E BYTES

jmp     short loc_1001EE82
sub_1001EE79 endp ; sp-analysis failed



; Attributes: bp-based frame

sub_1001EE7B proc near

arg_0= dword ptr  8

push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
pop     ebp
sub_1001EE7B endp

; START OF FUNCTION CHUNK FOR sub_1001EE79

loc_1001EE82:
push    ds
push    es
pusha
cld

loc_1001EE86:
call    sub_1001C551
call    sub_1001C5D3
jnb     short loc_1001EEA6
mov     eax, 0FFFFFFFFh
mov     word ptr ds:[ebp+2A7h], 12Ch
jmp     loc_1001F172

loc_1001EEA6:
cmp     word ptr ds:[ebp+14h], 1
mov     word ptr ds:[ebp+2A7h], 8
jz      loc_1001F172
cmp     eax, 8000h
jz      short loc_1001EEDE
cmp     eax, 1000h
jz      short loc_1001EEDE
cmp     eax, 9
jbe     short loc_1001EEDE

loc_1001EECF:
mov     word ptr ds:[ebp+2A7h], 6
jmp     loc_1001F172

loc_1001EEDE:
mov     ds:[ebp+10h], esp
push    ebx
call    sub_1001F5A6
add     ebx, 286h
mov     ds:[ebp+0Ch], ebx
pop     ebx
xor     ecx, ecx
call    sub_100179C3
push    eax
pop     eax
cmp     eax, 8000h
jz      short loc_1001EF13
cmp     eax, 1000h
jz      loc_1001EFE6
jmp     loc_1001F0D4

loc_1001EF13:
cmp     dword ptr ds:[ebp+7A2h], 1
jnz     short loc_1001EF2C
mov     word ptr ds:[ebp+2A7h], 69h ; 'i'
jmp     loc_1001F168

loc_1001EF2C:
mov     dword ptr ds:[ebp+659h], 0
call    sub_1001787F
jb      loc_1001F168
call    sub_1001BB94
call    sub_1001C0FB
mov     word ptr ds:[ebp+2A7h], 64h ; 'd'
call    sub_1001F4DA
jnz     short loc_1001EFC7
sub     esp, 10h
mov     edi, esp
push    ss
pop     es
call    loc_1001E0D8
mov     ebx, edi
call    loc_1001F3AA
jnz     short loc_1001EFC4
or      eax, eax
jnz     short loc_1001EFC4
call    sub_1001F469
mov     ax, ds:[ebp+205h]
mov     ds:[ebp+1CBh], ax
mov     word ptr ds:[ebp+1CFh], 0
mov     word ptr ds:[ebp+1D1h], 0
mov     byte ptr ds:[ebp+1C2h], 1
xor     eax, eax
call    sub_1001EE49
mov     ds:[ebp+2A7h], ax
add     esp, 10h
call    sub_100174C4
clc
jmp     loc_1001F394

loc_1001EFC4:
add     esp, 10h

loc_1001EFC7:
call    sub_10017A70
call    sub_100174C4
mov     dword ptr ds:[ebp+7A2h], 0
call    sub_10017B19
jmp     loc_1001F168

loc_1001EFE6:
mov     word ptr ds:[ebp+2A7h], 2
mov     dword ptr ds:[ebp+3D6h], 0
mov     dword ptr ds:[ebp+7A2h], 0
call    sub_1001B707
call    sub_1001B7E1
call    sub_1001B849
call    sub_1001B8A3
call    sub_10019C34
call    sub_1001FF82
mov     dword ptr ds:[ebp+659h], 1
call    sub_1001A13B
jb      loc_1001F0CF
cmp     byte ptr ds:[ebp+1C2h], 1
jz      short loc_1001F0AC
call    sub_1001BB94
call    sub_1001C0FB
mov     word ptr ds:[ebp+2A7h], 2
call    sub_1001F4DA
jnz     short loc_1001F0CF
sub     esp, 10h
mov     edi, esp
push    ss
pop     es
call    loc_1001E0D8
mov     ebx, edi
call    loc_1001F3AA
jnz     short loc_1001F0C1
or      eax, eax
jnz     short loc_1001F0C1
call    sub_1001F469
mov     ax, ds:[ebp+205h]
mov     ds:[ebp+1CBh], ax
mov     word ptr ds:[ebp+1CFh], 0
mov     word ptr ds:[ebp+1D1h], 0
mov     byte ptr ds:[ebp+1C2h], 1
add     esp, 10h

loc_1001F0AC:
xor     eax, eax
call    sub_1001EE49
mov     ds:[ebp+2A7h], ax
clc
jmp     loc_1001F394

loc_1001F0C1:
add     esp, 10h
mov     dword ptr ds:[ebp+659h], 0

loc_1001F0CF:
jmp     loc_1001F168

loc_1001F0D4:
mov     dword ptr ds:[ebp+7A2h], 0
mov     dword ptr ds:[ebp+659h], 0
push    ds
pop     es
mov     word ptr ds:[ebp+2A7h], 2
call    sub_1001B707
call    sub_1001CB1E
call    sub_1001C2E4
cmp     byte ptr ds:[ebp+1C2h], 1
jnz     short loc_1001F181
or      eax, eax
jz      short loc_1001F13C
dec     eax
shl     eax, 2
add     eax, ebp
add     eax, 1E1h
cmp     eax, ds:[ebp+384h]
jz      short loc_1001F13C
mov     word ptr ds:[ebp+0], 1
mov     ecx, 1
mov     ds:[ebp+384h], eax
jmp     short loc_1001F1B5

loc_1001F13C:
mov     eax, ds:[ebp+384h]
call    sub_1001BB65
call    sub_1001B9AC
jnb     short loc_1001F153
or      eax, eax
jnz     short loc_1001F168

loc_1001F153:
call    sub_1001C0FB
or      eax, eax
jnz     short loc_1001F163
jmp     loc_1001F37F

loc_1001F161:
pop     ebx
pop     ecx

loc_1001F163:
call    sub_1001C27A

loc_1001F168:
mov     eax, 0FFFFFFFFh
stc
push    eax
pushf
popf
pop     eax

loc_1001F172:
mov     edi, esp
mov     ss:[edi+1Ch], eax
popa
pop     es
pop     ds
call    sub_1001C597
retn

loc_1001F181:
mov     ds:[ebp+384h], ebp
add     dword ptr ds:[ebp+384h], 1E1h
mov     word ptr ds:[ebp+0], 0
or      eax, eax
jz      short loc_1001F1B0
dec     eax
shl     eax, 2
add     ds:[ebp+384h], eax
mov     ecx, 1
jmp     short loc_1001F1B5

loc_1001F1B0:
mov     ecx, 9

loc_1001F1B5:
push    ecx
call    sub_1001C2E4
mov     eax, ds:[ebp+384h]
call    sub_1001BB65
mov     ecx, ds:[ebp+38Ch]
xor     ebx, ebx

loc_1001F1D0:
push    ebx
mov     eax, ds:[ebp+ebx+34Ch]
mov     ds:[ebp+1C9h], ax
mov     ds:[ebp+390h], ebx
call    sub_1001B9F8
jb      short loc_1001F21E
call    sub_1001C0FB
or      eax, eax
jnz     short loc_1001F21E
cmp     word ptr ds:[ebp+0], 1
jz      short loc_1001F236
mov     word ptr ds:[ebp+2A7h], 1
call    sub_1001F4DA
jnz     loc_1001F161
mov     word ptr ds:[ebp+0], 1
jmp     short loc_1001F236

loc_1001F21E:
pop     ebx
add     ebx, 4
loopw   loc_1001F1D0
add     dword ptr ds:[ebp+384h], 4
pop     ecx
loopw   loc_1001F1B5
jmp     loc_1001F168

loc_1001F236:
or      ecx, edi
iret
; END OF FUNCTION CHUNK FOR sub_1001EE79
db  36h ; 6
db 0C7h
db 0B2h
db 0B3h
db  45h ; E
db  45h ; E
db  69h ; i
db  57h ; W
db  70h ; p
db  9Eh
db 0AFh
db  8Dh
db 0C7h
db  27h ; '
db  17h
db 0F7h
db  4Ch ; L
db 0F7h
db  30h ; 0
db  6Bh ; k
db  64h ; d
db  6Ah ; j
db  9Bh
db  7Fh ; 
db 0B0h
db 0F6h
db  24h ; $
db  58h ; X
db  38h ; 8
db  98h
db 0E6h
db  56h ; V
db  5Bh ; [
db  63h ; c
db  59h ; Y
db  4Ch ; L
db 0BAh
db 0E7h
db 0F6h
db  99h
db  48h ; H
db  4Ch ; L
db  1Ch
db  2Fh ; /
db  0Bh
db 0C6h
db  70h ; p
db  7Ch ; |
db 0FEh
db  6Eh ; n
db  8Dh
db 0C4h
db  4Fh ; O
db  59h ; Y
db  6Eh ; n
db  69h ; i
db 0B7h
db  1Eh
db  18h
db  5Ah ; Z
db 0B2h
db  3Ah ; :
db 0F7h
db 0F7h
db 0C1h
db  34h ; 4
db  8Dh
db 0C6h
db  4Fh ; O
db  49h ; I
db  6Eh ; n
db  69h ; i
db 0B7h
db  1Eh
db  98h
db  5Ah ; Z
db 0C4h
db  3Ah ; :
db 0B7h
db 0F7h
db 0C1h
db  24h ; $
db  38h ; 8
db  0Ch
db  94h
db  25h ; %
db  6Dh ; m
db  69h ; i
db 0B7h
db  1Fh
db  18h
db  9Ch
db  47h ; G
db    9
db 0A9h
db 0E0h
db  7Fh ; 
db    9
db 0B3h
db 0B2h
db  95h
db 0FAh
db 0D3h
db  96h
db  48h ; H
db  27h ; '
db  10h
db  5Dh ; ]
db 0A6h
db  20h
db 0C9h
db 0BFh
db  36h ; 6
db 0C7h
db 0B2h
db 0B3h
db  45h ; E
db 0BDh
db  85h
db 0ECh
db  9Bh
db 0AFh
db  8Bh
db  8Bh
db  3Fh ; ?
db 0A6h
db  18h
db 0CCh
db 0A3h
db 0E1h
db 0ECh
db  4Ch ; L
db 0BAh
db 0BAh
db 0CAh
db 0E4h
db  59h ; Y
db  48h ; H
db  74h ; t
db  6Eh ; n
db  25h ; %
db 0ABh
db 0C9h
db 0C8h
db 0C7h
db 0E4h
db 0D5h
db 0CFh
db  47h ; G
db  52h ; R
db  57h ; W
db  68h ; h
db 0B7h
db 0B0h
db 0D3h
db  98h
db 0E6h
unk_1001F2D6 db 0C4h
db 0ABh
db 0D9h
db  2Bh ; +
db 0A8h
db 0A9h
db 0B6h
db 0B4h
db  21h ; !
db    9
db 0BEh
db  2Fh ; /
db  17h
db  40h ; @
db  86h
db  36h ; 6
db 0DBh
db 0ABh
db 0E1h
db  2Bh ; +
db 0B6h
db 0A9h
db 0A6h
db 0B4h
db 0FAh
db  44h ; D
db 0FDh
db  55h ; U
db  84h
db 0C7h
db  12h
db 0FBh
db 0F1h
db 0B4h
db 0E5h
db  7Fh ; 
db  74h ; t
db 0A8h
db  96h
db 0B2h
db  78h ; x
db  6Bh ; k
db  3Bh ; ;
db  23h ; #
db  91h
db  7Bh ; {
db 0A4h
db  36h ; 6
db  35h ; 5
db  7Ch ; |
db  98h
db 0ADh
db  8Dh
db 0A8h
db  86h
db 0C8h
db    3
db 0E4h
db 0D9h
db 0ABh
db 0FFh
db  57h ; W
db 0BFh
db  30h ; 0
db  6Bh ; k
db  6Ch ; l
db    5
db 0A6h
db 0BBh
db  28h ; (
db 0FDh
db  3Dh ; =
db  3Dh ; =
db 0F3h
db  15h
db 0AEh
db 0E7h
db  72h ; r
db 0C6h
db  36h ; 6
db 0D3h
db  60h ; `
db 0B6h
db  2Bh ; +
db    0
db  6Dh ; m
db 0E4h
db 0B4h
db 0D8h
db  23h ; #
db 0F5h
db 0CCh
db  88h
db 0AEh
db 0DDh
db  95h
db  12h
db  4Ch ; L
db  80h
db  59h ; Y
db  56h ; V
db 0A4h
db 0AEh
db 0B4h
db 0F8h
db  23h ; #
db 0EDh
db 0CCh
db  48h ; H
db 0AFh
db 0EDh
db  95h
db  11h
db  4Ch ; L
db  98h
db  7Fh ; 
db  4Eh ; N
db  5Fh ; _
db  41h ; A
db  4Dh ; M
db  65h ; e
db 0F3h
db 0FDh
db 0DFh
db  5Eh ; ^
db 0A0h
db 0E3h
db  2Dh ; -
db  28h ; (
db 0ECh
db  90h
db 0AEh
db 0C3h
db  96h
db  35h ; 5
db 0AEh
db 0FDh
db 0F4h
db 0F5h
db 0AAh
db  0Eh
db 0A5h
db  11h
db  3Dh ; =
db  25h ; %
db  4Ch ; L
db 0A8h
db 0AEh
db 0DBh
db  96h
db  75h ; u
db 0BEh
db  6Dh ; m
db 0F5h
db 0CDh
db 0AAh
db  61h ; a
db  72h ; r
db  36h ; 6
db  80h
db 0D5h
db  4Bh ; K
db  66h ; f
db  2Bh ; +
db  77h ; w
db 0A9h
db  16h
db 0B4h
db  7Dh ; }
; START OF FUNCTION CHUNK FOR sub_1001EE79

loc_1001F37F:
db      3Eh
add     eax, 0D983A042h
leave
shr     dword ptr [ebx-5595D4CFh], 1
push    es
mov     ah, 0FAh
push    ecx
cmp     esp, [eax+eax-56h]

loc_1001F394:
push    cs
xchg    eax, edi
mov     bh, 7Fh
cmp     edx, [edx-0Dh]
and     eax, edi
; END OF FUNCTION CHUNK FOR sub_1001EE79
db  8Ch
db 0BDh
db 0EFh
db 0CAh
db  42h ; B
db 0B1h
db 0DAh
db 0B9h
db 0C9h
db    3
db  1Eh
db  58h ; X
db  3Eh ; >

loc_1001F3AA:
push    cs
lodsd
adc     eax, 5F341CE7h
cmp     al, 0AEh
cmp     ecx, [ebp-7E70F8BFh]
out     dx, al
adc     [eax], dh
imul    ecx, [edx+ebp*2-65h], 5Fh ; '_'
db      3Eh
mov     bl, cl
aaa
db 0C4h
db 0C7h
db    8
db  89h
db  58h ; X
db  0Ch
db  1Dh
db 0B3h
db  45h ; E
db  3Dh ; =
db  75h ; u
db  0Fh
db  3Bh ; ;
db 0F3h
db 0FDh
db  3Ah ; :
db 0D0h
db 0A6h
db  69h ; i
db 0C1h
db 0C6h
db    2
db  30h ; 0
db  3Bh ; ;
db  4Ch ; L
db  8Ah
db  69h ; i
db  80h
db 0CAh
db 0B7h
db  8Bh
db  8Bh
db  65h ; e
db 0B7h
db  70h ; p
db  0Ch
db  38h ; 8
db  3Bh ; ;
db  30h ; 0
db  35h ; 5
db  4Ch ; L
db  69h ; i
db  47h ; G
db 0A8h
db  5Eh ; ^
db 0A5h
db  13h
db  5Ah ; Z
db  9Ch
db 0C7h
db  28h ; (
db    8
db  32h ; 2
db 0E3h
db  8Ah
db 0EFh
db  44h ; D
db  45h ; E
db 0C5h
db 0B7h
db  40h ; @
db  2Dh ; -
db  95h
db  46h ; F
db  9Dh
db  9Ah
db  1Fh
db    8
db 0B3h
db    8
db 0D5h
db 0B4h
db 0E3h
db  8Ah
db  61h ; a
db  0Fh
db  81h
db 0BFh
db 0B3h
db 0B3h
db  40h ; @
db  6Bh ; k
db 0DDh
db 0E0h
db  1Bh
db    8
db 0B3h
db 0B3h
db  89h
db  4Ah ; J
db  25h ; %
db  5Ah ; Z
db  75h ; u
db 0ABh
db  61h ; a
db  47h ; G
db 0ABh
db  25h ; %
db  20h
db  0Ah
db  85h
; START OF FUNCTION CHUNK FOR sub_1001F469

loc_1001F42A:
push    dword ptr [ebx+esi*4+1D694541h]
mov     ecx, 21C50201h
pop     es
out     dx, al
mov     [ecx+ecx-16BA4C4Dh], edi
pop     esi
xchg    eax, ecx
cmp     dword ptr [edi], 0E1C96D75h
fadd    dword ptr [edi]
mov     bl, 88h
mov     bl, 0B2h
adc     dword ptr [eax+26553007h], 57C89D3Fh
jo      short loc_1001F465
mov     ch, 17h
lea     esi, [edi+ecx*2-489691CFh]
dec     ebp
jns     short loc_1001F49E

loc_1001F465:
jno     short loc_1001F48B
; END OF FUNCTION CHUNK FOR sub_1001F469
db 0E8h
db 0CBh



sub_1001F469 proc near

; FUNCTION CHUNK AT 1001F42A SIZE 0000003D BYTES

mov     ch, 16h
ror     esi, cl
push    edi
xor     [eax], ecx
add     dword ptr [esi-3A757441h], 0B3A67EFAh
or      [ebp+756A53BCh], ch
push    0FFFFFFB7h
mov     bh, 8Bh
mov     al, [ecx]
loope   loc_1001F42A
mov     esi, [eax+0Ch]

loc_1001F48B:
cmp     ah, dl
push    ebx
mov     edi, 0EFB3AA66h
xlat
sub     ds:8B20275h[ecx*8], dl
mov     bl, 0B0h
xchg    eax, edx

loc_1001F49E:
aaa
shr     byte ptr [ecx-49h], cl
jmp     near ptr 1F625921h
sub_1001F469 endp ; sp-analysis failed

db  64h ; d
db 0A5h
db  5Bh ; [
db  1Fh
db 0B3h
db 0B3h
db  45h ; E
db 0DDh
db  64h ; d
db 0BAh
db  84h
db 0A4h
db 0BDh
db 0DDh
db  40h ; @
db  3Bh ; ;
db  55h ; U
db  53h ; S
db 0EAh
db 0EAh
db  78h ; x
db  71h ; q
db  7Bh ; {
db  5Ah ; Z
db 0C9h
db 0A7h
db  61h ; a
db  48h ; H
db  74h ; t
db  0Dh
db  60h ; `
db 0E4h
db 0D8h
db 0EBh
db 0B0h
db    8
db 0B3h
db 0B2h
db 0E7h
db 0C9h
db  92h
db  6Ah ; j
db 0EAh
db  76h ; v
db  3Bh ; ;
db  94h
db 0A9h
db  25h ; %
db  6Bh ; k
db  53h ; S
db  70h ; p



sub_1001F4DA proc near
push    es
push    ds
push    ecx
sub     esp, 2
mov     ds:[ebp+18h], esp
mov     ecx, 8
xor     ebx, ebx
xor     eax, eax

loc_1001F4ED:
call    sub_1001F5A9
add     eax, edx
inc     ebx
loop    loc_1001F4ED
mov     edx, ds:[ebp+18h]
mov     ss:[edx], ax
push    ds
pop     es
call    sub_1001F5A6
sub     ebx, 0AF46h
push    small word ptr [ebx+2]
call    sub_1001F5A6
sub     ebx, 0AF3Dh
mov     ecx, [ebx]
mov     dword ptr [ebx], 0
or      ecx, ecx
jnz     short loc_1001F52E
add     esp, 4
xor     eax, eax
jmp     short loc_1001F5A2

loc_1001F52E:
push    ecx
add     ebx, 4
mov     esi, [ebx]
mov     edi, esi
add     ebx, 4
mov     ecx, [ebx]
shr     ecx, 1
push    ebx
call    sub_1001F5A6
sub     ebx, 0AF83h
sub     ebx, esi
not     ebx
inc     ebx

loc_1001F54E:
push    ecx
lodsw
call    sub_1001F5A9
xor     eax, edx
and     dl, 6
shr     dl, 1
mov     cl, dl
test    dh, 1
jz      short loc_1001F569
ror     ax, cl
jmp     short loc_1001F56C

loc_1001F569:
rol     ax, cl

loc_1001F56C:
stosw
mov     edx, ds:[ebp+18h]
add     ss:[edx], ax
test    word ptr ss:[edx], 40h
jz      short loc_1001F584
rol     word ptr ss:[edx], 1
jmp     short loc_1001F588

loc_1001F584:
ror     word ptr ss:[edx], 1

loc_1001F588:
inc     ebx
pop     ecx
loop    loc_1001F54E
pop     ebx
pop     ecx
loop    loc_1001F52E
pop     ax
add     esp, 2
mov     edx, ds:[ebp+18h]
add     ax, ss:[edx]
call    sub_1001CB92

loc_1001F5A2:
pop     ecx
pop     ds
pop     es
retn
sub_1001F4DA endp




sub_1001F5A6 proc near
pop     ebx
jmp     ebx
sub_1001F5A6 endp ; sp-analysis failed




sub_1001F5A9 proc near
push    eax
push    ebx
push    ds
xor     edx, edx
mov     al, ds:[ebp+1DAh]
and     eax, 7
and     ebx, 7
cmp     ebx, 7
jnz     short loc_1001F5C8
xor     ebx, ebx

loc_1001F5C8:
add     ebx, eax
cmp     ebx, 7
jl      short loc_1001F5D2
sub     ebx, 7

loc_1001F5D2:
mov     dl, ds:[ebp+ebx+1D3h]
inc     ebx
cmp     ebx, 7
jnz     short loc_1001F5E2
xor     ebx, ebx

loc_1001F5E2:
mov     dh, ds:[ebp+ebx+1D3h]
pop     ds
pop     ebx
pop     eax
retn
sub_1001F5A9 endp

db  73h ; s
db    0
db 0C9h
db  29h ; )



sub_1001F5F2 proc near
push    ds
push    es
pusha
mov     edi, 5
jmp     short loc_1001F604
db  1Eh
db    6
db  60h ; `
db 0BFh
db    5
db    0
db    0
db    0

loc_1001F604:
push    ds
pop     es
push    cs
pop     ds
call    sub_1001F5A6
sub     ebx, 1Bh
mov     ecx, 2

loc_1001F615:
push    ecx
mov     esi, ebx
movzx   ecx, word ptr [ebx-4]
movzx   ebx, word ptr [ebx-2]
xor     edx, edx

loc_1001F622:
lodsb
add     dl, al
ror     dx, 1
dec     ecx
jecxz   short loc_1001F633
lodsb
add     dh, al
rol     dx, 1
loop    loc_1001F622

loc_1001F633:
add     dx, bx
jnz     short loc_1001F64C
or      edx, edx
jnz     short loc_1001F64C
mov     eax, esp
mov     ebx, ss:[eax+2Ch]
sub     ebx, edi
pop     ecx
loop    loc_1001F615
clc
popa
pop     es
pop     ds
retn

loc_1001F64C:
mov     eax, 0FFFFFFFFh
push    es
pop     ds
mov     ds:[ebp+2A7h], ax
mov     ebx, ds:[ebp+0Ch]
mov     esp, ds:[ebp+10h]
jmp     ebx
sub_1001F5F2 endp

db  4Ch ; L
db  61h ; a
db  73h ; s
db  54h ; T



sub_1001F669 proc near
push    ds
push    edx
call    sub_1001C551
jb      loc_1001F72E
cmp     byte ptr ds:[ebp+1C2h], 1
jnz     loc_1001F724
cmp     word ptr ds:[ebp+14h], 1
mov     word ptr ds:[ebp+2A7h], 8
jz      loc_1001F72E
call    sub_1001C2E4
xor     eax, eax
mov     ds:[ebp+2A7h], ax
mov     ds:[ebp+659h], eax
cmp     dword ptr ds:[ebp+7A2h], 1
jnz     short loc_1001F6DC
call    sub_1001745A
jb      short loc_1001F72E
call    sub_1001755E
call    sub_100189B3
call    sub_10017A70
call    sub_100174C4
call    sub_10017B19
xor     eax, eax

loc_1001F6DC:
mov     ds:[ebp+7A2h], eax
mov     ds:[ebp+7E0h], eax
mov     byte ptr ds:[ebp+1C2h], 0
cmp     word ptr ds:[ebp+39Ch], 0
jz      short loc_1001F734
movzx   eax, word ptr ds:[ebp+39Ch]
mov     ds:[ebp+1C3h], al
xor     eax, eax
mov     ds:[ebp+39Ch], ax
jmp     short loc_1001F734
db  66h ; f
db  3Eh ; >
db 0C7h
db  85h
db 0A7h
db    2
db    0
db    0
db 0CCh
db    0
db 0EBh
db  0Ah

loc_1001F724:
mov     word ptr ds:[ebp+2A7h], 3

loc_1001F72E:
mov     eax, 0FFFFFFFFh
stc

loc_1001F734:
call    sub_1001C597
pop     edx
pop     ds
retn
sub_1001F669 endp

db 0EBh
db    7
push    ebp
mov     ebp, esp
mov     eax, [ebp+8]
pop     ebp
push    ebx
push    edx
call    sub_1001C551
jb      loc_1001F82B
cmp     byte ptr ds:[ebp+1C2h], 1
jnz     loc_1001F821
cmp     word ptr ds:[ebp+14h], 1
mov     word ptr ds:[ebp+2A7h], 8
jz      loc_1001F82B
cmp     dword ptr ds:[ebp+7A2h], 1
jnz     loc_1001F821
cmp     eax, 64h ; 'd'
jb      loc_1001F815
cmp     word ptr ds:[ebp+730h], 1
jnz     short loc_1001F7B1
mov     edi, eax
sub     edi, 64h ; 'd'
shl     edi, 3
add     edi, 0BDEh
add     edi, ebp
mov     ebx, edi
call    sub_10017B83
jmp     short loc_1001F7CC

loc_1001F7B1:
mov     ebx, eax
sub     ebx, 64h ; 'd'
push    eax
shl     ebx, 2
mov     eax, ebx
shl     ebx, 1
add     ebx, eax
pop     eax
movzx   edx, word ptr ds:[ebp+ebx+0BDEh]
or      edx, edx

loc_1001F7CC:
jnz     short loc_1001F7DA
mov     word ptr ds:[ebp+2A7h], 6Ah ; 'j'
jmp     short loc_1001F82B

loc_1001F7DA:
call    sub_1001745A
jb      short loc_1001F82B
call    sub_1001755E
call    sub_1001899B
call    sub_100174C4
jb      short loc_1001F82B
xor     eax, eax
cmp     word ptr ds:[ebp+730h], 1
jz      short loc_1001F80A
mov     ds:[ebp+ebx+0BDEh], ax
jmp     short loc_1001F831

loc_1001F80A:
mov     edi, ebx
mov     ecx, 2
rep stosd
jmp     short loc_1001F831

loc_1001F815:
mov     word ptr ds:[ebp+2A7h], 6
jmp     short loc_1001F82B

loc_1001F821:
mov     word ptr ds:[ebp+2A7h], 3

loc_1001F82B:
mov     eax, 0FFFFFFFFh
stc

loc_1001F831:
call    sub_1001C597
pop     edx
pop     ebx
retn
db 0EBh
db    7
push    ebp
mov     ebp, esp
mov     eax, [ebp+8]
pop     ebp
pusha
cld
call    sub_1001C551
jnb     short loc_1001F85A
mov     word ptr ds:[ebp+2A7h], 0CCh
jmp     loc_1001F9B7

loc_1001F85A:
cmp     word ptr ds:[ebp+14h], 1
mov     word ptr ds:[ebp+2A7h], 8
jz      loc_1001F9B7
mov     ds:[ebp+10h], esp
push    ebx
call    sub_1001F5A6
add     ebx, 143h
mov     ds:[ebp+0Ch], ebx
pop     ebx
push    eax
pop     eax
cmp     dword ptr ds:[ebp+7A2h], 1
jnz     loc_1001F982
cmp     eax, 64h ; 'd'
jb      loc_1001F98E
cmp     word ptr ds:[ebp+730h], 1
jz      short loc_1001F8EB
mov     ebx, eax
push    eax
sub     ebx, 64h ; 'd'
shl     ebx, 2
mov     eax, ebx
shl     ebx, 1
add     ebx, eax
pop     eax
cmp     word ptr ds:[ebp+ebx+0BDEh], 0
jnz     loc_1001F99A
call    sub_1001745A
jb      loc_1001F9B7
call    sub_1001755E
mov     edx, ds:[ebp+7E0h]
push    eax
mov     eax, edx
call    sub_100179E0
pop     eax
jmp     short loc_1001F916

loc_1001F8EB:
mov     edi, eax
sub     edi, 64h ; 'd'
shl     edi, 3
add     edi, 0BDEh
add     edi, ebp
call    sub_10017B83
jnz     loc_1001F99A
call    sub_1001745A
jb      loc_1001F9B7
call    sub_1001755E

loc_1001F916:
call    sub_1001890A
jb      loc_1001F9A6
cmp     word ptr ds:[ebp+730h], 1
jz      short loc_1001F96B
mov     edx, ds:[ebp+7E0h]
mov     ds:[ebp+ebx+0BDEh], dx
mov     edi, ebp
add     edi, 0BE0h
add     edi, ebx
cmp     dword ptr ds:[ebp+1588h], 1
jnz     short loc_1001F95A
mov     esi, ebp
add     esi, 826h
jmp     short loc_1001F964

loc_1001F95A:
mov     esi, ds:[ebp+72Ch]
add     esi, 12h

loc_1001F964:
mov     ecx, 0Ah
rep movsb

loc_1001F96B:
call    sub_100174C4
xor     eax, eax
call    sub_1001EE49
mov     ds:[ebp+2A7h], ax
clc
jmp     short loc_1001F9BD

loc_1001F982:
mov     word ptr ds:[ebp+2A7h], 3
jmp     short loc_1001F9B7

loc_1001F98E:
mov     word ptr ds:[ebp+2A7h], 6
jmp     short loc_1001F9B7

loc_1001F99A:
mov     word ptr ds:[ebp+2A7h], 6Bh ; 'k'
jmp     short loc_1001F9B7

loc_1001F9A6:
call    sub_100174C4
jmp     short loc_1001F9B7
db  66h ; f
db  3Eh ; >
db 0C7h
db  85h
db 0A7h
db    2
db    0
db    0
db 0CCh
db    0

loc_1001F9B7:
mov     eax, 0FFFFFFFFh
stc

loc_1001F9BD:
pushf
push    eax
pop     eax
popf
mov     edi, esp
mov     ss:[edi+1Ch], eax
popa
call    sub_1001C597
retn
db 0F8h
db 0EBh
db    1
db 0F9h
db 0EBh
db  18h
push    ebp
mov     ebp, esp
mov     eax, [ebp+8]
mov     edx, [ebp+0Ch]
pop     ebp
clc
jmp     short loc_1001F9EC
push    ebp
mov     ebp, esp
mov     eax, [ebp+8]
mov     edx, [ebp+0Ch]
pop     ebp
stc

loc_1001F9EC:
pusha
mov     ebx, eax
mov     ecx, edx
mov     eax, 0
rcl     eax, 1
call    sub_1001C551
jb      loc_1001FADF
cmp     byte ptr ds:[ebp+1C2h], 1
jnz     loc_1001FAAA
cmp     word ptr ds:[ebp+14h], 1
mov     word ptr ds:[ebp+2A7h], 8
jz      loc_1001FADF
mov     ds:[ebp+0], eax
mov     ds:[ebp+10h], esp
push    ebx
call    sub_1001F5A6
add     ebx, 0B0h
mov     ds:[ebp+0Ch], ebx
pop     ebx
push    eax
push    ebx
push    ecx
pop     ecx
pop     ebx
pop     eax
cmp     bx, ds:[ebp+1CBh]
jb      short loc_1001FAB6
mov     edx, ebx
add     edx, ecx
movzx   eax, word ptr ds:[ebp+1CBh]
add     ax, ds:[ebp+1CDh]
cmp     edx, eax
ja      short loc_1001FAB6
sub     bx, ds:[ebp+1CBh]
call    sub_1001745A
jb      short loc_1001FADF
call    sub_1001755E
mov     eax, ds:[ebp+7E0h]
call    sub_100179E0
mov     eax, ds:[ebp+0]
call    sub_100189F9
jb      short loc_1001FACE
call    sub_100174C4
xor     eax, eax
call    sub_1001EE49
mov     ds:[ebp+2A7h], ax
clc
jmp     short loc_1001FAE5

loc_1001FAAA:
mov     word ptr ds:[ebp+2A7h], 3
jmp     short loc_1001FADF

loc_1001FAB6:
mov     word ptr ds:[ebp+2A7h], 4
jmp     short loc_1001FADF
db  66h ; f
db  3Eh ; >
db 0C7h
db  85h
db 0A7h
db    2
db    0
db    0
db 0CCh
db    0
db 0EBh
db  11h

loc_1001FACE:
call    sub_100174C4
jmp     short loc_1001FADF
db  66h ; f
db  3Eh ; >
db 0C7h
db  85h
db 0A7h
db    2
db    0
db    0
db    6
db    0

loc_1001FADF:
mov     eax, 0FFFFFFFFh
stc

loc_1001FAE5:
pushf
push    eax
pop     eax
popf
mov     edi, esp
mov     ss:[edi+1Ch], eax
popa
call    sub_1001C597
retn
db 0E8h
db  56h ; V
db 0CAh
db 0FFh
db 0FFh
db  72h ; r
db  29h ; )
db  3Eh ; >
db  80h
db 0BDh
db 0C2h
db    1
db    0
db    0
db    1
db  75h ; u
db  15h
db  3Eh ; >
db  0Fh
db 0B7h
db  85h
db 0CDh
db    1
db    0
db    0
db  66h ; f
db  3Eh ; >
db 0C7h
db  85h
db 0A7h
db    2
db    0
db    0
db    0
db    0
db 0F8h
db 0EBh
db  10h
db  66h ; f
db  3Eh ; >
db 0C7h
db  85h
db 0A7h
db    2
db    0
db    0
db    3
db    0
db 0B8h
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0F9h
db 0E8h
db  66h ; f
db 0CAh
db 0FFh
db 0FFh
db 0C3h



sub_1001FB32 proc near
call    sub_1001C551
jb      short loc_1001FB62
cmp     byte ptr ds:[ebp+1C2h], 1
jnz     short loc_1001FB58
movzx   eax, word ptr ds:[ebp+1CBh]
mov     word ptr ds:[ebp+2A7h], 0
clc
jmp     short loc_1001FB68

loc_1001FB58:
mov     word ptr ds:[ebp+2A7h], 3

loc_1001FB62:
mov     eax, 0FFFFFFFFh
stc

loc_1001FB68:
call    sub_1001C597
retn
sub_1001FB32 endp

db 0E8h
db 0DEh
db 0C9h
db 0FFh
db 0FFh
db  72h ; r
db  35h ; 5
db  3Eh ; >
db  80h
db 0BDh
db 0C2h
db    1
db    0
db    0
db    1
db  75h ; u
db  2Bh ; +
db  3Eh ; >
db  83h
db 0BDh
db 0A2h
db    7
db    0
db    0
db    1
db  75h ; u
db  15h
db  3Eh ; >
db  0Fh
db 0B7h
db  85h
db 0E4h
db    7
db    0
db    0
db  66h ; f
db  3Eh ; >
db 0C7h
db  85h
db 0A7h
db    2
db    0
db    0
db    0
db    0
db 0F8h
db 0EBh
db  1Ch
db  66h ; f
db  3Eh ; >
db 0C7h
db  85h
db 0A7h
db    2
db    0
db    0
db  6Ah ; j
db    0
db 0EBh
db  0Ah
db  66h ; f
db  3Eh ; >
db 0C7h
db  85h
db 0A7h
db    2
db    0
db    0
db    3
db    0
db 0B8h
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db 0F9h
db 0E8h
db 0D8h
db 0C9h
db 0FFh
db 0FFh
db 0C3h
db  53h ; S
db  51h ; Q
db  66h ; f
db  2Eh ; .
db  81h
db  3Dh ; =
dd offset word_1001C58A
db  34h ; 4
db  12h
db  74h ; t
db  5Dh ; ]
db 0E8h
db  7Eh ; ~
db 0C9h
db 0FFh
db 0FFh
db  72h ; r
db  56h ; V
db  3Eh ; >
db  0Fh
db 0B7h
db  85h
db 0A7h
db    2
db    0
db    0
db  98h
db  3Dh ; =
db 0C8h
db    0
db    0
db    0
db  72h ; r
db  34h ; 4
db  3Dh ; =
db  2Ch ; ,
db    1
db    0
db    0
db  73h ; s
db  2Dh ; -
db  33h ; 3
db 0DBh
db 0B9h
db    2
db    0
db    0
db    0
db  49h ; I
db  3Eh ; >
db  81h
db 0BCh
db  1Dh
db  96h
db    7
db    0
db    0
db 0C8h
db    0
db    0
db    0
db  74h ; t
db  12h
db  3Eh ; >
db  39h ; 9
db  84h
db  1Dh
db  96h
db    7
db    0
db    0
db  73h ; s
db    8
db  3Eh ; >
db  8Bh
db  84h
db  1Dh
db  96h
db    7
db    0
db    0
db  83h
db 0C3h
db    4
db 0E2h
db 0DBh
db  66h ; f
db  3Eh ; >
db 0C7h
db  85h
db 0A7h
db    2
db    0
db    0
db    0
db    0
db 0E8h
db  9Bh
db  7Dh ; }
db 0FFh
db 0FFh
db 0F8h
db 0EBh
db    7
db 0B8h
db    3
db    0
db    0
db    0
db 0EBh
db    5
db 0E8h
db  60h ; `
db 0C9h
db 0FFh
db 0FFh
db  59h ; Y
db  5Bh ; [
db 0C3h
db 0F8h
db 0EBh
db    1
db 0F9h
db 0FCh
db  60h ; `
db  73h ; s
db  0Dh
push    ebp
mov     ebp, esp
mov     eax, [ebp+28h]
mov     edx, [ebp+2Ch]
mov     ebx, [ebp+30h]
pop     ebp
call    sub_1001C551
jnb     short loc_1001FC5D
mov     eax, 0FFFFFFFFh
jmp     short loc_1001FCA7

loc_1001FC5D:
call    sub_1001B707
or      eax, eax
jnz     short loc_1001FC6D
mov     eax, ds:[ebp+3DAh]

loc_1001FC6D:
mov     ds:[ebp+3CEh], eax
or      edx, edx
jnz     short loc_1001FC7F
mov     edx, ds:[ebp+3DEh]

loc_1001FC7F:
mov     ds:[ebp+3D2h], edx
or      ebx, ebx
jnz     short loc_1001FC91
mov     ebx, ds:[ebp+3E2h]

loc_1001FC91:
mov     ds:[ebp+3D6h], ebx
cmp     byte ptr ds:[ebp+1C2h], 1
jnz     short loc_1001FCA7
call    sub_1001CB1E

loc_1001FCA7:
call    sub_1001C597
popa
retn
db 0F8h
db 0EBh
db    1
db 0F9h
db 0FCh
db  60h ; `
db  73h ; s
db  0Ah
push    ebp
mov     ebp, esp
mov     eax, [ebp+28h]
mov     edx, [ebp+2Ch]
pop     ebp
call    sub_1001C551
jnb     short loc_1001FCD3
mov     eax, 0FFFFFFFFh
call    sub_1001C597
jmp     short loc_1001FD00

loc_1001FCD3:
cmp     word ptr ds:[ebp+39Ch], 0
jnz     short loc_1001FCEF
mov     bh, 1
mov     bl, ds:[ebp+1C3h]
mov     ds:[ebp+39Ch], bx

loc_1001FCEF:
mov     ds:[ebp+1C3h], dl
call    sub_1001C597
call    sub_1001EE79

loc_1001FD00:
mov     edi, esp
mov     ss:[edi+1Ch], eax
popa
retn
db 0EBh
db    7


; Attributes: bp-based frame

sub_1001FD0A proc near

arg_0= dword ptr  8

push    ebp
mov     ebp, esp
mov     eax, [ebp+arg_0]
pop     ebp
cld
call    sub_1001C551
jb      short loc_1001FD4C
cmp     dword ptr ds:[ebp+6CCh], 1
jnz     short loc_1001FD34
mov     word ptr ds:[ebp+2A7h], 2Ch ; ','
call    sub_1001C597
jmp     short loc_1001FD4C

loc_1001FD34:
mov     ds:[ebp+655h], eax
xor     eax, eax
mov     ds:[ebp+2A7h], ax
call    sub_1001C597
jmp     short locret_1001FD51

loc_1001FD4C:
mov     eax, 0FFFFFFFFh

locret_1001FD51:
retn
sub_1001FD0A endp

db 0EBh
db    7
push    ebp
mov     ebp, esp
mov     eax, [ebp+8]
pop     ebp
cld
call    sub_1001C551
jb      short loc_1001FDAD
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short locret_1001FDB2
mov     ebp, eax
mov     edx, 9966h
xor     eax, eax
in      ax, dx
cmp     eax, 9966h
jnz     short loc_1001FDA1
mov     edx, 9966h
xor     eax, eax
in      al, dx
cmp     al, 55h ; 'U'
jnz     short loc_1001FDA1
inc     edx
in      al, dx
cmp     al, 88h
jnz     short loc_1001FDA1
mov     edx, 9966h
mov     eax, 9
out     dx, ax
xor     eax, eax
jmp     short loc_1001FDA6

loc_1001FDA1:
mov     eax, 0FFFFFFFFh

loc_1001FDA6:
call    sub_1001C597
jmp     short locret_1001FDB2

loc_1001FDAD:
mov     eax, 0FFFFFFFFh

locret_1001FDB2:
retf
db 0EBh
db    7
push    ebp
mov     ebp, esp
mov     eax, [ebp+8]
pop     ebp
cld
call    sub_1001C551
jb      short loc_1001FDF7
cmp     dword ptr ds:[ebp+6CCh], 1
jnz     short loc_1001FDDF
mov     word ptr ds:[ebp+2A7h], 2Dh ; '-'
call    sub_1001C597
jmp     short locret_1001FDFD

loc_1001FDDF:
mov     ds:[ebp+6D4h], eax
xor     eax, eax
mov     ds:[ebp+2A7h], ax
call    sub_1001C597
jmp     short locret_1001FDFD

loc_1001FDF7:
mov     eax, 0FFFFFFFFh
stc

locret_1001FDFD:
retn
db 0EBh
db    7
push    ebp
mov     ebp, esp
mov     eax, [ebp+8]
pop     ebp
push    edi
cld
call    sub_1001C551
jb      short loc_1001FE62
mov     edi, eax
cmp     byte ptr ds:[ebp+1C2h], 1
jnz     short loc_1001FE6A
cmp     dword ptr ds:[ebp+659h], 1
jnz     short loc_1001FE53
shl     eax, 1
add     eax, ds:[ebp+6D0h]
cmp     eax, 2
jz      short loc_1001FE6A
cmp     eax, 1
jnz     loc_1001FECC
cmp     dword ptr ds:[ebp+6CCh], 1
jnz     short loc_1001FE6A
mov     word ptr ds:[ebp+2A7h], 29h ; ')'
jmp     short loc_1001FE5D

loc_1001FE53:
mov     word ptr ds:[ebp+2A7h], 2Ah ; '*'

loc_1001FE5D:
call    sub_1001C597

loc_1001FE62:
mov     eax, 0FFFFFFFFh
stc
jmp     short loc_1001FEDA

loc_1001FE6A:
or      edi, edi
jnz     short loc_1001FE90
cmp     dword ptr ds:[ebp+6D8h], 1
jnz     short loc_1001FECC
mov     dword ptr ds:[ebp+6D8h], 0
mov     dword ptr ds:[ebp+655h], 0
jmp     short loc_1001FECC

loc_1001FE90:
cmp     dword ptr ds:[ebp+655h], 0
jnz     short loc_1001FECC
cmp     byte ptr ds:[ebp+1C2h], 1
jnz     short loc_1001FEB6
movzx   eax, word ptr ds:[ebp+653h]
inc     eax
mov     ds:[ebp+655h], eax
jmp     short loc_1001FEC1

loc_1001FEB6:
mov     dword ptr ds:[ebp+655h], 1

loc_1001FEC1:
mov     dword ptr ds:[ebp+6D8h], 1

loc_1001FECC:
mov     ds:[ebp+6D0h], edi
xor     eax, eax
call    sub_1001C597

loc_1001FEDA:
pop     edi
retn
push    ebp
mov     ebp, esp
mov     eax, [ebp+8]
pop     ebp
cld
call    sub_1001C551
jb      short loc_1001FF32
cmp     byte ptr ds:[ebp+1C2h], 1
jnz     short loc_1001FF23
cmp     dword ptr ds:[ebp+6D0h], 1
jnz     short loc_1001FF17
cmp     dword ptr ds:[ebp+6CCh], 1
jnz     short loc_1001FF17
call    sub_10019A45
xor     eax, eax
call    sub_1001C597
jmp     short locret_1001FF38

loc_1001FF17:
mov     word ptr ds:[ebp+2A7h], 2Bh ; '+'
jmp     short loc_1001FF2D

loc_1001FF23:
mov     word ptr ds:[ebp+2A7h], 3

loc_1001FF2D:
call    sub_1001C597

loc_1001FF32:
mov     eax, 0FFFFFFFFh
stc

locret_1001FF38:
retn
db 0EBh
db    7
push    ebp
mov     ebp, esp
mov     eax, [ebp+8]
pop     ebp
cld
call    sub_1001C551
jb      short loc_1001FF62
mov     ds:[ebp+6E8h], eax
xor     eax, eax
mov     ds:[ebp+2A7h], ax
call    sub_1001C597
jmp     short locret_1001FF68

loc_1001FF62:
mov     eax, 0FFFFFFFFh
stc

locret_1001FF68:
retn



sub_1001FF69 proc near
push    eax
push    ebx
push    ecx
push    edx
push    ebp
mov     ebp, eax
mov     edx, 9944h
mov     eax, 9
out     dx, ax
pop     ebp
pop     edx
pop     ecx
pop     ebx
pop     eax
retn
sub_1001FF69 endp




sub_1001FF82 proc near
pusha
cmp     byte ptr ds:[ebp+1551h], 1
jnz     short loc_1001FFBC
cmp     dword ptr ds:[ebp+6E8h], 0
jnz     short loc_1001FFBC
mov     edx, 9944h
xor     eax, eax
in      ax, dx
cmp     eax, edx
jnz     short loc_1001FFBC
xor     eax, eax
in      al, dx
cmp     al, 33h ; '3'
jnz     short loc_1001FFBC
inc     edx
in      al, dx
cmp     al, 88h
jnz     short loc_1001FFBC
pushf
mov     edx, 9942h
in      ax, dx
mov     edx, eax
popf

loc_1001FFBC:
jnz     short loc_1001FFE7
mov     ds:[ebp+6E0h], edx
mov     dword ptr ds:[ebp+6DCh], 1
xor     eax, eax
call    sub_1001FF69
mov     eax, ds:[ebp+655h]
or      eax, eax
jz      short loc_1001FFE7
call    sub_1001FF69

loc_1001FFE7:
popa
retn
sub_1001FF82 endp

db    0
db    0
db    0
db    0
db    0
db  85h
db  9Eh
db  16h
db    1
db  6Ah ; j
db    0
db 0F8h
db 0EBh
db    1



sub_1001FFF7 proc near

; FUNCTION CHUNK AT 1002030D SIZE 0000006F BYTES
; FUNCTION CHUNK AT 10020394 SIZE 00000076 BYTES

stc
pushf
push    eax
cld
call    sub_1001C551
jnb     short loc_10020017

loc_10020002:
jmp     short loc_1002000A
db 0B8h
db  23h ; #
db    0
db    0
db    0
db 0F4h

loc_1002000A:
pop     eax
popf
xor     eax, eax
not     eax
stc
call    sub_1001C597
retn

loc_10020017:
call    sub_1002040A
jz      short loc_10020002
push    ebx
mov     eax, 39h ; '9'
call    sub_100202BB
sub     ebx, eax
jmp     short $+2

loc_1002002D:
cmp     word ptr cs:[ebx], 0
pop     ebx
jz      short loc_10020042
call    sub_1002016C
jb      short loc_10020002
jnz     short loc_10020002
or      eax, eax
jnz     short loc_10020002

loc_10020042:
pusha
popa
push    ebx
call    sub_100202BB
add     ebx, 0Ch
mov     eax, ebx
pop     ebx
push    eax
jmp     loc_1002030D
sub_1001FFF7 endp

db  67h ; g
db  6Ch ; l
db 0C9h
db 0EEh
db 0E3h
db  4Fh ; O
db  57h ; W
db  84h
db 0F0h
db 0F6h
db 0E7h
db 0AFh
db 0DBh
db  9Ch
db  48h ; H
db  57h ; W
db  77h ; w
db  21h ; !
db 0B3h
db 0C3h
db  71h ; q
db  85h
db  86h
db  21h ; !
db  49h ; I
db  59h ; Y
db  6Dh ; m
db    8
db 0A4h
db  35h ; 5
db  6Ah ; j
db 0CCh
db  9Eh
db  0Dh
db  9Ah
db 0B9h
db  80h
db 0F9h
db  6Bh ; k
db 0FBh
db  94h
db 0CEh
db 0EDh
db 0C4h
db  4Bh ; K
db 0E7h
db  27h ; '
db  4Bh ; K
db  7Eh ; ~
db  34h ; 4
db  5Eh ; ^
db  89h
db 0D6h
db  6Ch ; l
db  78h ; x
db  37h ; 7
db  32h ; 2
db 0A1h
db  37h ; 7
db  8Eh
db  70h ; p
db 0CAh
db 0A7h
db  9Bh
db 0D5h
db  23h ; #
db  48h ; H
db    6
db 0BCh
db 0B9h
db  10h
db 0A8h
db 0CBh
db  33h ; 3
db  45h ; E
db 0F7h
db 0DAh
db  98h
db 0C1h
db  25h ; %
db 0CAh
db  54h ; T
db 0A0h
db  94h
db 0A7h
db 0EFh
db  82h
db 0A4h
db  81h
db  49h ; I
db  91h
db  67h ; g
db  76h ; v
db 0FCh
db  73h ; s
db  68h ; h
db 0A5h
db 0F0h
db  30h ; 0
db    8
db 0AFh
db  0Ah
db 0BCh
db  38h ; 8
db  66h ; f
db  37h ; 7
db  43h ; C
db  8Ch
db 0CEh
db 0B2h
db 0BBh
db  74h ; t
db 0F9h
db 0B9h
db 0D7h
db  4Bh ; K
db 0B6h
db  83h
db  9Fh
db  10h
db  56h ; V
db  2Eh ; .
db  4Ah ; J
db 0B6h
db  96h
db  72h ; r
db  81h
db  96h
db  0Dh
db 0AFh
db 0ECh
db 0CDh
db  32h ; 2
db    1
db  9Eh
db  83h
db  36h ; 6
db  38h ; 8
db  5Ah ; Z
db 0CAh
db 0A9h
db 0AEh
db  2Eh ; .
db 0BEh
db 0ABh
db  8Fh
db  62h ; b
db  3Bh ; ;
db 0B7h
db 0A1h
db  4Fh ; O
db 0ADh
db 0B7h
db  0Bh
db  65h ; e
db  5Eh ; ^
db  36h ; 6
db 0F8h
db  4Dh ; M
db 0C2h
db 0F2h
db  0Bh
db  79h ; y
db  17h
db  70h ; p
db 0B0h
db  8Dh
db 0D1h
db  9Ch
db    0
db 0FEh
db  4Dh ; M
db 0A5h
db  9Dh
db 0EAh
db 0F5h
db 0D3h
db  81h
db  2Fh ; /
db  83h
db 0BEh
db 0B4h
db 0FFh
db  25h ; %
db  60h ; `
db  72h ; r
db  2Ah ; *
db  47h ; G
db  8Dh
db 0C3h
db  73h ; s
db 0D4h
db    8
db 0C7h
db  26h ; &
db  94h
db  4Fh ; O
db 0EEh
db 0ECh
db  70h ; p
db  46h ; F
db 0B7h
db  3Fh ; ?
db 0DCh
db  3Ah ; :
db 0A3h
db 0A9h
db  72h ; r
db  9Bh
db  0Eh
db  64h ; d
db 0A2h
db  4Bh ; K
db  3Eh ; >
db  34h ; 4
db  10h
db  6Dh ; m
db  0Bh
db 0CCh
db  89h
db  65h ; e
db  33h ; 3
db 0BAh
db  6Fh ; o
db    7
db  84h
db 0DDh
db  2Ch ; ,
db 0B6h
db  42h ; B
db  97h
db 0FFh
db 0F3h
db 0EBh
db  2Bh ; +
db 0D9h
db  61h ; a
db  4Ch ; L
db  2Eh ; .
db 0E4h
db  0Fh
db 0D1h
db 0A3h
db    8
db 0D4h
db    8
db  6Bh ; k
db  8Ch
db  2Eh ; .
db 0C2h
db 0E4h
db 0B7h
db 0BEh
db 0D1h
db 0EDh
db 0FFh
db 0DFh
db 0D4h
db  23h ; #
db    7
db  1Ch
db 0A7h
db  91h
db  51h ; Q
db 0DAh
db  6Dh ; m
db  50h ; P
db  89h
db 0D3h
db 0D6h
db  3Ch ; <
db  88h
db 0EEh
db  22h ; "
db 0ECh
db  69h ; i
db  46h ; F
db 0CCh



sub_1002016C proc near
push    ds
push    es
pusha
xor     ecx, ecx
cmp     byte ptr ds:[ebp+1C2h], 1
jz      short loc_1002018A
mov     word ptr ds:[ebp+2A7h], 3
jmp     loc_1002028B

loc_1002018A:
mov     word ptr ds:[ebp+2A7h], 2
call    dword ptr ds:[ebp+1Ch]
call    dword ptr ds:[ebp+38h]
jb      loc_1002028B
push    ss
pop     es
sub     esp, 14h
mov     edi, esp
mov     ds:[ebp+0], esp
add     edi, 2
mov     dword ptr ds:[ebp+324h], 0FFFFFFFFh
call    dword ptr ds:[ebp+68h]
jb      loc_10020288
mov     word ptr ds:[ebp+2A7h], 0FFFFh
mov     ds:[ebp+18h], edi
mov     ecx, 8
xor     ebx, ebx
xor     eax, eax

loc_100201DC:
call    sub_100202BE
add     ax, dx
inc     ebx
loop    loc_100201DC
mov     ecx, 4

loc_100201EC:
call    sub_100202A6
add     ax, dx
inc     ebx
loop    loc_100201EC
mov     edx, ds:[ebp+0]
mov     ss:[edx], ax
push    ds
pop     es
call    sub_100202BB
sub     ebx, 216h
movzx   ecx, word ptr [ebx]
shr     ecx, 1
call    sub_100202BB
sub     ebx, 1C0h
mov     esi, ebx
mov     edi, ebx
mov     ebx, 6Ah ; 'j'

loc_10020225:
push    ecx
lodsw
call    sub_100202A6
xor     ax, dx
call    sub_100202BE
test    dh, 18h
jz      short loc_1002023E
xchg    ah, al
jmp     short loc_10020249

loc_1002023E:
mov     cl, dl
and     cl, 3
push    ecx
ror     al, cl
pop     ecx
rol     ah, cl

loc_10020249:
xor     eax, edx
stosw
mov     edx, ds:[ebp+0]
add     ss:[edx], ax
mov     ax, ss:[edx]
xchg    ah, al
mov     ss:[edx], ax
inc     ebx
pop     ecx
loop    loc_10020225
add     esp, 14h
mov     edx, ds:[ebp+0]
mov     ax, ss:[edx]
call    sub_100202BB
sub     ebx, 287h
add     ebx, 2
add     ax, [ebx]
mov     word ptr [ebx+2], 0
clc
jmp     short loc_10020291

loc_10020288:
add     esp, 14h

loc_1002028B:
stc
mov     eax, 0FFFFFFFFh

loc_10020291:
call    dword ptr ds:[ebp+20h]
mov     edi, esp
mov     ss:[edi+1Ch], eax
popa
pop     es
pop     ds
call    dword ptr ds:[ebp+1B4h]
retn
sub_1002016C endp




sub_100202A6 proc near
push    ebx
push    ds
and     ebx, 3
shl     ebx, 1
add     ebx, ds:[ebp+18h]
movzx   edx, word ptr ss:[ebx]
pop     ds
pop     ebx
retn
sub_100202A6 endp




sub_100202BB proc near
pop     ebx
jmp     ebx
sub_100202BB endp ; sp-analysis failed




sub_100202BE proc near
push    eax
push    ebx
push    ds
mov     al, ds:[ebp+1DAh]
and     eax, 7
and     ebx, 7
cmp     ebx, 7
jnz     short loc_100202DB
xor     ebx, ebx

loc_100202DB:
add     ebx, eax
cmp     ebx, 7
jl      short loc_100202E5
sub     ebx, 7

loc_100202E5:
mov     dl, ds:[ebp+ebx+1D3h]
inc     ebx
cmp     ebx, 7
jnz     short loc_100202F5
xor     ebx, ebx

loc_100202F5:
mov     dh, ds:[ebp+ebx+1D3h]
pop     ds
pop     ebx
pop     eax
retn
sub_100202BE endp

db  72h ; r
db    6
db  83h
db 0C4h
db  0Ch
db 0F8h
db 0EBh
db    4
db  83h
db 0C4h
db  0Ch
db 0F9h
; START OF FUNCTION CHUNK FOR sub_1001FFF7

loc_1002030D:
pushf
push    ds
push    es
pusha
push    ds
pop     es
call    sub_100202BB
add     ebx, 6Ah ; 'j'
cmp     byte ptr [ebx], 0
jnz     short loc_10020355
push    ds
push    ebx
mov     edi, ebx
add     edi, 2
mov     bl, ds:[ebp+1DAh]
and     ebx, 7
mov     ecx, 7

loc_10020339:
mov     al, ds:[ebp+ebx+1D3h]
stosb
mov     es:[edi+7], al
inc     ebx
cmp     ebx, 7
jnz     short loc_1002034E
xor     ebx, ebx

loc_1002034E:
loop    loc_10020339
pop     ebx
pop     ds
xor     byte ptr [ebx], 1

loc_10020355:
cmp     byte ptr [ebx+1], 1
jz      short loc_10020394
mov     eax, esp
mov     eax, ss:[eax+2Ch]
mov     [ebx-4], eax
xor     byte ptr [ebx+1], 1
mov     edi, ebx
mov     esi, ebx
add     esi, 0Ah
add     edi, 2
mov     ecx, 4
rep movsw
jmp     short loc_100203B2
; END OF FUNCTION CHUNK FOR sub_1001FFF7
db  16h
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
; START OF FUNCTION CHUNK FOR sub_1001FFF7

loc_10020394:
push    ds
call    dword ptr ds:[ebp+40h]
pop     ds
mov     [ebx+9], dh
mov     edi, ebx
mov     esi, ebx
add     esi, 2
add     edi, 0Ah
mov     ecx, 2
rep movsd
xor     byte ptr [ebx+1], 1

loc_100203B2:
mov     esi, [ebx-4]
movzx   ecx, word ptr [ebx-6]
mov     edi, ebx
add     edi, 2
push    ebx
xor     ebx, ebx

loc_100203C1:
cmp     ebx, 7
jl      short loc_100203CA
xor     edx, edx
jmp     short loc_100203CD

loc_100203CA:
mov     edx, ebx
inc     edx

loc_100203CD:
mov     al, [edi+edx]
mul     bl
mov     ah, al
lodsb
xor     al, [edi+ebx]
xor     al, ah
mov     [esi-1], al
mov     al, [edi+ebx]
xor     al, [edi+edx]
add     [edi+ebx], al
cmp     byte ptr [edi+ebx], 0
jnz     short loc_100203F0
mov     byte ptr [edi+ebx], 0C3h

loc_100203F0:
mov     ebx, edx
loop    loc_100203C1
pop     ebx
mov     bl, [ebx+1]
rcr     bl, 1
popa
pop     es
pop     ds
jnb     short loc_10020401
popf
retn

loc_10020401:
pusha
popa
popf
call    sub_1001C597
retn
; END OF FUNCTION CHUNK FOR sub_1001FFF7



sub_1002040A proc near
mov     word ptr ds:[ebp+2A7h], 8
cmp     word ptr ds:[ebp+14h], 1
retn
sub_1002040A endp

db    0
db    0
db    0
db  2Bh ; +
db 0BDh
db  3Eh ; >
db    1
db  6Ah ; j
db    0
db 0F8h
db 0EBh
db    1



sub_10020427 proc near

; FUNCTION CHUNK AT 10020765 SIZE 0000006F BYTES
; FUNCTION CHUNK AT 100207EC SIZE 00000076 BYTES

stc
pushf
push    eax
cld
call    sub_1001C551
jnb     short loc_10020447

loc_10020432:
jmp     short loc_1002043A
db 0B8h
db  23h ; #
db    0
db    0
db    0
db 0F4h

loc_1002043A:
pop     eax
popf
xor     eax, eax
not     eax
stc
call    sub_1001C597
retn

loc_10020447:
call    sub_10020862
jz      short loc_10020432
push    ebx
mov     eax, 39h ; '9'
call    sub_10020713
sub     ebx, eax
jmp     short $+2

loc_1002045D:
cmp     word ptr cs:[ebx], 0
pop     ebx
jz      short loc_10020472
call    sub_100205C4
jb      short loc_10020432
jnz     short loc_10020432
or      eax, eax
jnz     short loc_10020432

loc_10020472:
pusha
popa
push    ebx
call    sub_10020713
add     ebx, 0Ch
mov     eax, ebx
pop     ebx
push    eax
jmp     loc_10020765
sub_10020427 endp

db  67h ; g
db  6Ch ; l
db 0C9h
db 0EEh
db 0E3h
db  4Fh ; O
db  57h ; W
db  84h
db 0F0h
db 0F6h
db 0E7h
db 0AFh
db 0DBh
db  9Ch
db  48h ; H
db  57h ; W
db  77h ; w
db  21h ; !
db 0BBh
db 0C3h
db  71h ; q
db  85h
db  86h
db  21h ; !
db  49h ; I
db  59h ; Y
db  6Dh ; m
db    8
db 0A4h
db  35h ; 5
db  6Ah ; j
db 0CCh
db  9Eh
db  0Dh
db  9Ah
db 0B9h
db  80h
db 0F9h
db  6Bh ; k
db 0FBh
db  94h
db 0CEh
db 0EDh
db 0C4h
db  4Bh ; K
db 0E7h
db  27h ; '
db  4Bh ; K
db  7Eh ; ~
db  34h ; 4
db  76h ; v
db  89h
db 0D6h
db  6Ch ; l
db  78h ; x
db  37h ; 7
db  32h ; 2
db 0A1h
db  37h ; 7
db  8Eh
db  70h ; p
db 0CBh
db 0A7h
db  9Bh
db 0D5h
db  1Fh
db  48h ; H
db    6
db 0BCh
db 0B9h
db 0D6h
db 0A8h
db 0CBh
db  33h ; 3
db  45h ; E
db 0F7h
db 0DAh
db  98h
db 0C1h
db  25h ; %
db 0CAh
db  7Ch ; |
db 0A0h
db  94h
db 0A7h
db 0EFh
db 0C1h
db 0A4h
db  81h
db  49h ; I
db  91h
db  67h ; g
db  76h ; v
db 0FCh
db  73h ; s
db  68h ; h
db 0A5h
db 0F0h
db  30h ; 0
db    8
db  2Bh ; +
db  32h ; 2
db    1
db  9Bh
db 0D3h
db  6Fh ; o
db  15h
db  32h ; 2
db 0CFh
db  78h ; x
db 0BBh
db 0B8h
db  78h ; x
db  88h
db  1Ah
db  4Bh ; K
db 0B6h
db  82h
db 0C3h
db  1Bh
db  84h
db 0FEh
db  12h
db    1
db 0C3h
db 0C2h
db  64h ; d
db 0DCh
db 0CAh
db  91h
db 0F6h
db  2Eh ; .
db 0B7h
db    1
db 0F0h
db  5Ch ; \
db 0C9h
db 0C7h
db  5Fh ; _
db  53h ; S
db  8Bh
db  81h
db  8Ch
db  3Ch ; <
db  0Bh
db 0D5h
db  97h
db  65h ; e
db 0E2h
db  5Fh ; _
db  6Eh ; n
db  2Fh ; /
db 0D2h
db  73h ; s
db 0E9h
db  68h ; h
db 0D4h
db  9Eh
db 0DAh
db  68h ; h
db 0CFh
db 0F5h
db 0FDh
db  75h ; u
db  16h
db 0CDh
db  7Ch ; |
db  27h ; '
db  6Eh ; n
db  7Ah ; z
db  8Ch
db  77h ; w
db  70h ; p
db 0EDh
db  66h ; f
db  89h
db  17h
db  9Bh
db  88h
db    6
db  41h ; A
db  49h ; I
db    0
db  5Fh ; _
db    0
db  15h
db  0Ah
db  0Fh
db 0C1h
db 0BBh
db 0D9h
db  51h ; Q
db  36h ; 6
db    6
db  75h ; u
db  6Bh ; k
db 0D6h
db 0C6h
db  2Fh ; /
db 0D4h
db  63h ; c
db 0EEh
db 0ABh
db 0B4h
db  5Ch ; \
db  61h ; a
db  58h ; X
db  86h
db 0D7h
db  8Ah
db    2
db  96h
db  67h ; g
db    0
db 0AAh
db  28h ; (
db 0AAh
db  37h ; 7
db  6Fh ; o
db  0Ch
db  8Eh
db  31h ; 1
db 0BBh
db  2Dh ; -
db  51h ; Q
db    6
db 0BCh
db 0C0h
db  71h ; q
db  7Ch ; |
db 0B3h
db  85h
db  95h
db 0FFh
db 0EAh
db 0E7h
db  2Dh ; -
db 0C9h
db 0FFh
db  28h ; (
db 0CDh
db 0EFh
db 0EFh
db  8Dh
db 0B2h
db    0
db  9Ah
db 0D1h
db  62h ; b
db  46h ; F
db  82h
db  83h
db  7Bh ; {
db 0EFh
db 0C1h
db  1Ch
db  20h
db  29h ; )
db 0D8h
db 0F8h
db 0C9h
db  5Eh ; ^
db  6Fh ; o
db  3Ch ; <
db 0ECh
db 0CEh
db  61h ; a
db 0D7h
db  94h
db  5Fh ; _
db 0D4h
db  2Ah ; *
db  2Ah ; *
db 0DDh
db  2Bh ; +
db  56h ; V
db  71h ; q
db  49h ; I
db  6Ch ; l
db 0F0h
db 0FEh
db    5
db  55h ; U
db  8Fh
db 0A8h
db  57h ; W
db 0A9h
db 0D1h
db  73h ; s
db  3Ah ; :
db  48h ; H
db  84h
db  3Ch ; <
db 0B6h
db 0FBh
db 0AFh
db 0B4h
db  4Ch ; L
db  33h ; 3
db  36h ; 6
db 0F4h
db    4
db 0A4h
db  92h
db  43h ; C
db 0E5h
db  96h
db  68h ; h
db 0A3h
db 0E7h
db 0CBh
db  98h
db  23h ; #
db 0A0h
db  18h
db  58h ; X
db 0EAh
db 0A1h



sub_100205C4 proc near
push    ds
push    es
pusha
xor     ecx, ecx
cmp     byte ptr ds:[ebp+1C2h], 1
jz      short loc_100205E2
mov     word ptr ds:[ebp+2A7h], 3
jmp     loc_100206E3

loc_100205E2:
mov     word ptr ds:[ebp+2A7h], 2
call    dword ptr ds:[ebp+1Ch]
call    dword ptr ds:[ebp+38h]
jb      loc_100206E3
push    ss
pop     es
sub     esp, 14h
mov     edi, esp
mov     ds:[ebp+0], esp
add     edi, 2
mov     dword ptr ds:[ebp+324h], 0FFFFFFFFh
call    dword ptr ds:[ebp+68h]
jb      loc_100206E0
mov     word ptr ds:[ebp+2A7h], 0FFFFh
mov     ds:[ebp+18h], edi
mov     ecx, 8
xor     ebx, ebx
xor     eax, eax

loc_10020634:
call    sub_10020716
add     ax, dx
inc     ebx
loop    loc_10020634
mov     ecx, 4

loc_10020644:
call    sub_100206FE
add     ax, dx
inc     ebx
loop    loc_10020644
mov     edx, ds:[ebp+0]
mov     ss:[edx], ax
push    ds
pop     es
call    sub_10020713
sub     ebx, 23Eh
movzx   ecx, word ptr [ebx]
shr     ecx, 1
call    sub_10020713
sub     ebx, 1E8h
mov     esi, ebx
mov     edi, ebx
mov     ebx, 6Ah ; 'j'

loc_1002067D:
push    ecx
lodsw
call    sub_100206FE
xor     ax, dx
call    sub_10020716
test    dh, 18h
jz      short loc_10020696
xchg    ah, al
jmp     short loc_100206A1

loc_10020696:
mov     cl, dl
and     cl, 3
push    ecx
ror     al, cl
pop     ecx
rol     ah, cl

loc_100206A1:
xor     eax, edx
stosw
mov     edx, ds:[ebp+0]
add     ss:[edx], ax
mov     ax, ss:[edx]
xchg    ah, al
mov     ss:[edx], ax
inc     ebx
pop     ecx
loop    loc_1002067D
add     esp, 14h
mov     edx, ds:[ebp+0]
mov     ax, ss:[edx]
call    sub_10020713
sub     ebx, 2AFh
add     ebx, 2
add     ax, [ebx]
mov     word ptr [ebx+2], 0
clc
jmp     short loc_100206E9

loc_100206E0:
add     esp, 14h

loc_100206E3:
stc
mov     eax, 0FFFFFFFFh

loc_100206E9:
call    dword ptr ds:[ebp+20h]
mov     edi, esp
mov     ss:[edi+1Ch], eax
popa
pop     es
pop     ds
call    dword ptr ds:[ebp+1B4h]
retn
sub_100205C4 endp




sub_100206FE proc near
push    ebx
push    ds
and     ebx, 3
shl     ebx, 1
add     ebx, ds:[ebp+18h]
movzx   edx, word ptr ss:[ebx]
pop     ds
pop     ebx
retn
sub_100206FE endp




sub_10020713 proc near
pop     ebx
jmp     ebx
sub_10020713 endp ; sp-analysis failed




sub_10020716 proc near
push    eax
push    ebx
push    ds
mov     al, ds:[ebp+1DAh]
and     eax, 7
and     ebx, 7
cmp     ebx, 7
jnz     short loc_10020733
xor     ebx, ebx

loc_10020733:
add     ebx, eax
cmp     ebx, 7
jl      short loc_1002073D
sub     ebx, 7

loc_1002073D:
mov     dl, ds:[ebp+ebx+1D3h]
inc     ebx
cmp     ebx, 7
jnz     short loc_1002074D
xor     ebx, ebx

loc_1002074D:
mov     dh, ds:[ebp+ebx+1D3h]
pop     ds
pop     ebx
pop     eax
retn
sub_10020716 endp

db  72h ; r
db    6
db  83h
db 0C4h
db  0Ch
db 0F8h
db 0EBh
db    4
db  83h
db 0C4h
db  0Ch
db 0F9h
; START OF FUNCTION CHUNK FOR sub_10020427

loc_10020765:
pushf
push    ds
push    es
pusha
push    ds
pop     es
call    sub_10020713
add     ebx, 6Ah ; 'j'
cmp     byte ptr [ebx], 0
jnz     short loc_100207AD
push    ds
push    ebx
mov     edi, ebx
add     edi, 2
mov     bl, ds:[ebp+1DAh]
and     ebx, 7
mov     ecx, 7

loc_10020791:
mov     al, ds:[ebp+ebx+1D3h]
stosb
mov     es:[edi+7], al
inc     ebx
cmp     ebx, 7
jnz     short loc_100207A6
xor     ebx, ebx

loc_100207A6:
loop    loc_10020791
pop     ebx
pop     ds
xor     byte ptr [ebx], 1

loc_100207AD:
cmp     byte ptr [ebx+1], 1
jz      short loc_100207EC
mov     eax, esp
mov     eax, ss:[eax+2Ch]
mov     [ebx-4], eax
xor     byte ptr [ebx+1], 1
mov     edi, ebx
mov     esi, ebx
add     esi, 0Ah
add     edi, 2
mov     ecx, 4
rep movsw
jmp     short loc_1002080A
; END OF FUNCTION CHUNK FOR sub_10020427
db  3Eh ; >
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
; START OF FUNCTION CHUNK FOR sub_10020427

loc_100207EC:
push    ds
call    dword ptr ds:[ebp+40h]
pop     ds
mov     [ebx+9], dh
mov     edi, ebx
mov     esi, ebx
add     esi, 2
add     edi, 0Ah
mov     ecx, 2
rep movsd
xor     byte ptr [ebx+1], 1

loc_1002080A:
mov     esi, [ebx-4]
movzx   ecx, word ptr [ebx-6]
mov     edi, ebx
add     edi, 2
push    ebx
xor     ebx, ebx

loc_10020819:
cmp     ebx, 7
jl      short loc_10020822
xor     edx, edx
jmp     short loc_10020825

loc_10020822:
mov     edx, ebx
inc     edx

loc_10020825:
mov     al, [edi+edx]
mul     bl
mov     ah, al
lodsb
xor     al, [edi+ebx]
xor     al, ah
mov     [esi-1], al
mov     al, [edi+ebx]
xor     al, [edi+edx]
add     [edi+ebx], al
cmp     byte ptr [edi+ebx], 0
jnz     short loc_10020848
mov     byte ptr [edi+ebx], 0C3h

loc_10020848:
mov     ebx, edx
loop    loc_10020819
pop     ebx
mov     bl, [ebx+1]
rcr     bl, 1
popa
pop     es
pop     ds
jnb     short loc_10020859
popf
retn

loc_10020859:
pusha
popa
popf
call    sub_1001C597
retn
; END OF FUNCTION CHUNK FOR sub_10020427



sub_10020862 proc near
mov     word ptr ds:[ebp+2A7h], 8
cmp     word ptr ds:[ebp+14h], 1
retn
sub_10020862 endp

align 4
; uintptr_t __security_cookie
___security_cookie dd 0BB40E64Eh
dword_10020878 dd 44BF19B1h
align 10h
dd offset aBadAllocation ; "bad allocation"
dd offset aBadAllocation ; "bad allocation"
off_10020888 dd offset off_10010A68
align 10h
aAvtypeInfo db '.?AVtype_info@@',0
; char *off_100208A0
off_100208A0 dd offset aBadAllocation ; "bad allocation"
align 10h
dword_100208B0 dd 1
dword_100208B4 dd 16h
db    2
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db    3
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db    4
db    0
db    0
db    0
db  18h
db    0
db    0
db    0
db    5
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db    6
db    0
db    0
db    0
db    9
db    0
db    0
db    0
db    7
db    0
db    0
db    0
db  0Ch
db    0
db    0
db    0
db    8
db    0
db    0
db    0
db  0Ch
db    0
db    0
db    0
db    9
db    0
db    0
db    0
db  0Ch
db    0
db    0
db    0
db  0Ah
db    0
db    0
db    0
db    7
db    0
db    0
db    0
db  0Bh
db    0
db    0
db    0
db    8
db    0
db    0
db    0
db  0Ch
db    0
db    0
db    0
db  16h
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  16h
db    0
db    0
db    0
db  0Fh
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db  10h
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  11h
db    0
db    0
db    0
db  12h
db    0
db    0
db    0
db  12h
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db  21h ; !
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  35h ; 5
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db  41h ; A
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  43h ; C
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db  50h ; P
db    0
db    0
db    0
db  11h
db    0
db    0
db    0
db  52h ; R
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  53h ; S
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  57h ; W
db    0
db    0
db    0
db  16h
db    0
db    0
db    0
db  59h ; Y
db    0
db    0
db    0
db  0Bh
db    0
db    0
db    0
db  6Ch ; l
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  6Dh ; m
db    0
db    0
db    0
db  20h
db    0
db    0
db    0
db  70h ; p
db    0
db    0
db    0
db  1Ch
db    0
db    0
db    0
db  72h ; r
db    0
db    0
db    0
db    9
db    0
db    0
db    0
db    6
db    0
db    0
db    0
db  16h
db    0
db    0
db    0
db  80h
db    0
db    0
db    0
db  0Ah
db    0
db    0
db    0
db  81h
db    0
db    0
db    0
db  0Ah
db    0
db    0
db    0
db  82h
db    0
db    0
db    0
db    9
db    0
db    0
db    0
db  83h
db    0
db    0
db    0
db  16h
db    0
db    0
db    0
db  84h
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db  91h
db    0
db    0
db    0
db  29h ; )
db    0
db    0
db    0
db  9Eh
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db 0A1h
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db 0A4h
db    0
db    0
db    0
db  0Bh
db    0
db    0
db    0
db 0A7h
db    0
db    0
db    0
db  0Dh
db    0
db    0
db    0
db 0B7h
db    0
db    0
db    0
db  11h
db    0
db    0
db    0
db 0CEh
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db 0D7h
db    0
db    0
db    0
db  0Bh
db    0
db    0
db    0
db  18h
db    7
db    0
db    0
db  0Ch
db    0
db    0
db    0
unk_10020A18 db  0Ch
db    0
db    0
db    0
unk_10020A1C db    8
db    0
db    0
db    0
dd offset aBadAllocation ; "bad allocation"
dword_10020A24 dd 0FFFFFFFFh
; DWORD dwTlsIndex
dwTlsIndex dd 0FFFFFFFFh
dd offset aBadAllocation ; "bad allocation"
off_10020A30 dd offset off_10010A68
align 8
aAvbadException db '.?AVbad_exception@std@@',0
unk_10020A50 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  61h ; a
db  62h ; b
db  63h ; c
db  64h ; d
db  65h ; e
db  66h ; f
db  67h ; g
db  68h ; h
db  69h ; i
db  6Ah ; j
db  6Bh ; k
db  6Ch ; l
db  6Dh ; m
db  6Eh ; n
db  6Fh ; o
db  70h ; p
db  71h ; q
db  72h ; r
db  73h ; s
db  74h ; t
db  75h ; u
db  76h ; v
db  77h ; w
db  78h ; x
db  79h ; y
db  7Ah ; z
db    0
db    0
db    0
db    0
db    0
db    0
db  41h ; A
db  42h ; B
db  43h ; C
db  44h ; D
db  45h ; E
db  46h ; F
db  47h ; G
db  48h ; H
db  49h ; I
db  4Ah ; J
db  4Bh ; K
db  4Ch ; L
db  4Dh ; M
db  4Eh ; N
db  4Fh ; O
db  50h ; P
db  51h ; Q
db  52h ; R
db  53h ; S
db  54h ; T
db  55h ; U
db  56h ; V
db  57h ; W
db  58h ; X
db  59h ; Y
db  5Ah ; Z
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
byte_10020C70 db 0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
byte_10020D78 db 0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  61h ; a
db  62h ; b
db  63h ; c
db  64h ; d
db  65h ; e
db  66h ; f
db  67h ; g
db  68h ; h
db  69h ; i
db  6Ah ; j
db  6Bh ; k
db  6Ch ; l
db  6Dh ; m
db  6Eh ; n
db  6Fh ; o
db  70h ; p
db  71h ; q
db  72h ; r
db  73h ; s
db  74h ; t
db  75h ; u
db  76h ; v
db  77h ; w
db  78h ; x
db  79h ; y
db  7Ah ; z
db    0
db    0
db    0
db    0
db    0
db    0
db  41h ; A
db  42h ; B
db  43h ; C
db  44h ; D
db  45h ; E
db  46h ; F
db  47h ; G
db  48h ; H
db  49h ; I
db  4Ah ; J
db  4Bh ; K
db  4Ch ; L
db  4Dh ; M
db  4Eh ; N
db  4Fh ; O
db  50h ; P
db  51h ; Q
db  52h ; R
db  53h ; S
db  54h ; T
db  55h ; U
db  56h ; V
db  57h ; W
db  58h ; X
db  59h ; Y
db  5Ah ; Z
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
; volatile LONG *lpAddend
lpAddend dd offset unk_10020A50
byte_10020E7C db 1
db    2
db    4
db    8
dword_10020E80 dd 3A4h
unk_10020E84 db  60h ; `
db  82h
db  79h ; y
db  82h
db  21h ; !
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_10020E90 db 0A6h
db 0DFh
db    0
db    0
db    0
db    0
db    0
db    0
db 0A1h
db 0A5h
db    0
db    0
db    0
db    0
db    0
db    0
db  81h
db  9Fh
db 0E0h
db 0FCh
db    0
db    0
db    0
db    0
db  40h ; @
db  7Eh ; ~
db  80h
db 0FCh
db    0
db    0
db    0
db    0
db 0A8h
db    3
db    0
db    0
db 0C1h
db 0A3h
db 0DAh
db 0A3h
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  81h
db 0FEh
db    0
db    0
db    0
db    0
db    0
db    0
db  40h ; @
db 0FEh
db    0
db    0
db    0
db    0
db    0
db    0
db 0B5h
db    3
db    0
db    0
db 0C1h
db 0A3h
db 0DAh
db 0A3h
db  20h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  81h
db 0FEh
db    0
db    0
db    0
db    0
db    0
db    0
db  41h ; A
db 0FEh
db    0
db    0
db    0
db    0
db    0
db    0
db 0B6h
db    3
db    0
db    0
db 0CFh
db 0A2h
db 0E4h
db 0A2h
db  1Ah
db    0
db 0E5h
db 0A2h
db 0E8h
db 0A2h
db  5Bh ; [
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  81h
db 0FEh
db    0
db    0
db    0
db    0
db    0
db    0
db  40h ; @
db  7Eh ; ~
db 0A1h
db 0FEh
db    0
db    0
db    0
db    0
db  51h ; Q
db    5
db    0
db    0
db  51h ; Q
db 0DAh
db  5Eh ; ^
db 0DAh
db  20h
db    0
db  5Fh ; _
db 0DAh
db  6Ah ; j
db 0DAh
db  32h ; 2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  81h
db 0D3h
db 0D8h
db 0DEh
db 0E0h
db 0F9h
db    0
db    0
db  31h ; 1
db  7Eh ; ~
db  81h
db 0FEh
db    0
db    0
db    0
db    0
dd offset aHH           ; "        h((((                  H"
dword_10020F74 dd 0FFFFFFFEh
unk_10020F78 db  43h ; C
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_10020F80 db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset unk_10020F78
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset unk_10020F78
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset unk_10020F78
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset unk_10020F78
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset unk_10020F78
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset off_10021640
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset asc_10011AA0  ; "         (((((                  H"
dd offset unk_10011F28
dd offset unk_100120A8
dd offset off_10021580
off_10021058 dd offset unk_10020F80
db    1
db    0
db    0
db    0
off_10021060 dd offset unk_10020F80
dd offset unk_10020A50
align 10h
dword_10021070 dd 3
align 8
dword_10021078 dd 2
; char *off_1002107C
off_1002107C dd offset aR6002FloatingP ; "R6002\r\n- floating point support not l"...
db    8
db    0
db    0
db    0
dd offset aR6008NotEnough ; "R6008\r\n- not enough space for argumen"...
db    9
db    0
db    0
db    0
dd offset aR6009NotEnough ; "R6009\r\n- not enough space for environ"...
db  0Ah
db    0
db    0
db    0
dd offset aThisApplicatio ; "\r\nThis application has requested the "...
db  10h
db    0
db    0
db    0
dd offset aR6016NotEnough ; "R6016\r\n- not enough space for thread "...
db  11h
db    0
db    0
db    0
dd offset aR6017Unexpecte ; "R6017\r\n- unexpected multithread lock "...
db  12h
db    0
db    0
db    0
dd offset aR6018Unexpecte ; "R6018\r\n- unexpected heap error\r\n"
db  13h
db    0
db    0
db    0
dd offset aR6019UnableToO ; "R6019\r\n- unable to open console devic"...
db  18h
db    0
db    0
db    0
dd offset aR6024NotEnough ; "R6024\r\n- not enough space for _onexit"...
db  19h
db    0
db    0
db    0
dd offset aR6025PureVirtu ; "R6025\r\n- pure virtual function call\r"...
db  1Ah
db    0
db    0
db    0
dd offset aR6026NotEnough ; "R6026\r\n- not enough space for stdio i"...
db  1Bh
db    0
db    0
db    0
dd offset aR6027NotEnough ; "R6027\r\n- not enough space for lowio i"...
db  1Ch
db    0
db    0
db    0
dd offset aR6028UnableToI ; "R6028\r\n- unable to initialize heap\r"...
db  1Eh
db    0
db    0
db    0
dd offset aR6030CrtNotIni ; "R6030\r\n- CRT not initialized\r\n"
db  1Fh
db    0
db    0
db    0
dd offset aR6031AttemptTo ; "R6031\r\n- Attempt to initialize the CR"...
db  20h
db    0
db    0
db    0
dd offset aR6032NotEnough ; "R6032\r\n- not enough space for locale "...
db  21h ; !
db    0
db    0
db    0
dd offset aR6033AttemptTo ; "R6033\r\n- Attempt to use MSIL code fro"...
db  22h ; "
db    0
db    0
db    0
dd offset aR6034AnApplica ; "R6034\r\nAn application has made an att"...
db  78h ; x
db    0
db    0
db    0
dd offset aDomainError  ; "DOMAIN error\r\n"
db  79h ; y
db    0
db    0
db    0
dd offset aSingError    ; "SING error\r\n"
db  7Ah ; z
db    0
db    0
db    0
dd offset aTlossError   ; "TLOSS error\r\n"
db 0FCh
db    0
db    0
db    0
dd offset asc_10010BB8  ; "\r\n"
db 0FFh
db    0
db    0
db    0
dd offset aRuntimeError ; "runtime error "
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
; LPCRITICAL_SECTION lpCriticalSection
lpCriticalSection dd 0
dword_1002113C dd 1
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_10021258 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
off_10021260 dd offset __exit
align 8
unk_10021268 db 0FFh
db 0FFh
db 0FFh
db 0FFh
db  80h
db  0Ah
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dword_100212A8 dd 3
dword_100212AC dd 7
db  78h ; x
db    0
db    0
db    0
dword_100212B4 dd 0Ah
unk_100212B8 db  20h
db    5
db  93h
db  19h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
off_100212C8 dd offset unk_100222E0
align 10h
dd offset unk_100222E0
db    1
db    1
db    0
db    0
unk_100212D8 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db  10h
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db    2
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_10021338 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_10021528 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
; char *Str
Str dd offset aNull     ; "(null)"
off_1002154C dd offset aNull_0 ; "(null)"
off_10021550 dd offset __fptrap
dd offset __fptrap
dd offset __fptrap
dd offset __fptrap
dd offset __fptrap
dd offset __fptrap
off_10021568 dd offset __fptrap
dd offset __fptrap
off_10021570 dd offset __fptrap
off_10021574 dd offset __fptrap
dd offset asc_10011AA0  ; "         (((((                  H"
dd offset unk_10011CA2
off_10021580 dd offset unk_100122D0
dd offset unk_100122CC
dd offset unk_100122C8
dd offset unk_100122C4
dd offset unk_100122C0
dd offset unk_100122BC
dd offset byte_100122B8
dd offset aSunday       ; "Sunday"
dd offset aMonday       ; "Monday"
dd offset aTuesday      ; "Tuesday"
dd offset aWednesday    ; "Wednesday"
dd offset aThursday     ; "Thursday"
dd offset aFriday       ; "Friday"
dd offset aSaturday     ; "Saturday"
dd offset unk_10012270
dd offset unk_1001226C
dd offset unk_10012268
dd offset unk_10012264
dd offset unk_10012260
dd offset unk_1001225C
dd offset unk_10012258
dd offset unk_10012254
dd offset unk_10012250
dd offset unk_1001224C
dd offset unk_10012248
dd offset unk_10012244
dd offset aJanuary      ; "January"
dd offset aFebruary     ; "February"
dd offset aMarch        ; "March"
dd offset aApril        ; "April"
dd offset unk_10012260
dd offset aJune         ; "June"
dd offset aJuly         ; "July"
dd offset aAugust       ; "August"
dd offset aSeptember    ; "September"
dd offset aOctober      ; "October"
dd offset aNovember     ; "November"
dd offset aDecember     ; "December"
dd offset unk_100121D8
dd offset unk_100121D4
dd offset aMmDdYy       ; "MM/dd/yy"
dd offset aDdddMmmmDdYyyy ; "dddd, MMMM dd, yyyy"
dd offset aHhMmSs       ; "HH:mm:ss"
db    9
db    4
db    0
db    0
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset off_10021580
unk_1002163C db  2Eh ; .
db    0
db    0
db    0
off_10021640 dd offset unk_1002163C
off_10021644 dd offset unk_100221C8
off_10021648 dd offset unk_100221C8
off_1002164C dd offset unk_100221C8
off_10021650 dd offset unk_100221C8
off_10021654 dd offset unk_100221C8
off_10021658 dd offset unk_100221C8
off_1002165C dd offset unk_100221C8
off_10021660 dd offset unk_100221C8
off_10021664 dd offset unk_100221C8
db  7Fh ; 
db  7Fh ; 
db  7Fh ; 
db  7Fh ; 
db  7Fh ; 
db  7Fh ; 
db  7Fh ; 
db  7Fh ; 
dd offset off_10021640
db    1
db    0
db    0
db    0
db  2Eh ; .
db    0
db    0
db    0
db    1
db    0
db    0
db    0
dword_10021680 dd 2
align 8
db  80h
db  70h ; p
db    0
db    0
db    1
db    0
db    0
db    0
db 0F0h
db 0F1h
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
unk_10021698 db  50h ; P
db  53h ; S
db  54h ; T
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_100216D8 db  50h ; P
db  44h ; D
db  54h ; T
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset unk_10021698
dd offset unk_100216D8
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
; HANDLE dword_10021738
dword_10021738 dd 0FFFFFFFEh
; HANDLE hObject
hObject dd 0FFFFFFFEh
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db  1Eh
db    0
db    0
db    0
db  3Bh ; ;
db    0
db    0
db    0
db  5Ah ; Z
db    0
db    0
db    0
db  78h ; x
db    0
db    0
db    0
db  97h
db    0
db    0
db    0
db 0B5h
db    0
db    0
db    0
db 0D4h
db    0
db    0
db    0
db 0F3h
db    0
db    0
db    0
db  11h
db    1
db    0
db    0
db  30h ; 0
db    1
db    0
db    0
db  4Eh ; N
db    1
db    0
db    0
db  6Dh ; m
db    1
db    0
db    0
db 0FFh
db 0FFh
db 0FFh
db 0FFh
db  1Eh
db    0
db    0
db    0
db  3Ah ; :
db    0
db    0
db    0
db  59h ; Y
db    0
db    0
db    0
db  77h ; w
db    0
db    0
db    0
db  96h
db    0
db    0
db    0
db 0B4h
db    0
db    0
db    0
db 0D3h
db    0
db    0
db    0
db 0F2h
db    0
db    0
db    0
db  10h
db    1
db    0
db    0
db  2Fh ; /
db    1
db    0
db    0
db  4Dh ; M
db    1
db    0
db    0
db  6Ch ; l
db    1
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dd offset aBadAllocation ; "bad allocation"
off_100217B4 dd offset off_10010A68
db    0
db    0
db    0
db    0
db  2Eh ; .
db  3Fh ; ?
db  41h ; A
db  56h ; V
db  6Fh ; o
db  75h ; u
db  74h ; t
db  5Fh ; _
db  6Fh ; o
db  66h ; f
db  5Fh ; _
db  72h ; r
db  61h ; a
db  6Eh ; n
db  67h ; g
db  65h ; e
db  40h ; @
db  73h ; s
db  74h ; t
db  64h ; d
db  40h ; @
db  40h ; @
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
unk_100217E0 db    0
db    0
db    0
db    0
db    0
db    0
db    0
db    0
dword_100217E8 dd 0
unk_100217EC db    0
db    0
db    0
db    0
; struct _RTL_CRITICAL_SECTION CriticalSection
CriticalSection _RTL_CRITICAL_SECTION <?>
; std::bad_alloc dword_10021808
dword_10021808 dd ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_10021814 dd ?
dword_10021818 dd ?
dword_1002181C dd ?
; char *dword_10021820
dword_10021820 dd ?
align 8
dword_10021828 dd ?
dword_1002182C dd ?
dword_10021830 dd ?
dword_10021834 dd ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_1002183C dd ?
align 80h
dword_10021880 dd ?
align 8
dword_10021888 dd ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
word_10021914 dw ?
align 4
word_10021918 dw ?
align 4
word_1002191C dw ?
align 10h
word_10021920 dw ?
align 4
dword_10021924 dd ?
dword_10021928 dd ?
dword_1002192C dd ?
dword_10021930 dd ?
dword_10021934 dd ?
dword_10021938 dd ?
dword_1002193C dd ?
dword_10021940 dd ?
word_10021944 dw ?
align 4
dword_10021948 dd ?
dword_1002194C dd ?
word_10021950 dw ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
unk_10021B54 db    ? ;
db    ? ;
db    ? ;
db    ? ;
; void *Block
Block dd ?
dword_10021B5C dd ?
dword_10021B60 dd ?
; LPVOID lpTlsValue
lpTlsValue dd ?
dword_10021B68 dd ?
dword_10021B6C dd ?
dword_10021B70 dd ?
dword_10021B74 dd ?
word_10021B78 dw ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_10021B84 dd ?
dword_10021B88 dd ?
dword_10021B8C dd ?
dword_10021B90 dd ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_10021BB4 dd ?
; char Destination[25]
Destination db 19h dup(?)
; CHAR Filename[260]
Filename db 104h dup(?)
byte_10021CD5 db ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
unk_10021ECC db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_10021ED4 dd ?
; HANDLE hHeap
hHeap dd ?
align 10h
unk_10021EE0 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
; void *dword_10022030
dword_10022030 dd ?
dword_10022034 dd ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_1002203C dd ?
dword_10022040 dd ?
align 8
; void *dword_10022048
dword_10022048 dd ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_10022058 dd ?
align 10h
byte_10022060 db ?
align 4
dword_10022064 dd ?
dword_10022068 dd ?
align 10h
; CHAR byte_10022070[260]
byte_10022070 db 104h dup(?)
byte_10022174 db ?
align 4
dword_10022178 dd ?
dword_1002217C dd ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_100221BC dd ?
dword_100221C0 dd ?
dword_100221C4 dd ?
unk_100221C8 db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_100221CC dd ?
dword_100221D0 dd ?
dword_100221D4 dd ?
dword_100221D8 dd ?
align 10h
dword_100221E0 dd ?
dword_100221E4 dd ?
dword_100221E8 dd ?
dword_100221EC dd ?
dword_100221F0 dd ?
dword_100221F4 dd ?
dword_100221F8 dd ?
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
; void *dword_100222C0
dword_100222C0 dd ?
align 20h
unk_100222E0 db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
db    ? ;
dword_100232E0 dd ?
; UINT uNumber
uNumber dd ?
align 20h
dword_10023300 dd ?
align 100h
dword_10023400 dd ?
dword_10023404 dd ?
dword_10023408 dd ?
dword_1002340C dd ?
dword_10023410 dd ?
dword_10023414 dd ?
dword_10023418 dd ?
; LPVOID lpMem
lpMem dd ?
dword_10023420 dd ?
dword_10023424 dd ?
dword_10023428 dd ?
dword_1002342C dd ?
dword_10023430 dd ?
dword_10023434 dd ?
dword_10023438 dd ?
dword_1002343C dd ?
align 1000h
_data ends


end DllEntryPoint
